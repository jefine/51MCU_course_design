C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE PUBLIC
OBJECT MODULE PLACED IN .\build\Release\public.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\HDL\PUBLIC.C PRINT(.\build\Release\public.lst) OMF2 TABS(4) CO
                    -DE NOCOND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src\user;.\src\HDL) DEFINE(__UVISIO
                    -N_VERSION=526) OBJECT(.\build\Release\public.o)

line level    source

   1          #include "public.h"
   2          #include "REG52.H"
   3          #include "uart.h"
   4          #include "XPT2046.h"
   5          #include "tempe.h"
   6          #include "lcd.h"
   7          char num=0;
   8          uchar DisplayData[8];
   9          uchar code smgduan[10] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
  10          //10us
  11          void delay(uint i)
  12          {
  13   1          while(i--); 
  14   1      }
  15          
  16          
  17          //温度读取处理转换函数
  18          
  19          int dataprosTemp(int temp)   
  20          {
  21   1          float tp;  
  22   1          if(temp< 0)             //当温度值为负数
  23   1          {
  24   2              DisplayData[0] = 0x40;    //   -
  25   2              //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
  26   2              temp=temp-1;
  27   2              temp=~temp;
  28   2              tp=temp;
  29   2              temp=tp*0.0625*100+0.5; 
  30   2              //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  31   2              //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  32   2              //算加上0.5，还是在小数点后面。
  33   2          }
  34   1          else
  35   1          {           
  36   2              DisplayData[0] = 0x00;
  37   2              tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
  38   2              //如果温度是正的那么，那么正数的原码就是补码它本身
  39   2              temp=tp*0.0625*100+0.5; 
  40   2              //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  41   2              //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  42   2              //算加上0.5，还是在小数点后面。
  43   2          }
  44   1          DisplayData[1] = smgduan[temp / 10000];
  45   1          DisplayData[2] = smgduan[temp % 10000 / 1000];
  46   1          DisplayData[3] = smgduan[temp % 1000 / 100] | 0x80;
  47   1          DisplayData[4] = smgduan[temp % 100 / 10];
  48   1          DisplayData[5] = smgduan[temp % 10];
  49   1      
  50   1          return temp;
  51   1      }
  52          
  53          
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 2   

  54          //数码管
  55          void DigDisplay()
  56          {
  57   1          uchar i;
  58   1          
  59   1          for(i=0;i<6;i++)
  60   1          {
  61   2              switch(i)    //位选，选择点亮的数码管，
  62   2              {
  63   3                  case(0):
  64   3                      LSA=0;LSB=0;LSC=0; break;//显示第0位
  65   3                  case(1):
  66   3                      LSA=1;LSB=0;LSC=0; break;//显示第1位
  67   3                  case(2):
  68   3                      LSA=0;LSB=1;LSC=0; break;//显示第2位
  69   3                  case(3):
  70   3                      LSA=1;LSB=1;LSC=0; break;//显示第3位
  71   3                  case(4):
  72   3                      LSA=0;LSB=0;LSC=1; break;//显示第4位
  73   3                  case(5):
  74   3                      LSA=1;LSB=0;LSC=1; break;//显示第5位    
  75   3              }
  76   2              P0=DisplayData[5-i];//发送数据
  77   2              Delay1ms(1);
  78   2              //delay(100); //间隔一段时间扫描    
  79   2              P0=0x00;//消隐
  80   2          }       
  81   1      }
  82          
  83          void sendtemp(){
  84   1              int temp = dataprosTemp(Ds18b20ReadTemp());
  85   1              DataPackage_DS18B20[8] = (char)(temp / 10000)+'0';
  86   1              DataPackage_DS18B20[9] = (char)(temp % 10000 / 1000)+'0';
  87   1              DataPackage_DS18B20[10] = (char)(temp % 1000 / 100)+'0';
  88   1              DataPackage_DS18B20[11] = '.';
  89   1              DataPackage_DS18B20[12] = (char)(temp % 100 / 10)+'0';
  90   1              DataPackage_DS18B20[13] = (char)(temp % 10)+'0';
  91   1              PutString(DataPackage_DS18B20);
  92   1              LcdDisplayTemp(DataPackage_DS18B20);
  93   1      }
  94          
  95          void sendprad(){
  96   1          int temp;
  97   1          temp = Read_AD_Data(0xA4);      // 光敏电阻
  98   1          DataPackage_XPT2046[8] = (char)(temp/1000)+'0';//千位
  99   1          DataPackage_XPT2046[9] = (char)(temp%1000/100)+'0';//百位
 100   1          DataPackage_XPT2046[10] = (char)(temp%1000%100/10)+'0';//十位
 101   1          DataPackage_XPT2046[11] = (char)(temp%1000%100%10)+'0';//个位
 102   1          PutString(DataPackage_XPT2046);
 103   1          LcdDisplayPrad(DataPackage_XPT2046);
 104   1      }
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 11
;---- Variable 'i' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 12
0000         ?C0001:
                                           ; SOURCE LINE # 13
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AC06              MOV     R4,AR6
0004 7001              JNZ     ?C0020
0006 1E                DEC     R6
0007         ?C0020:
0007 4C                ORL     A,R4
0008 70F6              JNZ     ?C0001
                                           ; SOURCE LINE # 14
000A 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION _dataprosTemp (BEGIN)
                                           ; SOURCE LINE # 19
;---- Variable 'temp' assigned to Register 'R2/R3' ----
0000 AB07              MOV     R3,AR7
0002 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 22
0004 C3                CLR     C
0005 EA                MOV     A,R2
0006 6480              XRL     A,#080H
0008 9480              SUBB    A,#080H
000A 5010              JNC     ?C0004
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
000C 750040      R     MOV     DisplayData,#040H
                                           ; SOURCE LINE # 26
000F EB                MOV     A,R3
0010 1B                DEC     R3
0011 7001              JNZ     ?C0021
0013 1A                DEC     R2
0014         ?C0021:
                                           ; SOURCE LINE # 27
0014 6303FF            XRL     AR3,#0FFH
0017 6302FF            XRL     AR2,#0FFH
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 33
001A 8003              SJMP    ?C0022
001C         ?C0004:
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
001C E4                CLR     A
001D F500        R     MOV     DisplayData,A
                                           ; SOURCE LINE # 37
001F         ?C0022:
001F AD03              MOV     R5,AR3
0021 AC02              MOV     R4,AR2
0023 EC                MOV     A,R4
0024 120000      E     LCALL   ?C?FCASTI
0027 8F00        R     MOV     tp+03H,R7
0029 8E00        R     MOV     tp+02H,R6
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 4   

002B 8D00        R     MOV     tp+01H,R5
002D 8C00        R     MOV     tp,R4
                                           ; SOURCE LINE # 39
002F E4                CLR     A
0030 FF                MOV     R7,A
0031 FE                MOV     R6,A
0032 7DC8              MOV     R5,#0C8H
0034 7C40              MOV     R4,#040H
0036 AB00        R     MOV     R3,tp+03H
0038 AA00        R     MOV     R2,tp+02H
003A A900        R     MOV     R1,tp+01H
003C A800        R     MOV     R0,tp
003E 120000      E     LCALL   ?C?FPMUL
0041 E4                CLR     A
0042 FB                MOV     R3,A
0043 FA                MOV     R2,A
0044 F9                MOV     R1,A
0045 783F              MOV     R0,#03FH
0047 120000      E     LCALL   ?C?FPADD
004A 120000      E     LCALL   ?C?CASTF
004D AA06              MOV     R2,AR6
004F AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 43
0051         ?C0005:
                                           ; SOURCE LINE # 44
0051 7C27              MOV     R4,#027H
0053 7D10              MOV     R5,#010H
0055 AF03              MOV     R7,AR3
0057 AE02              MOV     R6,AR2
0059 120000      E     LCALL   ?C?SIDIV
005C 7400        R     MOV     A,#LOW smgduan
005E 2F                ADD     A,R7
005F F582              MOV     DPL,A
0061 7400        R     MOV     A,#HIGH smgduan
0063 3E                ADDC    A,R6
0064 F583              MOV     DPH,A
0066 E4                CLR     A
0067 93                MOVC    A,@A+DPTR
0068 F500        R     MOV     DisplayData+01H,A
                                           ; SOURCE LINE # 45
006A 7C27              MOV     R4,#027H
006C 7D10              MOV     R5,#010H
006E AF03              MOV     R7,AR3
0070 AE02              MOV     R6,AR2
0072 120000      E     LCALL   ?C?SIDIV
0075 7E03              MOV     R6,#03H
0077 7FE8              MOV     R7,#0E8H
0079 CF                XCH     A,R7
007A CD                XCH     A,R5
007B CF                XCH     A,R7
007C CE                XCH     A,R6
007D CC                XCH     A,R4
007E CE                XCH     A,R6
007F 120000      E     LCALL   ?C?SIDIV
0082 7400        R     MOV     A,#LOW smgduan
0084 2F                ADD     A,R7
0085 F582              MOV     DPL,A
0087 7400        R     MOV     A,#HIGH smgduan
0089 3E                ADDC    A,R6
008A F583              MOV     DPH,A
008C E4                CLR     A
008D 93                MOVC    A,@A+DPTR
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 5   

008E F500        R     MOV     DisplayData+02H,A
                                           ; SOURCE LINE # 46
0090 7C03              MOV     R4,#03H
0092 7DE8              MOV     R5,#0E8H
0094 AF03              MOV     R7,AR3
0096 AE02              MOV     R6,AR2
0098 120000      E     LCALL   ?C?SIDIV
009B 7E00              MOV     R6,#00H
009D 7F64              MOV     R7,#064H
009F CF                XCH     A,R7
00A0 CD                XCH     A,R5
00A1 CF                XCH     A,R7
00A2 CE                XCH     A,R6
00A3 CC                XCH     A,R4
00A4 CE                XCH     A,R6
00A5 120000      E     LCALL   ?C?SIDIV
00A8 7400        R     MOV     A,#LOW smgduan
00AA 2F                ADD     A,R7
00AB F582              MOV     DPL,A
00AD 7400        R     MOV     A,#HIGH smgduan
00AF 3E                ADDC    A,R6
00B0 F583              MOV     DPH,A
00B2 E4                CLR     A
00B3 93                MOVC    A,@A+DPTR
00B4 4480              ORL     A,#080H
00B6 F500        R     MOV     DisplayData+03H,A
                                           ; SOURCE LINE # 47
00B8 7C00              MOV     R4,#00H
00BA 7D64              MOV     R5,#064H
00BC AF03              MOV     R7,AR3
00BE AE02              MOV     R6,AR2
00C0 120000      E     LCALL   ?C?SIDIV
00C3 7E00              MOV     R6,#00H
00C5 7F0A              MOV     R7,#0AH
00C7 CF                XCH     A,R7
00C8 CD                XCH     A,R5
00C9 CF                XCH     A,R7
00CA CE                XCH     A,R6
00CB CC                XCH     A,R4
00CC CE                XCH     A,R6
00CD 120000      E     LCALL   ?C?SIDIV
00D0 7400        R     MOV     A,#LOW smgduan
00D2 2F                ADD     A,R7
00D3 F582              MOV     DPL,A
00D5 7400        R     MOV     A,#HIGH smgduan
00D7 3E                ADDC    A,R6
00D8 F583              MOV     DPH,A
00DA E4                CLR     A
00DB 93                MOVC    A,@A+DPTR
00DC F500        R     MOV     DisplayData+04H,A
                                           ; SOURCE LINE # 48
00DE 7C00              MOV     R4,#00H
00E0 7D0A              MOV     R5,#0AH
00E2 AF03              MOV     R7,AR3
00E4 AE02              MOV     R6,AR2
00E6 120000      E     LCALL   ?C?SIDIV
00E9 7400        R     MOV     A,#LOW smgduan
00EB 2D                ADD     A,R5
00EC F582              MOV     DPL,A
00EE 7400        R     MOV     A,#HIGH smgduan
00F0 3C                ADDC    A,R4
00F1 F583              MOV     DPH,A
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 6   

00F3 E4                CLR     A
00F4 93                MOVC    A,@A+DPTR
00F5 F500        R     MOV     DisplayData+05H,A
                                           ; SOURCE LINE # 50
00F7 AE02              MOV     R6,AR2
00F9 AF03              MOV     R7,AR3
                                           ; SOURCE LINE # 51
00FB 22                RET     
             ; FUNCTION _dataprosTemp (END)

             ; FUNCTION DigDisplay (BEGIN)
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 59
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003         ?C0007:
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0003 E500        R     MOV     A,i
0005 14                DEC     A
0006 6014              JZ      ?C0012
0008 14                DEC     A
0009 6019              JZ      ?C0013
000B 14                DEC     A
000C 601A              JZ      ?C0014
000E 14                DEC     A
000F 601F              JZ      ?C0015
0011 14                DEC     A
0012 6020              JZ      ?C0016
0014 2405              ADD     A,#05H
0016 7022              JNZ     ?C0010
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
0018         ?C0011:
                                           ; SOURCE LINE # 64
0018 C2A2              CLR     LSA
001A 8002              SJMP    ?C0023
                                           ; SOURCE LINE # 65
001C         ?C0012:
                                           ; SOURCE LINE # 66
001C D2A2              SETB    LSA
001E         ?C0023:
001E C2A3              CLR     LSB
0020 C2A4              CLR     LSC
0022 8016              SJMP    ?C0010
                                           ; SOURCE LINE # 67
0024         ?C0013:
                                           ; SOURCE LINE # 68
0024 C2A2              CLR     LSA
0026 8002              SJMP    ?C0024
                                           ; SOURCE LINE # 69
0028         ?C0014:
                                           ; SOURCE LINE # 70
0028 D2A2              SETB    LSA
002A         ?C0024:
002A D2A3              SETB    LSB
002C C2A4              CLR     LSC
002E 800A              SJMP    ?C0010
                                           ; SOURCE LINE # 71
0030         ?C0015:
                                           ; SOURCE LINE # 72
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 7   

0030 C2A2              CLR     LSA
0032 8002              SJMP    ?C0025
                                           ; SOURCE LINE # 73
0034         ?C0016:
                                           ; SOURCE LINE # 74
0034 D2A2              SETB    LSA
0036         ?C0025:
0036 C2A3              CLR     LSB
0038 D2A4              SETB    LSC
                                           ; SOURCE LINE # 75
003A         ?C0010:
                                           ; SOURCE LINE # 76
003A C3                CLR     C
003B 7405              MOV     A,#05H
003D 9500        R     SUBB    A,i
003F 2400        R     ADD     A,#LOW DisplayData
0041 F8                MOV     R0,A
0042 E6                MOV     A,@R0
0043 F580              MOV     P0,A
                                           ; SOURCE LINE # 77
0045 7F01              MOV     R7,#01H
0047 7E00              MOV     R6,#00H
0049 120000      E     LCALL   _Delay1ms
                                           ; SOURCE LINE # 79
004C E4                CLR     A
004D F580              MOV     P0,A
                                           ; SOURCE LINE # 80
004F 0500        R     INC     i
0051 E500        R     MOV     A,i
0053 C3                CLR     C
0054 9406              SUBB    A,#06H
0056 40AB              JC      ?C0007
                                           ; SOURCE LINE # 81
0058         ?C0017:
0058 22                RET     
             ; FUNCTION DigDisplay (END)

             ; FUNCTION sendtemp (BEGIN)
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0000 120000      E     LCALL   Ds18b20ReadTemp
0003 120000      R     LCALL   _dataprosTemp
;---- Variable 'temp' assigned to Register 'R2/R3' ----
0006 AB07              MOV     R3,AR7
0008 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 85
000A 7C27              MOV     R4,#027H
000C 7D10              MOV     R5,#010H
000E 120000      E     LCALL   ?C?SIDIV
0011 EF                MOV     A,R7
0012 2430              ADD     A,#030H
0014 F500        E     MOV     DataPackage_DS18B20+08H,A
                                           ; SOURCE LINE # 86
0016 7C27              MOV     R4,#027H
0018 7D10              MOV     R5,#010H
001A AF03              MOV     R7,AR3
001C AE02              MOV     R6,AR2
001E 120000      E     LCALL   ?C?SIDIV
0021 7E03              MOV     R6,#03H
0023 7FE8              MOV     R7,#0E8H
0025 CF                XCH     A,R7
0026 CD                XCH     A,R5
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 8   

0027 CF                XCH     A,R7
0028 CE                XCH     A,R6
0029 CC                XCH     A,R4
002A CE                XCH     A,R6
002B 120000      E     LCALL   ?C?SIDIV
002E EF                MOV     A,R7
002F 2430              ADD     A,#030H
0031 F500        E     MOV     DataPackage_DS18B20+09H,A
                                           ; SOURCE LINE # 87
0033 7C03              MOV     R4,#03H
0035 7DE8              MOV     R5,#0E8H
0037 AF03              MOV     R7,AR3
0039 AE02              MOV     R6,AR2
003B 120000      E     LCALL   ?C?SIDIV
003E 7E00              MOV     R6,#00H
0040 7F64              MOV     R7,#064H
0042 CF                XCH     A,R7
0043 CD                XCH     A,R5
0044 CF                XCH     A,R7
0045 CE                XCH     A,R6
0046 CC                XCH     A,R4
0047 CE                XCH     A,R6
0048 120000      E     LCALL   ?C?SIDIV
004B EF                MOV     A,R7
004C 2430              ADD     A,#030H
004E F500        E     MOV     DataPackage_DS18B20+0AH,A
                                           ; SOURCE LINE # 88
0050 75002E      E     MOV     DataPackage_DS18B20+0BH,#02EH
                                           ; SOURCE LINE # 89
0053 7C00              MOV     R4,#00H
0055 7D64              MOV     R5,#064H
0057 AF03              MOV     R7,AR3
0059 AE02              MOV     R6,AR2
005B 120000      E     LCALL   ?C?SIDIV
005E 7E00              MOV     R6,#00H
0060 7F0A              MOV     R7,#0AH
0062 CF                XCH     A,R7
0063 CD                XCH     A,R5
0064 CF                XCH     A,R7
0065 CE                XCH     A,R6
0066 CC                XCH     A,R4
0067 CE                XCH     A,R6
0068 120000      E     LCALL   ?C?SIDIV
006B EF                MOV     A,R7
006C 2430              ADD     A,#030H
006E F500        E     MOV     DataPackage_DS18B20+0CH,A
                                           ; SOURCE LINE # 90
0070 AE02              MOV     R6,AR2
0072 AF03              MOV     R7,AR3
0074 7C00              MOV     R4,#00H
0076 7D0A              MOV     R5,#0AH
0078 120000      E     LCALL   ?C?SIDIV
007B ED                MOV     A,R5
007C 2430              ADD     A,#030H
007E F500        E     MOV     DataPackage_DS18B20+0DH,A
                                           ; SOURCE LINE # 91
0080 7B00              MOV     R3,#00H
0082 7A00        E     MOV     R2,#HIGH DataPackage_DS18B20
0084 7900        E     MOV     R1,#LOW DataPackage_DS18B20
0086 120000      E     LCALL   _PutString
                                           ; SOURCE LINE # 92
0089 7B00              MOV     R3,#00H
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 9   

008B 7A00        E     MOV     R2,#HIGH DataPackage_DS18B20
008D 7900        E     MOV     R1,#LOW DataPackage_DS18B20
008F 020000      E     LJMP    _LcdDisplayTemp
             ; FUNCTION sendtemp (END)

             ; FUNCTION sendprad (BEGIN)
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 97
0000 7FA4              MOV     R7,#0A4H
0002 120000      E     LCALL   _Read_AD_Data
;---- Variable 'temp' assigned to Register 'R2/R3' ----
0005 AB07              MOV     R3,AR7
0007 AA06              MOV     R2,AR6
                                           ; SOURCE LINE # 98
0009 7C03              MOV     R4,#03H
000B 7DE8              MOV     R5,#0E8H
000D 120000      E     LCALL   ?C?SIDIV
0010 EF                MOV     A,R7
0011 2430              ADD     A,#030H
0013 F500        E     MOV     DataPackage_XPT2046+08H,A
                                           ; SOURCE LINE # 99
0015 7C03              MOV     R4,#03H
0017 7DE8              MOV     R5,#0E8H
0019 AF03              MOV     R7,AR3
001B AE02              MOV     R6,AR2
001D 120000      E     LCALL   ?C?SIDIV
0020 7E00              MOV     R6,#00H
0022 7F64              MOV     R7,#064H
0024 CF                XCH     A,R7
0025 CD                XCH     A,R5
0026 CF                XCH     A,R7
0027 CE                XCH     A,R6
0028 CC                XCH     A,R4
0029 CE                XCH     A,R6
002A 120000      E     LCALL   ?C?SIDIV
002D EF                MOV     A,R7
002E 2430              ADD     A,#030H
0030 F500        E     MOV     DataPackage_XPT2046+09H,A
                                           ; SOURCE LINE # 100
0032 7C03              MOV     R4,#03H
0034 7DE8              MOV     R5,#0E8H
0036 AF03              MOV     R7,AR3
0038 AE02              MOV     R6,AR2
003A 120000      E     LCALL   ?C?SIDIV
003D 7E00              MOV     R6,#00H
003F 7F64              MOV     R7,#064H
0041 CF                XCH     A,R7
0042 CD                XCH     A,R5
0043 CF                XCH     A,R7
0044 CE                XCH     A,R6
0045 CC                XCH     A,R4
0046 CE                XCH     A,R6
0047 120000      E     LCALL   ?C?SIDIV
004A 7E00              MOV     R6,#00H
004C 7F0A              MOV     R7,#0AH
004E CF                XCH     A,R7
004F CD                XCH     A,R5
0050 CF                XCH     A,R7
0051 CE                XCH     A,R6
0052 CC                XCH     A,R4
0053 CE                XCH     A,R6
0054 120000      E     LCALL   ?C?SIDIV
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 10  

0057 EF                MOV     A,R7
0058 2430              ADD     A,#030H
005A F500        E     MOV     DataPackage_XPT2046+0AH,A
                                           ; SOURCE LINE # 101
005C AE02              MOV     R6,AR2
005E AF03              MOV     R7,AR3
0060 7C03              MOV     R4,#03H
0062 7DE8              MOV     R5,#0E8H
0064 120000      E     LCALL   ?C?SIDIV
0067 7E00              MOV     R6,#00H
0069 7F64              MOV     R7,#064H
006B CF                XCH     A,R7
006C CD                XCH     A,R5
006D CF                XCH     A,R7
006E CE                XCH     A,R6
006F CC                XCH     A,R4
0070 CE                XCH     A,R6
0071 120000      E     LCALL   ?C?SIDIV
0074 7E00              MOV     R6,#00H
0076 7F0A              MOV     R7,#0AH
0078 CF                XCH     A,R7
0079 CD                XCH     A,R5
007A CF                XCH     A,R7
007B CE                XCH     A,R6
007C CC                XCH     A,R4
007D CE                XCH     A,R6
007E 120000      E     LCALL   ?C?SIDIV
0081 ED                MOV     A,R5
0082 2430              ADD     A,#030H
0084 F500        E     MOV     DataPackage_XPT2046+0BH,A
                                           ; SOURCE LINE # 102
0086 7B00              MOV     R3,#00H
0088 7A00        E     MOV     R2,#HIGH DataPackage_XPT2046
008A 7900        E     MOV     R1,#LOW DataPackage_XPT2046
008C 120000      E     LCALL   _PutString
                                           ; SOURCE LINE # 103
008F 7B00              MOV     R3,#00H
0091 7A00        E     MOV     R2,#HIGH DataPackage_XPT2046
0093 7900        E     MOV     R1,#LOW DataPackage_XPT2046
0095 020000      E     LJMP    _LcdDisplayPrad
             ; FUNCTION sendprad (END)

C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 11  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


Ds18b20ReadTemp. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
_Delay1ms. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
_LcdDisplayTemp. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
CS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
LCD1602_RS . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
LCD1602_RW . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
DataPackage_DS18B20. . . . . . . . . .  EXTERN   DATA   ARRAY    -----  16
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_PutString . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
led. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
DOUT . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
_Read_AD_Data. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
LCD1602_E. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
num. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     0000H  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
sendprad . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
DisplayData. . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0001H  8
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
DataPackage_XPT2046. . . . . . . . . .  EXTERN   DATA   ARRAY    -----  16
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
CLK. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
DIN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DSPORT . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
LSA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
LSB. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
LSC. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
sendtemp . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
DigDisplay . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
smgduan. . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  10
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
_LcdDisplayPrad. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
_dataprosTemp. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  temp . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
  tp . . . . . . . . . . . . . . . . .  AUTO     DATA   FLOAT    0000H  4

C51 COMPILER V9.57.0.0   PUBLIC                                                            06/22/2021 19:30:07 PAGE 13  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    650    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
