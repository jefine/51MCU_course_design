C51 COMPILER V9.57.0.0   MAIN1                                                             06/22/2021 20:17:54 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN1
OBJECT MODULE PLACED IN .\Objects\main1.obj
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.EXE main1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main1.lst) TABS(2) OBJECT(.\Objects\main1.obj)

line level    source

   1          #include <reg52.h> 
   2          #define uchar unsigned char 
   3          #define uint unsigned int //sbit duan=P3^6; 
   4          sbit key1=P3^2;//按 key1可暂停歌曲
   5          sbit key2=P3^3;//按 key2可切换歌曲
   6          sbit fm=P1^5;//蜂鸣器连续的 IO 口
   7          sbit KK=P2^0; //点亮一个数码管
   8          uchar count2=0;//歌曲标志
   9          uchar timeh,timel,i; 
  10          /***********************************************************/ 
  11          uchar code DSY_table[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80, //0~8 
  12          0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e,0x8f}; 
  13          //9,A~F 
  14          uint code tone_delay_table[]={ 64021,64103,64260,64400,64524,64580,64684, 
  15          64777,64820,64898,64968,65030,65058,65110,65157,65178}; // 各音符对应的延时
  16          uchar keyno; //定义按键得到的初值
  17          void delay_ms(uchar x) //延时子函数
  18          { uchar i; 
  19   1      while(x--) 
  20   1      for(i=0;i<120;i++); 
  21   1      } 
  22          void keys_scan() //键盘扫描子函数
  23          { uchar tmp,k; 
  24   1      P1=0x0f; //高四位置 0 ，放入四行
  25   1      delay_ms(2); 
  26   1      //按键后 00001111将变成 0000xxxx,x 中 1 个为 0，3 个仍为 1 
  27   1      //下面的异或操作会把 3个 1 变成 0，唯一的 0 变成 1 
  28   1      tmp=P1^0x0f; //判断按键发生于 0~3 列中的哪一列
  29   1      switch(tmp) 
  30   1      {case 1:k=0; break; 
  31   2      case 2:k=1; break; 
  32   2      case 4:k=2; break; 
  33   2      case 8:k=3; break; 
  34   2      default:return;//无按键按下
  35   2      } 
  36   1      P1=0xf0; //低四位置 0，放入四列
  37   1      delay_ms(2); 
  38   1      tmp=(P1>>4)^0x0f; //按键后 11110000将变成 xxxx0000,x 中 1 个为 0，3 个
  39   1      //仍为 1，将高四位移至低四位，并将其中唯一的 0 变成 1，其余为 0 
  40   1      //对 0~3 行分别附加其初始值 0，4，8，12 
  41   1      switch(tmp) 
  42   1      {case 1:k+=0; break; 
  43   2      case 2:k+=4; break; 
  44   2      case 4:k+=8; break; 
  45   2      case 8:k+=12; break; 
  46   2      default:return;} 
  47   1      keyno=k; //将 k 的值赋给 keyno 由数码管输出
  48   1      } 
  49          //--------------------------- 简谱--------------------------------------- 
  50          //编程规则 :字节高位是简谱 ,低位是持续时间 , 
  51          //代表多少个十六分音符
  52          //1-7 代表中央 C 调,8-E 代表高八度 ,0 代表停顿
  53          //最后的 0 是结束标志
  54          uchar code qnzl[]={ //千年之恋
C51 COMPILER V9.57.0.0   MAIN1                                                             06/22/2021 20:17:54 PAGE 2   

  55          0x12,0x22,0x34,0x84,0x74,0x54,0x38,0x42,0x32,0x22,0x42,0x34,0x84,0x72,0x82,0x94,0xA8,0x08, 0x32,0x31,0x21,
             -0x32,0x52,0x32,0x31,0x21,0x32,0x62, 
  56          0x32,0x31,0x21,0x32,0x82,0x71,0x81,0x71,0x51,0x32,0x22, 
  57          0x32,0x31,0x21,0x32,0x52,0x32,0x31,0x21,0x32,0x62, 
  58          0x32,0x31,0x21,0x32,0x83,0x82,0x71,0x72,0x02, 
  59          0x63,0xA1,0xA2,0x62,0x92,0x82,0x52, 
  60          0x31,0x51,0x63,0x51,0x63,0x51,0x63,0x51,0x62,0x82,0x7C,0x02, 
  61          0x61,0x71,0x82,0x71,0x62,0xA2,0x71,0x76, 
  62          0x61,0x71,0x82,0x71,0x62,0x52,0x31,0x36, 
  63          0x61,0x71,0x82,0x71,0x62,0xA3,0x73,0x62,0x53, 
  64          0x42,0x63,0x83,0x83,0x91,0x91, 
  65          0x61,0x71,0x82,0x71,0x62,0x0A2,0x71,0x76, 
  66          0x61,0x71,0x82,0x71,0x62,0x52,0x31,0x36, 
  67          0x61,0x71,0x82,0x71,0x62,0xA3,0x73,0x62,0x53, 
  68          0x42,0x82,0x88,0x02,0x74,0x93,0x89,
  69          0xff//结束标志
  70          }; 
  71          uchar code jmszl[]={ //寂寞沙洲冷
  72          0x12,0x12,0x22,0x32,0x31,0x22,0x21,0x22, 
  73          0x21,0x31,0x51,0x52,0x31,0x52,0x61,0x15,0x14, 
  74          0x51,0x52,0x31,0x52,0x62,0x13,0x11,0x13,0x32,0x28,0x08,0x28, 
  75          0x31,0x32,0x31,0x32,0x11,0x21,0x51,0x52,0x51,0x52, 
  76          0x51,0x51,0x31,0x32,0x31,0x32,0x81,0x72,0x63, 
  77          0x62,0x71,0x81,0x72,0x61,0x61,0x52,0x31,0x21,0x32,0x51,0x54, 
  78          0x22,0x12,0x11,0x12,0x11,0x12,0x12,0x14,0x26,0x32,0x26, 
  79          0x32,0x61,0x51,0x51,0x31,0x31,0x21,0x31,0x51,0x61,0x51,0x31,0x51, 
  80          0x02,0x32,0x81,0x81,0x81,0x81,0x62,0x52,0x34, 
  81          0x31,0x81,0x81,0x81,0x61,0x91,0x82, 
  82          0x51,0x51,0x51,0x51,0x31,0x61,0x53, 
  83          0x21,0x11,0x21,0x11,0x22,0x11,0x21,0x26, 
  84          0x32,0x61,0x51,0x51,0x31,0x31,0x21,0x31,0x51,0x61,0x51,0x31,0x51,0x52, 
  85          0x31,0x31,0x81,0x81,0x81,0x61,0x91,0x81,0x61,0x31,0x56, 0x32,0x32,0x81,0x81,0x81,0x81,0x91,0x81,0x61,0x81,
             -0x61,0x51,0x31,0x51,0x34, 
  86          0x21,0x31,0x51,0x31,0x21,0x11,0x61,0x21,0x16, 
  87          0xff// 结束标志
  88          }; 
  89          uchar code qizige[]={ //七子之歌
  90          0x54,0x32,0x52,0x32,0x54,0x62,0x52,0x32,0x62,0x54, 
  91          0x14,0x12,0x22,0x34,0x52,0x32,0x02,0x32,0x58, 
  92          0x52,0x52,0x62,0x52,0x32,0x54,0x52,0x62,0x52,0x82,0x62,0x58, 
  93          0x14,0x52,0x32,0x22,0x12,0x24,0x32,0x54,0x2,0x22,0x34,0x1f,0x18, 
  94          0x04,0x54,0xa4,0x92,0x81,0x62,0x52,0x54,0x62,0x64,0x52,0x62,0x81,0xa2,0x82,0x9c, 
  95          0x02,0x52,0xa4,0x92,0x81,0x62,0x52,0x54,0x62,0x64,0x52,0x64,0xa2,0x92,0x9f, 
  96          0xa4,0x92,0x81,0x62,0x52,0x54,0x84,0x62,0x52,0x32,0x22,0x14, 
  97          0x04,0x22,0x32,0x58,0x58,0x04,0x52,0x62,0x8f, 
  98          0xff// 结束标志
  99          }; 
 100          uchar code ganen[]={ //感恩的心
 101          0x12,0x14,0x22,0x32,0x54,0x32,0x84,0x72,0x62,0x54, 
 102          0x02,0x62,0x62,0x52,0x54,0x12,0x22,0x32,0x28, 
 103          0x12,0x14,0x22,0x32,0x54,0x32,0x84,0x92,0x82,0x54, 
 104          0x32,0x24,0x21,0x61,0x54,0x22,0x32,0x12,0x18, 
 105          0x22,0x24,0x12,0x24,0x11,0x21,0x34,0x32,0x21,0x31,0x34, 
 106          0x12,0x22,0x22,0x22,0x11,0x21,0x22,0x64,0x52,0x52,0x32,0x38, 
 107          0x31,0x52,0x51,0x52,0x31,0x51,0x58,0x31,0x82,0x81,0x82,0x31,0x61,0x68, 
 108          0x62,0x62,0x62,0x51,0x61,0x64,0x61,0x82,0x61,0x9c, 
 109          0x52,0xa4,0x92,0xa4,0x32,0x84,0x72,0x64,0x62,0x94,0x82,0x94, 
 110          0x61,0x81,0x92,0x91,0x91,0x92,0x81,0xa1,0xa2,0x92,0x94, 
 111          0x52,0xa4,0x92,0xa4,0x32,0x84,0x72,0x64, 
 112          0x52,0x62,0x81,0x81,0x82,0x92,0xa2,0x94,0x82,0x72,0x82,0x88, 
 113          0xff// 结束标志
 114          }; 
C51 COMPILER V9.57.0.0   MAIN1                                                             06/22/2021 20:17:54 PAGE 3   

 115          //---------------------------- 简谱音调对应的定时器初值 --------------------------- 
 116          
 117          uchar code cuzhi[]={ 
 118          0xff,0xff,// 占位
 119          0xFC,0x8E,//中央 C 调 1-7 
 120          0xFC,0xED, 
 121          0xFD,0x43, 
 122          0xFD,0x6A, 
 123          0xFD,0xB3, 
 124          0xFD,0xF3, 
 125          0xFE,0x2D, 
 126          0xFE,0x47, //高八度 1-7 
 127          0xFE,0x76, 
 128          0xFE,0xA1, 
 129          0xFE,0xC7, 
 130          0xFE,0xD9, 
 131          0xFE,0xF9, 
 132          0xFF,0x16 
 133          }; 
 134          void delay1(uint z); //延时 1MS 
 135          void delay(uint z); //延时 165MS,即十六分音符
 136          void song(); 
 137          void beep();//蜂鸣器响一下
 138          void main() 
 139          { 
 140   1      P0=0xbf; 
 141   1      KK=0; count2=0; //不唱歌
 142   1      EA=1;//开总中断
 143   1      EX0=1;//开外部中断 0 
 144   1      IT0=1;//外部中断 0 下降沿触发方式
 145   1      EX1=1;//开外部中断 1 
 146   1      IT1=1;//外部中断 1 下降沿触发方式
 147   1      TMOD=0x01;// 定时器 0 工作在方式 1 
 148   1      TH0=0; 
 149   1      TL0=0; 
 150   1      ET0=1; 
 151   1      while(1) 
 152   1      { 
 153   2      if(count2!=0) 
 154   2      { 
 155   3      song(); 
 156   3      delay1(1000); 
 157   3      } 
 158   2      if(count2==0) 
 159   2      { keys_scan(); //矩阵键盘无限扫描
 160   3      P1=0xf0; 
 161   3      if(P1!=0xf0) 
 162   3      { 
 163   4      P0=DSY_table[keyno]; 
 164   4      TR0=1; 
 165   4      } 
 166   3      if(P1==0XF0) 
 167   3      {TR0=0; 
 168   4      } 
 169   3      delay_ms(2); } 
 170   2      } 
 171   1      } 
 172          void int0() interrupt 0 
 173          { 
 174   1      EA=0;//关总中断
 175   1      delay1(500);//消抖
 176   1      if(key1==0) 
C51 COMPILER V9.57.0.0   MAIN1                                                             06/22/2021 20:17:54 PAGE 4   

 177   1      { 
 178   2      count2=0; //暂停音乐
 179   2      TR0=0; 
 180   2      } 
 181   1      EA=1; 
 182   1      } 
 183          void int1() interrupt 2 
 184          { 
 185   1      TR0 = 0; 
 186   1      delay1(500);//去抖
 187   1      if(key2==0) 
 188   1      { 
 189   2      i=0;//从头开始唱
 190   2      count2++; 
 191   2      TR0=~TR0; 
 192   2      if(count2==5) 
 193   2      count2=0; 
 194   2      } } 
 195          //中断
 196          void timer0() interrupt 1 //用于产生各种音调
 197          { 
 198   1      if(count2==0) 
 199   1      { 
 200   2      TH0=tone_delay_table[keyno]/256; 
 201   2      TL0=tone_delay_table[keyno]%256; 
 202   2      fm=~fm; 
 203   2      } 
 204   1      if(count2!=0) 
 205   1      { 
 206   2      TH0=timeh; 
 207   2      TL0=timel; 
 208   2      fm=~fm; 
 209   2      } 
 210   1      } 
 211          void song() 
 212          { 
 213   1      uint temp; 
 214   1      uchar jp;//jp 是简谱
 215   1      i=0; 
 216   1      while(1) 
 217   1      { if(count2==0) 
 218   2      { 
 219   3      break; 
 220   3      } 
 221   2      if(count2==1) // 选曲
 222   2        temp=jmszl[i]; 
 223   2      if(count2==2) 
 224   2        temp=qnzl[i]; 
 225   2      if(count2==3) 
 226   2        temp=qizige[i]; 
 227   2      if(count2==4) 
 228   2        temp=ganen[i]; 
 229   2      if(temp==0xff) 
 230   2        break; 
 231   2      jp=temp/16; //取数的高 4 位
 232   2      if(jp!=0) 
 233   2      { 
 234   3      timeh=cuzhi[jp*2]; 
 235   3      timel=cuzhi[jp*2+1]; 
 236   3      } 
 237   2      else 
 238   2      { 
C51 COMPILER V9.57.0.0   MAIN1                                                             06/22/2021 20:17:54 PAGE 5   

 239   3      TR0=0; 
 240   3      fm=1;//关蜂鸣器
 241   3      } 
 242   2      delay(temp%16); //取数的低 4 位
 243   2      TR0=0; //唱完一个音停 10MS 
 244   2      fm=1; 
 245   2      delay1(10); 
 246   2      TR0=1; 
 247   2      i++; 
 248   2      } 
 249   1      TR0=0; 
 250   1      fm=1; 
 251   1      } 
 252          void delay(uint z) //延时 165MS,即十六分音符
 253          { uint x,y; for(x=z;x>0;x--) 
 254   1      for(y=19000;y>0;y--); 
 255   1      } 
 256          void delay1(uint z) //延时 1MS 
 257          { uint x,y; 
 258   1      for(x=z;x>0;x--) 
 259   1      for(y=112;y>0;y--); 
 260   1      } 
 261          void beep() //蜂鸣器响一下
 262          { uchar i; 
 263   1      for(i=0;i<50;i++) 
 264   1      { fm=~fm; 
 265   2      delay1(1); 
 266   2      } 
 267   1      fm=1; 
 268   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    671    ----
   CONSTANT SIZE    =    611    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
