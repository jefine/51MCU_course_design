C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\main.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Release\main.lst) OMF2 TABS(4) CODE NOCON
                    -D SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.
                    -\build\Release\main.o)

line level    source

   1          #include "REG52.H"
   2          sbit IN1=P2^7;
   3          sbit IN2=P2^6;
   4          sbit ENA=P2^5;
   5          sbit in = P1^0;
   6          bit flag1s=0;//1s定时标志
   7          unsigned char T0RH=0;
   8          unsigned char T0RL=0;
   9          
  10          int temp;//读取到的当前温度值
  11          unsigned char len;
  12          int intT,decT;//温度值的整数和小数部分
  13          unsigned char str[12];
  14          
  15          void Compare();
  16          void GetTemp();
  17          void ConfigTimer0(unsigned int ms);
  18          unsigned char IntToString(unsigned char *str,int dat);
  19          extern bit Start18B20();
  20          extern bit Get18B20Temp(int *temp);
  21          extern void InitLcd1602();
  22          extern void LcdShowStr(unsigned char x,unsigned char y,unsigned char *str);
  23          void delay(unsigned int z);
  24          void main()
  25          {
  26   1          bit res;
  27   1          int i;
  28   1          // EA=1;
  29   1          // ConfigTimer0(10);//T0定时10ms
  30   1      
  31   1          // IN1=1;
  32   1          // IN2=0;
  33   1          for(i=0;i<200;i++)
  34   1          {
  35   2              in=1;
  36   2              delay(20);
  37   2              in=0;
  38   2              delay(30);
  39   2          }
  40   1      
  41   1          // Start18B20();//启动DS18B20
  42   1          // InitLcd1602();//初始化液晶
  43   1      
  44   1          // while(1)
  45   1          // {        
  46   1          //  if(flag1s)//每秒更新一次温度
  47   1          //  {
  48   1          //      flag1s=0;
  49   1          //      res=Get18B20Temp(&temp);//读取当前温度
  50   1          //      if(res)//读取成功时，刷新当前温度显示
  51   1          //      {
  52   1          //          GetTemp();
  53   1                  
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 2   

  54   1          //          LcdShowStr(0,0,"Welcome to use");//显示字符及温度值
  55   1          //          LcdShowStr(0,1,"Current T:");
  56   1          //          LcdShowStr(10,1,str);
  57   1          //              Compare();
  58   1          //      }
  59   1          //      else //读取失败时，提示错误信息
  60   1          //      {
  61   1          //          LcdShowStr(0,0,"error!");
  62   1      
  63   1          //      }
  64   1          //      Start18B20();//重新启动下一次转换                    
  65   1          //  }
  66   1          // }
  67   1      }
*** WARNING C280 IN LINE 26 OF .\SRC\MAIN.C: 'res': unreferenced local variable
  68          /*温度获取函数，获取当前环境温度值并保存在str数组中*/
  69          void GetTemp()
  70          {
  71   1      
  72   1          intT=temp>>4;//分离出温度值整数部分
  73   1          decT=temp &0x0F;//分离出温度值小数部分
  74   1                  
  75   1          len=IntToString(str,intT);//整数部分转换成字符串
  76   1                  
  77   1          str[len++]='.';
  78   1          decT=(decT*10)/16;//二进制的小数部分转换为1位十进制位
  79   1          str[len++]=decT+'0';//十进制小数位再转换为ASCII字符
  80   1          while(len<6)//用空格补齐到6个字符长度
  81   1          {
  82   2              str[len++]=' ';
  83   2          }
  84   1          str[len++]='\0';
  85   1      }
  86          /*延时函数，用于PWM控制*/
  87          void delay(unsigned int z)
  88          {
  89   1          unsigned int x,y;
  90   1          for(x=z;x>0;x--)
  91   1              for(y=110;y>0;y--);
  92   1      } 
  93          /*比较函数，通过温度值的比较设置电机的转速*/
  94          void Compare()
  95          {
  96   1          unsigned int i=0;
  97   1          unsigned char j;
  98   1      
  99   1          if((intT>= 24) && (intT<26))   //以两度为一个温差范围，并设温度范围索引
 100   1          {
 101   2              j=0;    
 102   2          }
 103   1          else if((intT>=26) &&(intT<28))
 104   1          {
 105   2              j=1;
 106   2          }
 107   1          else if((intT>=28) &&(intT<30))
 108   1          {
 109   2              j=2;
 110   2          }
 111   1          else if(intT>=30)
 112   1          {
 113   2              j=3;
 114   2          }
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 3   

 115   1          switch(j)         //根据温度索引设置电机转速
 116   1          {
 117   2              case 0: 
 118   2                      break;
 119   2          
 120   2              case 1: IN1=1;
 121   2                      IN2=0;
 122   2                      for(i=0;i<200;i++)
 123   2                      {
 124   3                          ENA=1;
 125   3                          delay(30);
 126   3                          ENA=0;
 127   3                          delay(30);
 128   3                      }
 129   2                      break;   
 130   2          
 131   2              case 2: IN1=1;
 132   2                      IN2=0;
 133   2                      for(i=0;i<200;i++)
 134   2                      {
 135   3                          ENA=1;
 136   3                          delay(55);           
 137   3                          ENA=0;
 138   3                          delay(30);
 139   3                      }
 140   2                      break;   
 141   2                                  
 142   2              case 3: IN1=1;
 143   2                      IN2=0;
 144   2                      ENA=1;
 145   2                      break;
 146   2      
 147   2              default:break;       
 148   2          }
 149   1      }  
 150          
 151          /*整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度*/
 152          unsigned char IntToString(unsigned char *str,int dat)
 153          {
 154   1          signed char i=0;
 155   1          unsigned char len=0;
 156   1          unsigned char buf[6];
 157   1      
 158   1          if(dat<0)//如果为负数，首先取绝对值，并在指针上添加负号
 159   1          {
 160   2              dat=-dat;
 161   2              *str++='-';
 162   2              len++;
 163   2          }
 164   1          do{    //先转换为低位在前的十进制数组
 165   2              buf[i++]=dat%10;
 166   2              dat /=10;
 167   2          }while(dat>0);
 168   1          len += i;//i最后的值就是有效字符的个数
 169   1          while(i-->0)//将数组值转换为ASCII码反向拷贝到接收指针上
 170   1          {
 171   2              *str++=buf[i]+'0';
 172   2          }
 173   1          *str='\0';
 174   1          return len;
 175   1      }
 176          void ConfigTimer0(unsigned int ms)
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 4   

 177          {
 178   1          unsigned long tmp;
 179   1      
 180   1          tmp=11059200/12;
 181   1          tmp=(tmp*ms)/1000;
 182   1          tmp=65536-tmp;
 183   1          tmp=tmp+12;
 184   1          T0RH=(unsigned char)(tmp>>8);
 185   1          T0RL=(unsigned char)tmp;
 186   1          TMOD &= 0xF0;
 187   1          TMOD |= 0x01;
 188   1          TH0=T0RH;
 189   1          TL0=T0RL;
 190   1          ET0=1;
 191   1          TR0=1;
 192   1      }
 193          void InterruptTimer0() interrupt 1
 194          {
 195   1          static unsigned char tmr1s=0;
 196   1      
 197   1          TH0=T0RH;
 198   1          TL0=T0RL;
 199   1          tmr1s++;
 200   1          if(tmr1s>=100)
 201   1          {
 202   2              tmr1s=0;
 203   2              flag1s=1;
 204   2          }        
 205   1      
 206   1      }
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 33
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003 F500        R     MOV     i+01H,A
0005         ?C0001:
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
0005 D290              SETB    in
                                           ; SOURCE LINE # 36
0007 7F14              MOV     R7,#014H
0009 7E00              MOV     R6,#00H
000B 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 37
000E C290              CLR     in
                                           ; SOURCE LINE # 38
0010 120000      R     LCALL   L?0055
                                           ; SOURCE LINE # 39
0013 0500        R     INC     i+01H
0015 E500        R     MOV     A,i+01H
0017 7002              JNZ     ?C0045
0019 0500        R     INC     i
001B         ?C0045:
001B C3                CLR     C
001C 94C8              SUBB    A,#0C8H
001E E500        R     MOV     A,i
0020 6480              XRL     A,#080H
0022 9480              SUBB    A,#080H
0024 40DF              JC      ?C0001
                                           ; SOURCE LINE # 67
0026         ?C0004:
0026 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION GetTemp (BEGIN)
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 72
0000 E500        R     MOV     A,temp+01H
0002 AE00        R     MOV     R6,temp
0004 7804              MOV     R0,#04H
0006         ?C0046:
0006 CE                XCH     A,R6
0007 A2E7              MOV     C,ACC.7
0009 13                RRC     A
000A CE                XCH     A,R6
000B 13                RRC     A
000C D8F8              DJNZ    R0,?C0046
000E F500        R     MOV     intT+01H,A
0010 8E00        R     MOV     intT,R6
                                           ; SOURCE LINE # 73
0012 750000      R     MOV     decT,#00H
0015 E500        R     MOV     A,temp+01H
0017 540F              ANL     A,#0FH
0019 F500        R     MOV     decT+01H,A
                                           ; SOURCE LINE # 75
001B 7B00              MOV     R3,#00H
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 6   

001D 7A00        R     MOV     R2,#HIGH str
001F 7900        R     MOV     R1,#LOW str
0021 AD00        R     MOV     R5,intT+01H
0023 AC00        R     MOV     R4,intT
0025 120000      R     LCALL   _IntToString
0028 8F00        R     MOV     len,R7
                                           ; SOURCE LINE # 77
002A 0500        R     INC     len
002C 7400        R     MOV     A,#LOW str
002E 2F                ADD     A,R7
002F F8                MOV     R0,A
0030 762E              MOV     @R0,#02EH
                                           ; SOURCE LINE # 78
0032 AE00        R     MOV     R6,decT
0034 AF00        R     MOV     R7,decT+01H
0036 7C00              MOV     R4,#00H
0038 7D0A              MOV     R5,#0AH
003A 120000      E     LCALL   ?C?IMUL
003D 7D10              MOV     R5,#010H
003F 120000      E     LCALL   ?C?SIDIV
0042 8E00        R     MOV     decT,R6
0044 8F00        R     MOV     decT+01H,R7
                                           ; SOURCE LINE # 79
0046 EF                MOV     A,R7
0047 2430              ADD     A,#030H
0049 FF                MOV     R7,A
004A AE00        R     MOV     R6,len
004C 0500        R     INC     len
004E 7400        R     MOV     A,#LOW str
0050 2E                ADD     A,R6
0051 F8                MOV     R0,A
0052 A607              MOV     @R0,AR7
0054         ?C0005:
                                           ; SOURCE LINE # 80
0054 E500        R     MOV     A,len
0056 C3                CLR     C
0057 9406              SUBB    A,#06H
0059 500C              JNC     ?C0006
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
005B AF00        R     MOV     R7,len
005D 0500        R     INC     len
005F 7400        R     MOV     A,#LOW str
0061 2F                ADD     A,R7
0062 F8                MOV     R0,A
0063 7620              MOV     @R0,#020H
                                           ; SOURCE LINE # 83
0065 80ED              SJMP    ?C0005
0067         ?C0006:
                                           ; SOURCE LINE # 84
0067 AF00        R     MOV     R7,len
0069 0500        R     INC     len
006B 7400        R     MOV     A,#LOW str
006D 2F                ADD     A,R7
006E F8                MOV     R0,A
006F E4                CLR     A
0070 F6                MOV     @R0,A
                                           ; SOURCE LINE # 85
0071 22                RET     
             ; FUNCTION GetTemp (END)

             ; FUNCTION L?0054 (BEGIN)
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 7   

0000 7E00              MOV     R6,#00H
0002 120000      R     LCALL   _delay
0005 C2A5              CLR     ENA
0007         L?0055:
0007 7F1E              MOV     R7,#01EH
0009 7E00              MOV     R6,#00H
             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 87
;---- Variable 'z' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 90
;---- Variable 'x' assigned to Register 'R6/R7' ----
000B         ?C0008:
000B D3                SETB    C
000C EF                MOV     A,R7
000D 9400              SUBB    A,#00H
000F EE                MOV     A,R6
0010 9400              SUBB    A,#00H
0012 4014              JC      ?C0014
                                           ; SOURCE LINE # 91
;---- Variable 'y' assigned to Register 'R4/R5' ----
0014 7D6E              MOV     R5,#06EH
0016 7C00              MOV     R4,#00H
0018         ?C0011:
0018 ED                MOV     A,R5
0019 1D                DEC     R5
001A 7001              JNZ     ?C0047
001C 1C                DEC     R4
001D         ?C0047:
001D ED                MOV     A,R5
001E 4C                ORL     A,R4
001F 70F7              JNZ     ?C0011
0021         ?C0010:
0021 EF                MOV     A,R7
0022 1F                DEC     R7
0023 70E6              JNZ     ?C0008
0025 1E                DEC     R6
0026         ?C0048:
0026 80E3              SJMP    ?C0008
                                           ; SOURCE LINE # 92
0028         ?C0014:
0028 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION Compare (BEGIN)
                                           ; SOURCE LINE # 94
;---- Variable 'j' assigned to Register 'R1' ----
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
;---- Variable 'i' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 99
0000 C3                CLR     C
0001 E500        R     MOV     A,intT+01H
0003 9418              SUBB    A,#018H
0005 E500        R     MOV     A,intT
0007 6480              XRL     A,#080H
0009 9480              SUBB    A,#080H
000B 4010              JC      ?C0015
000D E500        R     MOV     A,intT+01H
000F 941A              SUBB    A,#01AH
0011 E500        R     MOV     A,intT
0013 6480              XRL     A,#080H
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 8   

0015 9480              SUBB    A,#080H
0017 5004              JNC     ?C0015
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0019 E4                CLR     A
001A F9                MOV     R1,A
                                           ; SOURCE LINE # 102
001B 8049              SJMP    ?C0016
001D         ?C0015:
                                           ; SOURCE LINE # 103
001D C3                CLR     C
001E E500        R     MOV     A,intT+01H
0020 941A              SUBB    A,#01AH
0022 E500        R     MOV     A,intT
0024 6480              XRL     A,#080H
0026 9480              SUBB    A,#080H
0028 4010              JC      ?C0017
002A E500        R     MOV     A,intT+01H
002C 941C              SUBB    A,#01CH
002E E500        R     MOV     A,intT
0030 6480              XRL     A,#080H
0032 9480              SUBB    A,#080H
0034 5004              JNC     ?C0017
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
0036 7901              MOV     R1,#01H
                                           ; SOURCE LINE # 106
0038 802C              SJMP    ?C0016
003A         ?C0017:
                                           ; SOURCE LINE # 107
003A C3                CLR     C
003B E500        R     MOV     A,intT+01H
003D 941C              SUBB    A,#01CH
003F E500        R     MOV     A,intT
0041 6480              XRL     A,#080H
0043 9480              SUBB    A,#080H
0045 4010              JC      ?C0019
0047 E500        R     MOV     A,intT+01H
0049 941E              SUBB    A,#01EH
004B E500        R     MOV     A,intT
004D 6480              XRL     A,#080H
004F 9480              SUBB    A,#080H
0051 5004              JNC     ?C0019
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0053 7902              MOV     R1,#02H
                                           ; SOURCE LINE # 110
0055 800F              SJMP    ?C0016
0057         ?C0019:
                                           ; SOURCE LINE # 111
0057 C3                CLR     C
0058 E500        R     MOV     A,intT+01H
005A 941E              SUBB    A,#01EH
005C E500        R     MOV     A,intT
005E 6480              XRL     A,#080H
0060 9480              SUBB    A,#080H
0062 4002              JC      ?C0016
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
0064 7903              MOV     R1,#03H
                                           ; SOURCE LINE # 114
0066         ?C0016:
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 9   

                                           ; SOURCE LINE # 115
0066 E9                MOV     A,R1
0067 24FE              ADD     A,#0FEH
0069 6021              JZ      ?C0028
006B 14                DEC     A
006C 6038              JZ      ?C0032
006E 2402              ADD     A,#02H
0070 703A              JNZ     ?C0034
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 120
0072         ?C0024:
0072 D2A7              SETB    IN1
                                           ; SOURCE LINE # 121
0074 C2A6              CLR     IN2
                                           ; SOURCE LINE # 122
0076 E4                CLR     A
0077 FA                MOV     R2,A
0078 FB                MOV     R3,A
0079         ?C0025:
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
0079 D2A5              SETB    ENA
                                           ; SOURCE LINE # 125
007B 7F1E              MOV     R7,#01EH
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
007D 120000      R     LCALL   L?0054
                                           ; SOURCE LINE # 128
0080 0B                INC     R3
0081 BB0001            CJNE    R3,#00H,?C0049
0084 0A                INC     R2
0085         ?C0049:
0085 EB                MOV     A,R3
0086 64C8              XRL     A,#0C8H
0088 4A                ORL     A,R2
0089 70EE              JNZ     ?C0025
008B 22                RET     
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 131
008C         ?C0028:
008C D2A7              SETB    IN1
                                           ; SOURCE LINE # 132
008E C2A6              CLR     IN2
                                           ; SOURCE LINE # 133
0090 E4                CLR     A
0091 FA                MOV     R2,A
0092 FB                MOV     R3,A
0093         ?C0029:
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
0093 D2A5              SETB    ENA
                                           ; SOURCE LINE # 136
0095 7F37              MOV     R7,#037H
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0097 120000      R     LCALL   L?0054
                                           ; SOURCE LINE # 139
009A 0B                INC     R3
009B BB0001            CJNE    R3,#00H,?C0050
009E 0A                INC     R2
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 10  

009F         ?C0050:
009F EB                MOV     A,R3
00A0 64C8              XRL     A,#0C8H
00A2 4A                ORL     A,R2
00A3 70EE              JNZ     ?C0029
00A5         ?C0053:
00A5 22                RET     
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 142
00A6         ?C0032:
00A6 D2A7              SETB    IN1
                                           ; SOURCE LINE # 143
00A8 C2A6              CLR     IN2
                                           ; SOURCE LINE # 144
00AA D2A5              SETB    ENA
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
00AC         ?C0034:
00AC 22                RET     
             ; FUNCTION Compare (END)

             ; FUNCTION _IntToString (BEGIN)
                                           ; SOURCE LINE # 152
0000 8B00        R     MOV     str,R3
0002 8A00        R     MOV     str+01H,R2
0004 8900        R     MOV     str+02H,R1
0006 8C00        R     MOV     dat,R4
0008 8D00        R     MOV     dat+01H,R5
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
000A E4                CLR     A
000B F500        R     MOV     i,A
                                           ; SOURCE LINE # 155
000D F500        R     MOV     len,A
                                           ; SOURCE LINE # 158
000F C3                CLR     C
0010 E500        R     MOV     A,dat
0012 6480              XRL     A,#080H
0014 9480              SUBB    A,#080H
0016 501C              JNC     ?C0038
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
0018 C3                CLR     C
0019 E4                CLR     A
001A 9500        R     SUBB    A,dat+01H
001C F500        R     MOV     dat+01H,A
001E E4                CLR     A
001F 9500        R     SUBB    A,dat
0021 F500        R     MOV     dat,A
                                           ; SOURCE LINE # 161
0023 0500        R     INC     str+02H
0025 E500        R     MOV     A,str+02H
0027 7002              JNZ     ?C0051
0029 0500        R     INC     str+01H
002B         ?C0051:
002B 14                DEC     A
002C F9                MOV     R1,A
002D 742D              MOV     A,#02DH
002F 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 162
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 11  

0032 0500        R     INC     len
                                           ; SOURCE LINE # 163
0034         ?C0038:
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
0034 AE00        R     MOV     R6,dat
0036 AF00        R     MOV     R7,dat+01H
0038 7C00              MOV     R4,#00H
003A 7D0A              MOV     R5,#0AH
003C 120000      E     LCALL   ?C?SIDIV
003F AF05              MOV     R7,AR5
0041 AE00        R     MOV     R6,i
0043 0500        R     INC     i
0045 7400        R     MOV     A,#LOW buf
0047 2E                ADD     A,R6
0048 F8                MOV     R0,A
0049 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 166
004B AE00        R     MOV     R6,dat
004D AF00        R     MOV     R7,dat+01H
004F 7C00              MOV     R4,#00H
0051 7D0A              MOV     R5,#0AH
0053 120000      E     LCALL   ?C?SIDIV
0056 8E00        R     MOV     dat,R6
0058 8F00        R     MOV     dat+01H,R7
                                           ; SOURCE LINE # 167
005A D3                SETB    C
005B E500        R     MOV     A,dat+01H
005D 9400              SUBB    A,#00H
005F E500        R     MOV     A,dat
0061 6480              XRL     A,#080H
0063 9480              SUBB    A,#080H
0065 50CD              JNC     ?C0038
                                           ; SOURCE LINE # 168
0067 E500        R     MOV     A,i
0069 2500        R     ADD     A,len
006B F500        R     MOV     len,A
006D         ?C0039:
                                           ; SOURCE LINE # 169
006D AF00        R     MOV     R7,i
006F 1500        R     DEC     i
0071 D3                SETB    C
0072 EF                MOV     A,R7
0073 6480              XRL     A,#080H
0075 9480              SUBB    A,#080H
0077 401D              JC      ?C0040
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
0079 7400        R     MOV     A,#LOW buf
007B 2500        R     ADD     A,i
007D F8                MOV     R0,A
007E E6                MOV     A,@R0
007F 2430              ADD     A,#030H
0081 FF                MOV     R7,A
0082 AB00        R     MOV     R3,str
0084 0500        R     INC     str+02H
0086 E500        R     MOV     A,str+02H
0088 AA00        R     MOV     R2,str+01H
008A 7002              JNZ     ?C0052
008C 0500        R     INC     str+01H
008E         ?C0052:
008E 14                DEC     A
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 12  

008F F9                MOV     R1,A
0090 EF                MOV     A,R7
0091 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 172
0094 80D7              SJMP    ?C0039
0096         ?C0040:
                                           ; SOURCE LINE # 173
0096 AB00        R     MOV     R3,str
0098 AA00        R     MOV     R2,str+01H
009A A900        R     MOV     R1,str+02H
009C E4                CLR     A
009D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 174
00A0 AF00        R     MOV     R7,len
                                           ; SOURCE LINE # 175
00A2 22                RET     
             ; FUNCTION _IntToString (END)

             ; FUNCTION _ConfigTimer0 (BEGIN)
                                           ; SOURCE LINE # 176
;---- Variable 'ms' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 180
0000 750000      R     MOV     tmp+03H,#00H
0003 750010      R     MOV     tmp+02H,#010H
0006 75000E      R     MOV     tmp+01H,#0EH
0009 750000      R     MOV     tmp,#00H
                                           ; SOURCE LINE # 181
000C E4                CLR     A
000D FC                MOV     R4,A
000E FD                MOV     R5,A
000F AB00        R     MOV     R3,tmp+03H
0011 AA00        R     MOV     R2,tmp+02H
0013 A900        R     MOV     R1,tmp+01H
0015 A800        R     MOV     R0,tmp
0017 120000      E     LCALL   ?C?LMUL
001A E4                CLR     A
001B 7BE8              MOV     R3,#0E8H
001D 7A03              MOV     R2,#03H
001F F9                MOV     R1,A
0020 F8                MOV     R0,A
0021 120000      E     LCALL   ?C?ULDIV
0024 8F00        R     MOV     tmp+03H,R7
0026 8E00        R     MOV     tmp+02H,R6
0028 8D00        R     MOV     tmp+01H,R5
002A 8C00        R     MOV     tmp,R4
                                           ; SOURCE LINE # 182
002C C3                CLR     C
002D E4                CLR     A
002E 9500        R     SUBB    A,tmp+03H
0030 F500        R     MOV     tmp+03H,A
0032 E4                CLR     A
0033 9500        R     SUBB    A,tmp+02H
0035 F500        R     MOV     tmp+02H,A
0037 7401              MOV     A,#01H
0039 9500        R     SUBB    A,tmp+01H
003B F500        R     MOV     tmp+01H,A
003D E4                CLR     A
003E 9500        R     SUBB    A,tmp
0040 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 183
0042 E500        R     MOV     A,tmp+03H
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 13  

0044 240C              ADD     A,#0CH
0046 F500        R     MOV     tmp+03H,A
0048 E4                CLR     A
0049 3500        R     ADDC    A,tmp+02H
004B F500        R     MOV     tmp+02H,A
004D E4                CLR     A
004E 3500        R     ADDC    A,tmp+01H
0050 F500        R     MOV     tmp+01H,A
0052 E4                CLR     A
0053 3500        R     ADDC    A,tmp
0055 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 184
0057 AF00        R     MOV     R7,tmp+03H
0059 AE00        R     MOV     R6,tmp+02H
005B AD00        R     MOV     R5,tmp+01H
005D FC                MOV     R4,A
005E 7808              MOV     R0,#08H
0060 120000      E     LCALL   ?C?ULSHR
0063 8F00        R     MOV     T0RH,R7
                                           ; SOURCE LINE # 185
0065 850000      R     MOV     T0RL,tmp+03H
                                           ; SOURCE LINE # 186
0068 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 187
006B 438901            ORL     TMOD,#01H
                                           ; SOURCE LINE # 188
006E 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 189
0071 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 190
0074 D2A9              SETB    ET0
                                           ; SOURCE LINE # 191
0076 D28C              SETB    TR0
                                           ; SOURCE LINE # 192
0078 22                RET     
             ; FUNCTION _ConfigTimer0 (END)

             ; FUNCTION InterruptTimer0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 197
0004 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 198
0007 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 199
000A 0500        R     INC     tmr1s
                                           ; SOURCE LINE # 200
000C E500        R     MOV     A,tmr1s
000E C3                CLR     C
000F 9464              SUBB    A,#064H
0011 4005              JC      ?C0044
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
0013 750000      R     MOV     tmr1s,#00H
                                           ; SOURCE LINE # 203
0016 D200        R     SETB    flag1s
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 206
0018         ?C0044:
0018 D0D0              POP     PSW
001A D0E0              POP     ACC
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 14  

001C 32                RETI    
             ; FUNCTION InterruptTimer0 (END)

C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 15  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
decT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0001H  2
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
InterruptTimer0. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmr1s. . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_ConfigTimer0. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000BH  -----
  z. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
T0RH . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0003H  1
intT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0004H  2
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
T0RL . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  res. . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0000H  2
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
temp . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0007H  2
GetTemp. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
len. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0009H  1
flag1s . . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
IN1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
IN2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
Compare. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0001H  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
ENA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
in . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
str. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000AH  12
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
_IntToString . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  dat. . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0003H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   CHAR     0005H  1
  len. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   ARRAY    0007H  6
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1

C51 COMPILER V9.57.0.0   MAIN                                                              05/20/2021 21:28:58 PAGE 17  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    683    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
