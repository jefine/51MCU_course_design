C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\main.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Release\main.lst) OMF2 TABS(4) CODE NOCON
                    -D SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.
                    -\build\Release\main.o)

line level    source

   1          #include <reg52.h>
   2          #define uchar unsigned char
   3          #define uint unsigned int
   4          sbit DQ = P1 ^ 0;
   5          sbit key2 = P3 ^ 2;
   6          sbit key3 = P3 ^ 3;
   7          sbit P3_4 = P3 ^ 4;
   8          sbit P3_5 = P3 ^ 5;
   9          float ff;
  10          uint y3, last;
  11          uchar shi, ge, xiaoshu, yushe = 25;
  12          //uchar code dispcode[] = {
  13          //    0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71}; //¶
             -ÎÂë
  14          //uchar code tablel[] = {
  15          uchar code dispcode[] = {
  16              0xbf, 0x86, 0xdb, 0xcf, 0xe6, 0xed, 0xfd, 0x87, 0xff, 0xef}; //´øÐ¡ÊýµãµÄ¶ÎÂë
  17          uchar dispbitcode[] = {0xfe, 0xfd, 0xfb, 0xf7, 0xef, 0xdf, 0xbf, 0x7f};
  18          uchar dispbuf[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  19          void Delay(uint num) //ÑÓÊ±º¯Êý
  20          {
  21   1          while (--num)
  22   1              ;
  23   1      }
  24          void digitalshow(uchar a4, uchar a3, uchar a2, uchar a1, uchar a0)
  25          {
  26   1          dispbuf[0] = a0;
  27   1          dispbuf[1] = a1;
  28   1          dispbuf[2] = a2;
  29   1          dispbuf[3] = a3;
  30   1          dispbuf[4] = a4;
  31   1          P2 = 0xff;
  32   1          P0 = dispcode[dispbuf[0]];
  33   1          P2 = dispbitcode[5];
  34   1          Delay(1);
  35   1          P2 = 0xff;
  36   1          P0 = dispcode[dispbuf[1]];
  37   1          P2 = dispbitcode[4];
  38   1          Delay(1);
  39   1          P2 = 0xff;
  40   1          P0 = dispcode[dispbuf[2]];
  41   1          P2 = dispbitcode[2];
  42   1          Delay(1);
  43   1          P2 = 0xff;
  44   1          P0 = dispcode[dispbuf[3]];
  45   1          P2 = dispbitcode[1];
  46   1          Delay(1);
  47   1          P2 = 0xff;
  48   1          P0 = dispcode[dispbuf[4]];
  49   1          P2 = dispbitcode[0];
  50   1          Delay(1);
  51   1      }
  52          void dmsec(uint count)
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 2   

  53          {
  54   1          uint i; //1msÑÓÊ±
  55   1          while (count--)
  56   1          {
  57   2              for (i = 0; i < 125; i++)
  58   2              {
  59   3              }
  60   2          }
  61   1      }
  62          void tmreset(void)
  63          {
  64   1          DQ = 0;
  65   1          Delay(90); //¾«È·ÑÓÊ± ´óÓÚ480Î¢Ãë
  66   1          DQ = 1;
  67   1          Delay(4); //90,4¿ÉÒÔÐ¡·¶Î§±ä»¯
  68   1      }
  69          void tmpre(void)
  70          {
  71   1          while (DQ)
  72   1              ;
  73   1          while (~DQ)
  74   1              ;
  75   1          Delay(4);
  76   1      }
  77          bit tmrbit(void)
  78          {
  79   1          uint i;
  80   1          bit dat;
  81   1          DQ = 0;
  82   1          i++; //i++;´ó¸Å1Î¢Ãë
  83   1          DQ = 1;
  84   1          i++;
  85   1          i++;
  86   1          dat = DQ;
  87   1          Delay(8);
  88   1          return (dat);
  89   1      }
  90          uchar tmrbyte(void) //¶ÁÒ»¸ö±ÈÌØ
  91          {
  92   1          uchar i, j, dat;
  93   1          dat = 0;
  94   1          for (i = 1; i <= 8; i++)
  95   1          {
  96   2              j = tmrbit();
  97   2              dat = (j << 7) | (dat >> 1);
  98   2              ;
  99   2          }
 100   1          return (dat);
 101   1      }
 102          void tmwbyte(uchar dat) //Ð´Ò»¸ö±ÈÌØ
 103          {
 104   1          uint i;
 105   1          uchar j;
 106   1          bit testb;
 107   1          for (j = 1; j <= 8; j++)
 108   1          {
 109   2              testb = dat & 0x01;
 110   2              dat = dat >> 1; //´ÓµÍÎ»¿ªÊ¼
 111   2              if (testb)      //write 1
 112   2              {
 113   3                  DQ = 0; //ÏÈÀ­µÍ
 114   3                  i++;
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 3   

 115   3                  i++; //>1Î¢Ãë
 116   3                  DQ = 1;
 117   3                  Delay(4);
 118   3              }
 119   2              else //write 0
 120   2              {
 121   3                  DQ = 0;
 122   3                  Delay(4);
 123   3                  DQ = 1;
 124   3                  i++;
 125   3                  i++; //ÔÙÀ­¸ß
 126   3              }
 127   2          }
 128   1      }
 129          void tmstart(void) //ds1820¿ªÊ¼×ª»»
 130          {
 131   1          dmsec(1);
 132   1          tmreset();
 133   1          tmpre();
 134   1          dmsec(1);
 135   1          tmwbyte(0xcc);
 136   1          // rom
 137   1                  tmwbyte(0x44); //×ª»»
 138   1      }
 139          uchar tmrtemp(void) //¶ÁÈ¡ÎÂ¶È
 140          {
 141   1          uchar a, b;
 142   1          tmreset();
 143   1          tmpre();
 144   1          dmsec(1);
 145   1          tmwbyte(0xcc);
 146   1          // rom
 147   1                  tmwbyte(0xbe); //×ª»»
 148   1          a = tmrbyte();         //LSBµÍ°ËÎ»
 149   1          b = tmrbyte();         //MSB¸ß8Î»
 150   1          y3 = b;
 151   1          y3 <<= 8;
 152   1          y3 = y3 | a;
 153   1          ff = y3 * 0.0625;
 154   1          y3 = ff * 10 + 0.5;
 155   1          return (y3);
 156   1      }
 157          void keyscan(void)
 158          {
 159   1          if (key2 == 0)
 160   1          {
 161   2              dmsec(5);
 162   2              if (key2 == 0)
 163   2              {
 164   3                  yushe++;
 165   3                  if (yushe == 100)
 166   3                      yushe = 25;
 167   3              }
 168   2              while (!key2)
 169   2                  ;
 170   2          }
 171   1          else if (key3 == 0)
 172   1          {
 173   2              dmsec(5);
 174   2              if (key3 == 0)
 175   2              {
 176   3                  yushe--;
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 4   

 177   3                  if (yushe == 0)
 178   3                      yushe = 25;
 179   3              }
 180   2              while (!key3)
 181   2                  ;
 182   2          }
 183   1      }
 184          void time0_int(void) interrupt 1 //¶¨Ê±Æ÷T0²úÉú²»Í¬Õ¼¿Õ±ÈµÄPWM
 185          {
 186   1          uint tmp;
 187   1          static unsigned char j;
 188   1          TH0 = (65536 - 50000) / 256;
 189   1          TL0 = (65536 - 50000) % 256;
 190   1          j = j + 1;
 191   1          if (tmp <= yushe)
 192   1          {
 193   2              P3_4 = 0;
 194   2              j = 0; //Õ¼¿Õ±È00%
 195   2          }
 196   1          else if ((tmp > yushe) && (tmp <= (yushe + 5)))
 197   1          {
 198   2              if (j == 4)
 199   2                  P3_4 = 0;
 200   2              else if (j == 20)
 201   2                  P3_4 = 1;
 202   2              j = 0;
 203   2          } //Õ¼¿Õ±ÈÎª20%
 204   1          else if ((tmp > (yushe + 5)) && (tmp <= (yushe + 10)))
 205   1          {
 206   2              if (j == 8)
 207   2                  P3_4 = 0;
 208   2              else if (j == 20)
 209   2                  P3_4 = 0;
 210   2              else if (j == 20)
 211   2                  P3_4 = 1;
 212   2              j = 0;
 213   2          } //Õ¼¿Õ±ÈÎª40%
 214   1          else if ((tmp > (yushe + 10)) && (tmp <= (yushe + 15)))
 215   1          {
 216   2              if (j == 12)
 217   2                  P3_4 = 0;
 218   2              else if (j == 20)
 219   2                  P3_4 = 1;
 220   2              j = 0;
 221   2          } //Õ¼¿Õ±ÈÎª60%
 222   1          else if ((tmp > (yushe + 15)) && (tmp <= (yushe + 20)))
 223   1          {
 224   2              if (j == 16)
 225   2                  P3_4 = 0;
 226   2              else if (j == 20)
 227   2                  P3_4 = 1;
 228   2              j = 0;
 229   2          } //Õ¼¿Õ±ÈÎª80%
 230   1          else if (tmp > (yushe + 20))
 231   1              P3_4 = 1;
 232   1          j = 0; //Õ¼¿Õ±ÈÎª100%
 233   1      }
 234          /******
 235          void time1_int(void)interrupt 1//¶¨Ê±Æ÷T1²úÉúÆµÂÊÎª22KHzµÄÇýÎÃ³¬Éù²¨{
 236          P3^5 != P3_5;
 237          TH0=(65536-2500)/256;
 238          TL0=(65536-2500)%256;
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 5   

 239          }**/
 240          void main(void)
 241          {
 242   1          TMOD = 0101; //¶¨Ê±Æ÷³õÊ¼»¯
 243   1          TH0 = (65536 - 50000) / 256;
 244   1          TL0 = (65536 - 50000) % 256;
 245   1          TH1 = (65536 - 50000) / 256;
 246   1          TL0 = (65536 - 50000) % 256;
 247   1          EA = 1;
 248   1          ET0 = 1;
 249   1          ET1 = 1;
 250   1          TR0 = 1;
 251   1          TR1 = 1;
 252   1          //uint last;
 253   1          tmstart();
 254   1          dmsec(450); //³õÊ¼»¯ds18b20
 255   1          while (1)
 256   1          {
 257   2              tmstart(); //ds1820¿ªÊ¼×ª»»
 258   2              dmsec(2);
 259   2              last = tmrtemp() + 256; //¶ÁÈ¡ÎÂ¶È
 260   2              shi = last / 100;
 261   2              ge = (last % 100) / 10;
 262   2              xiaoshu = (last % 100) % 10;
 263   2              digitalshow(shi, ge, xiaoshu, yushe / 10, yushe % 10);
 264   2              keyscan();
 265   2              dmsec(2);
 266   2              //deal(last/10);
 267   2          }
 268   1      }
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0086 (BEGIN)
0000         L?0087:
0000 7F01              MOV     R7,#01H
0002 7E00              MOV     R6,#00H
             ; FUNCTION _Delay (BEGIN)
                                           ; SOURCE LINE # 19
;---- Variable 'num' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 20
0004         ?C0001:
                                           ; SOURCE LINE # 21
0004 EF                MOV     A,R7
0005 1F                DEC     R7
0006 7001              JNZ     ?C0071
0008 1E                DEC     R6
0009         ?C0071:
0009 14                DEC     A
000A 4E                ORL     A,R6
000B 70F7              JNZ     ?C0001
                                           ; SOURCE LINE # 23
000D 22                RET     
             ; FUNCTION _Delay (END)

             ; FUNCTION _digitalshow (BEGIN)
                                           ; SOURCE LINE # 24
;---- Variable 'a4' assigned to Register 'R7' ----
;---- Variable 'a2' assigned to Register 'R3' ----
;---- Variable 'a3' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0000 850000      R     MOV     dispbuf,a0
                                           ; SOURCE LINE # 27
0003 850000      R     MOV     dispbuf+01H,a1
                                           ; SOURCE LINE # 28
0006 8B00        R     MOV     dispbuf+02H,R3
                                           ; SOURCE LINE # 29
0008 8D00        R     MOV     dispbuf+03H,R5
                                           ; SOURCE LINE # 30
000A 8F00        R     MOV     dispbuf+04H,R7
                                           ; SOURCE LINE # 31
000C 75A0FF            MOV     P2,#0FFH
                                           ; SOURCE LINE # 32
000F E500        R     MOV     A,dispbuf
0011 900000      R     MOV     DPTR,#dispcode
0014 93                MOVC    A,@A+DPTR
0015 F580              MOV     P0,A
                                           ; SOURCE LINE # 33
0017 8500A0      R     MOV     P2,dispbitcode+05H
                                           ; SOURCE LINE # 34
001A 120000      R     LCALL   L?0086
                                           ; SOURCE LINE # 35
001D 75A0FF            MOV     P2,#0FFH
                                           ; SOURCE LINE # 36
0020 E500        R     MOV     A,dispbuf+01H
0022 93                MOVC    A,@A+DPTR
0023 F580              MOV     P0,A
                                           ; SOURCE LINE # 37
0025 8500A0      R     MOV     P2,dispbitcode+04H
                                           ; SOURCE LINE # 38
0028 120000      R     LCALL   L?0086
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 7   

                                           ; SOURCE LINE # 39
002B 75A0FF            MOV     P2,#0FFH
                                           ; SOURCE LINE # 40
002E E500        R     MOV     A,dispbuf+02H
0030 93                MOVC    A,@A+DPTR
0031 F580              MOV     P0,A
                                           ; SOURCE LINE # 41
0033 8500A0      R     MOV     P2,dispbitcode+02H
                                           ; SOURCE LINE # 42
0036 120000      R     LCALL   L?0087
                                           ; SOURCE LINE # 43
0039 75A0FF            MOV     P2,#0FFH
                                           ; SOURCE LINE # 44
003C E500        R     MOV     A,dispbuf+03H
003E 93                MOVC    A,@A+DPTR
003F F580              MOV     P0,A
                                           ; SOURCE LINE # 45
0041 8500A0      R     MOV     P2,dispbitcode+01H
                                           ; SOURCE LINE # 46
0044 120000      R     LCALL   L?0087
                                           ; SOURCE LINE # 47
0047 75A0FF            MOV     P2,#0FFH
                                           ; SOURCE LINE # 48
004A E500        R     MOV     A,dispbuf+04H
004C 93                MOVC    A,@A+DPTR
004D F580              MOV     P0,A
                                           ; SOURCE LINE # 49
004F 8500A0      R     MOV     P2,dispbitcode
                                           ; SOURCE LINE # 50
0052 7F01              MOV     R7,#01H
0054 7E00              MOV     R6,#00H
0056 020000      R     LJMP    _Delay
             ; FUNCTION _digitalshow (END)

             ; FUNCTION _dmsec (BEGIN)
                                           ; SOURCE LINE # 52
;---- Variable 'i' assigned to Register 'R4/R5' ----
;---- Variable 'count' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 53
0000         ?C0005:
                                           ; SOURCE LINE # 55
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AA06              MOV     R2,AR6
0004 7001              JNZ     ?C0072
0006 1E                DEC     R6
0007         ?C0072:
0007 4A                ORL     A,R2
0008 6013              JZ      ?C0010
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
000A E4                CLR     A
000B FC                MOV     R4,A
000C FD                MOV     R5,A
000D         ?C0007:
000D C3                CLR     C
000E ED                MOV     A,R5
000F 947D              SUBB    A,#07DH
0011 EC                MOV     A,R4
0012 9400              SUBB    A,#00H
0014 50EA              JNC     ?C0005
                                           ; SOURCE LINE # 58
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 8   

                                           ; SOURCE LINE # 59
0016 0D                INC     R5
0017 BD0001            CJNE    R5,#00H,?C0073
001A 0C                INC     R4
001B         ?C0073:
001B 80F0              SJMP    ?C0007
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
001D         ?C0010:
001D 22                RET     
             ; FUNCTION _dmsec (END)

             ; FUNCTION tmreset (BEGIN)
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
0000 C290              CLR     DQ
                                           ; SOURCE LINE # 65
0002 7F5A              MOV     R7,#05AH
0004 7E00              MOV     R6,#00H
0006 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 66
0009 D290              SETB    DQ
                                           ; SOURCE LINE # 67
000B 7F04              MOV     R7,#04H
000D 7E00              MOV     R6,#00H
000F 020000      R     LJMP    _Delay
             ; FUNCTION tmreset (END)

             ; FUNCTION tmpre (BEGIN)
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
0000         ?C0012:
                                           ; SOURCE LINE # 71
0000 2090FD            JB      DQ,?C0012
0003         ?C0014:
                                           ; SOURCE LINE # 73
0003 A290              MOV     C,DQ
0005 B3                CPL     C
0006 40FB              JC      ?C0014
                                           ; SOURCE LINE # 75
0008 7F04              MOV     R7,#04H
000A 7E00              MOV     R6,#00H
000C 020000      R     LJMP    _Delay
             ; FUNCTION tmpre (END)

             ; FUNCTION tmrbit (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 81
0000 C290              CLR     DQ
                                           ; SOURCE LINE # 82
0002 0500        R     INC     i+01H
0004 E500        R     MOV     A,i+01H
0006 7002              JNZ     ?C0074
0008 0500        R     INC     i
000A         ?C0074:
                                           ; SOURCE LINE # 83
000A D290              SETB    DQ
                                           ; SOURCE LINE # 84
000C 0500        R     INC     i+01H
000E E500        R     MOV     A,i+01H
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 9   

0010 7002              JNZ     ?C0075
0012 0500        R     INC     i
0014         ?C0075:
                                           ; SOURCE LINE # 85
0014 0500        R     INC     i+01H
0016 E500        R     MOV     A,i+01H
0018 7002              JNZ     ?C0076
001A 0500        R     INC     i
001C         ?C0076:
                                           ; SOURCE LINE # 86
001C A290              MOV     C,DQ
001E 9200        R     MOV     dat,C
                                           ; SOURCE LINE # 87
0020 7F08              MOV     R7,#08H
0022 7E00              MOV     R6,#00H
0024 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 88
0027 A200        R     MOV     C,dat
                                           ; SOURCE LINE # 89
0029 22                RET     
             ; FUNCTION tmrbit (END)

             ; FUNCTION tmrbyte (BEGIN)
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 93
;---- Variable 'dat' assigned to Register 'R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
                                           ; SOURCE LINE # 94
;---- Variable 'i' assigned to Register 'R4' ----
0002 7C01              MOV     R4,#01H
0004         ?C0018:
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
0004 120000      R     LCALL   tmrbit
0007 E4                CLR     A
0008 33                RLC     A
0009 FF                MOV     R7,A
;---- Variable 'j' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 97
000A C4                SWAP    A
000B 33                RLC     A
000C 33                RLC     A
000D 33                RLC     A
000E 5480              ANL     A,#080H
0010 FE                MOV     R6,A
0011 ED                MOV     A,R5
0012 C3                CLR     C
0013 13                RRC     A
0014 4E                ORL     A,R6
0015 FD                MOV     R5,A
                                           ; SOURCE LINE # 99
0016 0C                INC     R4
0017 BC09EA            CJNE    R4,#09H,?C0018
001A         ?C0019:
                                           ; SOURCE LINE # 100
001A AF05              MOV     R7,AR5
                                           ; SOURCE LINE # 101
001C 22                RET     
             ; FUNCTION tmrbyte (END)

C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 10  

             ; FUNCTION L?0085 (BEGIN)
0000 120000      R     LCALL   tmreset
0003 120000      R     LCALL   tmpre
0006 7F01              MOV     R7,#01H
0008 7E00              MOV     R6,#00H
000A 120000      R     LCALL   _dmsec
000D 7FCC              MOV     R7,#0CCH
             ; FUNCTION _tmwbyte (BEGIN)
                                           ; SOURCE LINE # 102
;---- Variable 'dat' assigned to Register 'R5' ----
000F AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 107
;---- Variable 'j' assigned to Register 'R3' ----
0011 7B01              MOV     R3,#01H
0013         ?C0022:
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0013 ED                MOV     A,R5
0014 13                RRC     A
0015 9200        R     MOV     testb,C
                                           ; SOURCE LINE # 110
0017 ED                MOV     A,R5
0018 C3                CLR     C
0019 13                RRC     A
001A FD                MOV     R5,A
                                           ; SOURCE LINE # 111
001B 30001D            JNB     testb,?C0025
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
001E C290              CLR     DQ
                                           ; SOURCE LINE # 114
0020 0500        R     INC     i+01H
0022 E500        R     MOV     A,i+01H
0024 7002              JNZ     ?C0077
0026 0500        R     INC     i
0028         ?C0077:
                                           ; SOURCE LINE # 115
0028 0500        R     INC     i+01H
002A E500        R     MOV     A,i+01H
002C 7002              JNZ     ?C0078
002E 0500        R     INC     i
0030         ?C0078:
                                           ; SOURCE LINE # 116
0030 D290              SETB    DQ
                                           ; SOURCE LINE # 117
0032 7F04              MOV     R7,#04H
0034 7E00              MOV     R6,#00H
0036 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 118
0039 801B              SJMP    ?C0024
003B         ?C0025:
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
003B C290              CLR     DQ
                                           ; SOURCE LINE # 122
003D 7F04              MOV     R7,#04H
003F 7E00              MOV     R6,#00H
0041 120000      R     LCALL   _Delay
                                           ; SOURCE LINE # 123
0044 D290              SETB    DQ
                                           ; SOURCE LINE # 124
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 11  

0046 0500        R     INC     i+01H
0048 E500        R     MOV     A,i+01H
004A 7002              JNZ     ?C0079
004C 0500        R     INC     i
004E         ?C0079:
                                           ; SOURCE LINE # 125
004E 0500        R     INC     i+01H
0050 E500        R     MOV     A,i+01H
0052 7002              JNZ     ?C0080
0054 0500        R     INC     i
0056         ?C0080:
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
0056         ?C0024:
0056 0B                INC     R3
0057 BB09B9            CJNE    R3,#09H,?C0022
                                           ; SOURCE LINE # 128
005A         ?C0027:
005A 22                RET     
             ; FUNCTION _tmwbyte (END)

             ; FUNCTION tmstart (BEGIN)
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
0000 7F01              MOV     R7,#01H
0002 7E00              MOV     R6,#00H
0004 120000      R     LCALL   _dmsec
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
0007 120000      R     LCALL   L?0085
                                           ; SOURCE LINE # 137
000A 7F44              MOV     R7,#044H
000C 020000      R     LJMP    _tmwbyte
             ; FUNCTION tmstart (END)

             ; FUNCTION tmrtemp (BEGIN)
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
0000 120000      R     LCALL   L?0085
                                           ; SOURCE LINE # 147
0003 7FBE              MOV     R7,#0BEH
0005 120000      R     LCALL   _tmwbyte
                                           ; SOURCE LINE # 148
0008 120000      R     LCALL   tmrbyte
;---- Variable 'a' assigned to Register 'R3' ----
000B AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 149
000D 120000      R     LCALL   tmrbyte
;---- Variable 'b' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 150
0010 750000      R     MOV     y3,#00H
0013 8F00        R     MOV     y3+01H,R7
                                           ; SOURCE LINE # 151
0015 E500        R     MOV     A,y3+01H
0017 750000      R     MOV     y3+01H,#00H
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 12  

001A F500        R     MOV     y3,A
                                           ; SOURCE LINE # 152
001C AF03              MOV     R7,AR3
001E EF                MOV     A,R7
001F 4200        R     ORL     y3+01H,A
0021 E4                CLR     A
                                           ; SOURCE LINE # 153
0022 AC00        R     MOV     R4,y3
0024 AD00        R     MOV     R5,y3+01H
0026 120000      E     LCALL   ?C?FCASTI
0029 E4                CLR     A
002A FB                MOV     R3,A
002B FA                MOV     R2,A
002C 7980              MOV     R1,#080H
002E 783D              MOV     R0,#03DH
0030 120000      E     LCALL   ?C?FPMUL
0033 8F00        R     MOV     ff+03H,R7
0035 8E00        R     MOV     ff+02H,R6
0037 8D00        R     MOV     ff+01H,R5
0039 8C00        R     MOV     ff,R4
                                           ; SOURCE LINE # 154
003B E4                CLR     A
003C FF                MOV     R7,A
003D FE                MOV     R6,A
003E 7D20              MOV     R5,#020H
0040 7C41              MOV     R4,#041H
0042 AB00        R     MOV     R3,ff+03H
0044 AA00        R     MOV     R2,ff+02H
0046 A900        R     MOV     R1,ff+01H
0048 A800        R     MOV     R0,ff
004A 120000      E     LCALL   ?C?FPMUL
004D E4                CLR     A
004E FB                MOV     R3,A
004F FA                MOV     R2,A
0050 F9                MOV     R1,A
0051 783F              MOV     R0,#03FH
0053 120000      E     LCALL   ?C?FPADD
0056 120000      E     LCALL   ?C?CASTF
0059 8E00        R     MOV     y3,R6
005B 8F00        R     MOV     y3+01H,R7
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
005D 22                RET     
             ; FUNCTION tmrtemp (END)

             ; FUNCTION keyscan (BEGIN)
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 159
0000 20B219            JB      key2,?C0030
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
0003 7F05              MOV     R7,#05H
0005 7E00              MOV     R6,#00H
0007 120000      R     LCALL   _dmsec
                                           ; SOURCE LINE # 162
000A 20B20A            JB      key2,?C0033
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
000D 0500        R     INC     yushe
                                           ; SOURCE LINE # 165
000F E500        R     MOV     A,yushe
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 13  

0011 B46403            CJNE    A,#064H,?C0033
                                           ; SOURCE LINE # 166
0014 750019      R     MOV     yushe,#019H
                                           ; SOURCE LINE # 167
0017         ?C0033:
                                           ; SOURCE LINE # 168
0017 20B218            JB      key2,?C0041
001A 80FB              SJMP    ?C0033
                                           ; SOURCE LINE # 170
001C         ?C0030:
                                           ; SOURCE LINE # 171
001C 20B313            JB      key3,?C0041
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 173
001F 7F05              MOV     R7,#05H
0021 7E00              MOV     R6,#00H
0023 120000      R     LCALL   _dmsec
                                           ; SOURCE LINE # 174
0026 20B306            JB      key3,?C0039
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
0029 D50003            DJNZ    yushe,?C0039
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
002C 750019      R     MOV     yushe,#019H
                                           ; SOURCE LINE # 179
002F         ?C0039:
                                           ; SOURCE LINE # 180
002F 30B3FD            JNB     key3,?C0039
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0032         ?C0041:
0032 22                RET     
             ; FUNCTION keyscan (END)

             ; FUNCTION time0_int (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C004              PUSH    AR4
0009 C005              PUSH    AR5
000B C006              PUSH    AR6
000D C007              PUSH    AR7
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 188
000F 758C3C            MOV     TH0,#03CH
                                           ; SOURCE LINE # 189
0012 758AB0            MOV     TL0,#0B0H
                                           ; SOURCE LINE # 190
0015 0500        R     INC     j
                                           ; SOURCE LINE # 191
0017 AF00        R     MOV     R7,yushe
0019 7E00              MOV     R6,#00H
001B D3                SETB    C
001C E500        R     MOV     A,tmp+01H
001E 9F                SUBB    A,R7
001F E500        R     MOV     A,tmp
0021 9E                SUBB    A,R6
0022 5005              JNC     ?C0042
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
0024 C2B4              CLR     P3_4
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 14  

                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
0026 020000      R     LJMP    ?C0084
0029         ?C0042:
                                           ; SOURCE LINE # 196
0029 D3                SETB    C
002A E500        R     MOV     A,tmp+01H
002C 9F                SUBB    A,R7
002D E500        R     MOV     A,tmp
002F 9E                SUBB    A,R6
0030 4023              JC      ?C0044
0032 EF                MOV     A,R7
0033 2405              ADD     A,#05H
0035 FF                MOV     R7,A
0036 E4                CLR     A
0037 3E                ADDC    A,R6
0038 FE                MOV     R6,A
0039 D3                SETB    C
003A E500        R     MOV     A,tmp+01H
003C 9F                SUBB    A,R7
003D E500        R     MOV     A,tmp
003F 9E                SUBB    A,R6
0040 5013              JNC     ?C0044
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
0042 E500        R     MOV     A,j
0044 B40404            CJNE    A,#04H,?C0045
                                           ; SOURCE LINE # 199
0047 C2B4              CLR     P3_4
0049 8007              SJMP    ?C0046
004B         ?C0045:
                                           ; SOURCE LINE # 200
004B E500        R     MOV     A,j
004D B41402            CJNE    A,#014H,?C0046
                                           ; SOURCE LINE # 201
0050 D2B4              SETB    P3_4
0052         ?C0046:
                                           ; SOURCE LINE # 202
0052         ?C0081:
                                           ; SOURCE LINE # 203
0052 020000      R     LJMP    ?C0084
0055         ?C0044:
                                           ; SOURCE LINE # 204
0055 AF00        R     MOV     R7,yushe
0057 7E00              MOV     R6,#00H
0059 EF                MOV     A,R7
005A 2405              ADD     A,#05H
005C FD                MOV     R5,A
005D EE                MOV     A,R6
005E 33                RLC     A
005F FC                MOV     R4,A
0060 D3                SETB    C
0061 E500        R     MOV     A,tmp+01H
0063 9D                SUBB    A,R5
0064 E500        R     MOV     A,tmp
0066 9C                SUBB    A,R4
0067 402B              JC      ?C0049
0069 EF                MOV     A,R7
006A 240A              ADD     A,#0AH
006C FF                MOV     R7,A
006D EE                MOV     A,R6
006E 33                RLC     A
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 15  

006F FE                MOV     R6,A
0070 D3                SETB    C
0071 E500        R     MOV     A,tmp+01H
0073 9F                SUBB    A,R7
0074 E500        R     MOV     A,tmp
0076 9E                SUBB    A,R6
0077 501B              JNC     ?C0049
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
0079 E500        R     MOV     A,j
007B B40804            CJNE    A,#08H,?C0050
                                           ; SOURCE LINE # 207
007E C2B4              CLR     P3_4
0080 8010              SJMP    ?C0051
0082         ?C0050:
                                           ; SOURCE LINE # 208
0082 E500        R     MOV     A,j
0084 B41404            CJNE    A,#014H,?C0052
                                           ; SOURCE LINE # 209
0087 C2B4              CLR     P3_4
0089 8007              SJMP    ?C0051
008B         ?C0052:
                                           ; SOURCE LINE # 210
008B E500        R     MOV     A,j
008D B41402            CJNE    A,#014H,?C0051
                                           ; SOURCE LINE # 211
0090 D2B4              SETB    P3_4
0092         ?C0051:
                                           ; SOURCE LINE # 212
0092         ?C0082:
                                           ; SOURCE LINE # 213
0092 806A              SJMP    ?C0084
0094         ?C0049:
                                           ; SOURCE LINE # 214
0094 AF00        R     MOV     R7,yushe
0096 7E00              MOV     R6,#00H
0098 EF                MOV     A,R7
0099 240A              ADD     A,#0AH
009B FD                MOV     R5,A
009C EE                MOV     A,R6
009D 33                RLC     A
009E FC                MOV     R4,A
009F D3                SETB    C
00A0 E500        R     MOV     A,tmp+01H
00A2 9D                SUBB    A,R5
00A3 E500        R     MOV     A,tmp
00A5 9C                SUBB    A,R4
00A6 4022              JC      ?C0056
00A8 EF                MOV     A,R7
00A9 240F              ADD     A,#0FH
00AB FF                MOV     R7,A
00AC EE                MOV     A,R6
00AD 33                RLC     A
00AE FE                MOV     R6,A
00AF D3                SETB    C
00B0 E500        R     MOV     A,tmp+01H
00B2 9F                SUBB    A,R7
00B3 E500        R     MOV     A,tmp
00B5 9E                SUBB    A,R6
00B6 5012              JNC     ?C0056
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 16  

00B8 E500        R     MOV     A,j
00BA B40C04            CJNE    A,#0CH,?C0057
                                           ; SOURCE LINE # 217
00BD C2B4              CLR     P3_4
00BF 8007              SJMP    ?C0058
00C1         ?C0057:
                                           ; SOURCE LINE # 218
00C1 E500        R     MOV     A,j
00C3 B41402            CJNE    A,#014H,?C0058
                                           ; SOURCE LINE # 219
00C6 D2B4              SETB    P3_4
00C8         ?C0058:
                                           ; SOURCE LINE # 220
00C8         ?C0083:
                                           ; SOURCE LINE # 221
00C8 8034              SJMP    ?C0084
00CA         ?C0056:
                                           ; SOURCE LINE # 222
00CA AF00        R     MOV     R7,yushe
00CC 7E00              MOV     R6,#00H
00CE EF                MOV     A,R7
00CF 240F              ADD     A,#0FH
00D1 FD                MOV     R5,A
00D2 EE                MOV     A,R6
00D3 33                RLC     A
00D4 FC                MOV     R4,A
00D5 D3                SETB    C
00D6 E500        R     MOV     A,tmp+01H
00D8 9D                SUBB    A,R5
00D9 E500        R     MOV     A,tmp
00DB 9C                SUBB    A,R4
00DC 4025              JC      ?C0061
00DE EF                MOV     A,R7
00DF 2414              ADD     A,#014H
00E1 FF                MOV     R7,A
00E2 EE                MOV     A,R6
00E3 33                RLC     A
00E4 FE                MOV     R6,A
00E5 D3                SETB    C
00E6 E500        R     MOV     A,tmp+01H
00E8 9F                SUBB    A,R7
00E9 E500        R     MOV     A,tmp
00EB 9E                SUBB    A,R6
00EC 5015              JNC     ?C0061
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
00EE E500        R     MOV     A,j
00F0 B41004            CJNE    A,#010H,?C0062
                                           ; SOURCE LINE # 225
00F3 C2B4              CLR     P3_4
00F5 8007              SJMP    ?C0063
00F7         ?C0062:
                                           ; SOURCE LINE # 226
00F7 E500        R     MOV     A,j
00F9 B41402            CJNE    A,#014H,?C0063
                                           ; SOURCE LINE # 227
00FC D2B4              SETB    P3_4
00FE         ?C0063:
                                           ; SOURCE LINE # 228
00FE         ?C0084:
00FE 750000      R     MOV     j,#00H
                                           ; SOURCE LINE # 229
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 17  

0101 8013              SJMP    ?C0043
0103         ?C0061:
                                           ; SOURCE LINE # 230
0103 E500        R     MOV     A,yushe
0105 2414              ADD     A,#014H
0107 FF                MOV     R7,A
0108 E4                CLR     A
0109 33                RLC     A
010A FE                MOV     R6,A
010B D3                SETB    C
010C E500        R     MOV     A,tmp+01H
010E 9F                SUBB    A,R7
010F E500        R     MOV     A,tmp
0111 9E                SUBB    A,R6
0112 4002              JC      ?C0043
                                           ; SOURCE LINE # 231
0114 D2B4              SETB    P3_4
0116         ?C0043:
                                           ; SOURCE LINE # 232
0116 750000      R     MOV     j,#00H
                                           ; SOURCE LINE # 233
0119 D007              POP     AR7
011B D006              POP     AR6
011D D005              POP     AR5
011F D004              POP     AR4
0121 D0D0              POP     PSW
0123 D0E0              POP     ACC
0125 32                RETI    
             ; FUNCTION time0_int (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 242
0000 758941            MOV     TMOD,#041H
                                           ; SOURCE LINE # 243
0003 758C3C            MOV     TH0,#03CH
                                           ; SOURCE LINE # 244
0006 758AB0            MOV     TL0,#0B0H
                                           ; SOURCE LINE # 245
0009 758D3C            MOV     TH1,#03CH
                                           ; SOURCE LINE # 246
000C 758AB0            MOV     TL0,#0B0H
                                           ; SOURCE LINE # 247
000F D2AF              SETB    EA
                                           ; SOURCE LINE # 248
0011 D2A9              SETB    ET0
                                           ; SOURCE LINE # 249
0013 D2AB              SETB    ET1
                                           ; SOURCE LINE # 250
0015 D28C              SETB    TR0
                                           ; SOURCE LINE # 251
0017 D28E              SETB    TR1
                                           ; SOURCE LINE # 253
0019 120000      R     LCALL   tmstart
                                           ; SOURCE LINE # 254
001C 7FC2              MOV     R7,#0C2H
001E 7E01              MOV     R6,#01H
0020 120000      R     LCALL   _dmsec
0023         ?C0068:
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 256
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 18  

                                           ; SOURCE LINE # 257
0023 120000      R     LCALL   tmstart
                                           ; SOURCE LINE # 258
0026 7F02              MOV     R7,#02H
0028 7E00              MOV     R6,#00H
002A 120000      R     LCALL   _dmsec
                                           ; SOURCE LINE # 259
002D 120000      R     LCALL   tmrtemp
0030 E4                CLR     A
0031 2F                ADD     A,R7
0032 F500        R     MOV     last+01H,A
0034 E4                CLR     A
0035 3401              ADDC    A,#01H
0037 F500        R     MOV     last,A
                                           ; SOURCE LINE # 260
0039 FE                MOV     R6,A
003A AF00        R     MOV     R7,last+01H
003C 7C00              MOV     R4,#00H
003E 7D64              MOV     R5,#064H
0040 120000      E     LCALL   ?C?UIDIV
0043 8F00        R     MOV     shi,R7
                                           ; SOURCE LINE # 261
0045 AE00        R     MOV     R6,last
0047 AF00        R     MOV     R7,last+01H
0049 7C00              MOV     R4,#00H
004B 7D64              MOV     R5,#064H
004D 120000      E     LCALL   ?C?UIDIV
0050 AA04              MOV     R2,AR4
0052 AB05              MOV     R3,AR5
0054 7D0A              MOV     R5,#0AH
0056 7C00              MOV     R4,#00H
0058 AF03              MOV     R7,AR3
005A AE02              MOV     R6,AR2
005C 120000      E     LCALL   ?C?UIDIV
005F 8F00        R     MOV     ge,R7
                                           ; SOURCE LINE # 262
0061 7D0A              MOV     R5,#0AH
0063 7C00              MOV     R4,#00H
0065 AF03              MOV     R7,AR3
0067 AE02              MOV     R6,AR2
0069 120000      E     LCALL   ?C?UIDIV
006C 8D00        R     MOV     xiaoshu,R5
                                           ; SOURCE LINE # 263
006E E500        R     MOV     A,yushe
0070 75F00A            MOV     B,#0AH
0073 84                DIV     AB
0074 F500        R     MOV     ?_digitalshow?BYTE+03H,A
0076 E500        R     MOV     A,yushe
0078 75F00A            MOV     B,#0AH
007B 84                DIV     AB
007C 85F000      R     MOV     ?_digitalshow?BYTE+04H,B
007F AB00        R     MOV     R3,xiaoshu
0081 AD00        R     MOV     R5,ge
0083 AF00        R     MOV     R7,shi
0085 120000      R     LCALL   _digitalshow
                                           ; SOURCE LINE # 264
0088 120000      R     LCALL   keyscan
                                           ; SOURCE LINE # 265
008B 7F02              MOV     R7,#02H
008D 7E00              MOV     R6,#00H
008F 120000      R     LCALL   _dmsec
                                           ; SOURCE LINE # 267
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 19  

0092 808F              SJMP    ?C0068
             ; FUNCTION main (END)

C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 20  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
xiaoshu. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
tmreset. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
tmrbyte. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
tmrtemp. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  a. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
  b. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
time0_int. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  j. . . . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
_dmsec . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  count. . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
_tmwbyte . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000FH  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
  testb. . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
dispbitcode. . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0002H  8
tmstart. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
DQ . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
tmrbit . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  dat. . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P3_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P3_5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_digitalshow . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  a4 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0007H  1
  a3 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 21  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  a2 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  a1 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  a0 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
tmpre. . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
y3 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    000AH  2
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
yushe. . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000CH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
last . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    000DH  2
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
shi. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000FH  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
ge . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0010H  1
ff . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   FLOAT    0011H  4
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
dispcode . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  10
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
C51 COMPILER V9.57.0.0   MAIN                                                              05/21/2021 22:38:47 PAGE 22  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_Delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0004H  -----
  num. . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
dispbuf. . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0015H  8
keyscan. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
key2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
key3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    933    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
