C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\main.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Release\main.lst) OMF2 TABS(4) CODE NOCON
                    -D SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.
                    -\build\Release\main.o)

line level    source

   1          #include<reg52.h>
   2          
   3          
   4          sbit ENA=P1^0;
   5          sbit led=P2^0;
   6          sbit ld=P2^1;
   7          
   8          sbit key=P3^2;
   9          
  10          typedef unsigned char uint8;
  11          typedef unsigned char uint16;
  12          uint8 count;
  13          bit flag1s=0;//1s定时标志
  14          unsigned char T0RH=0;
  15          unsigned char T0RL=0;
  16          
  17          int temp;//读取到的当前温度值
  18          unsigned char len;
  19          int intT,decT;//温度值的整数和小数部分
  20          unsigned char str[12];
  21          
  22          void Compare();
  23          void GetTemp();
  24          void ConfigTimer0(unsigned int ms);
  25          unsigned char IntToString(unsigned char *str,int dat);
  26          extern bit Start18B20();
  27          extern bit Get18B20Temp(int *temp);
  28          extern void InitLcd1602();
  29          extern void LcdShowStr(unsigned char x,unsigned char y,unsigned char *str);
  30          void Int0Init()
  31          {
  32   1          //设置INT0
  33   1          IT0 = 1; //跳变沿出发方式（下降沿）
  34   1          EX0 = 1; //打开INT0的中断允许。
  35   1          
  36   1      }
  37          
  38          void init_time0(){
  39   1      TMOD=0X01;
  40   1      TH0=0X4C;
  41   1      TL0=0X00;
  42   1      TR0=1;
  43   1      }
  44          void main()
  45          {
  46   1          unsigned int i=0;
  47   1          bit res;
  48   1          Int0Init();
  49   1          EA=1;
  50   1          ConfigTimer0(10);//T0定时10ms
  51   1          Start18B20();//启动DS18B20
  52   1          InitLcd1602();//初始化液晶
  53   1          
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 2   

  54   1          init_time0();
  55   1          while(1)
  56   1          {   
  57   2          if(TF0==1){
  58   3      
  59   3          TF0=0;
  60   3          TH0=0X4C;
  61   3          TL0=0X00;
  62   3          count++;
  63   3          }
  64   2          
  65   2          
  66   2              if(flag1s)//每秒更新一次温度
  67   2              {
  68   3                  flag1s=0;
  69   3                  res=Get18B20Temp(&temp);//读取当前温度
  70   3                  if(res)//读取成功时，刷新当前温度显示
  71   3                  {
  72   4                      GetTemp();
  73   4                  
  74   4                      LcdShowStr(0,0,"Welcome to use");//显示字符及温度值
  75   4                      LcdShowStr(0,1,"Current T:");
  76   4                      LcdShowStr(10,1,str);
  77   4                          Compare();
  78   4                  }
  79   3                  else //读取失败时，提示错误信息
  80   3                  {
  81   4                      LcdShowStr(0,0,"error!");
  82   4      
  83   4                  }
  84   3                  Start18B20();//重新启动下一次转换                    
  85   3              }
  86   2          }
  87   1      }
  88          /*温度获取函数，获取当前环境温度值并保存在str数组中*/
  89          void GetTemp()
  90          {
  91   1      
  92   1          intT=temp>>4;//分离出温度值整数部分
  93   1          decT=temp &0x0F;//分离出温度值小数部分
  94   1                  
  95   1          len=IntToString(str,intT);//整数部分转换成字符串
  96   1                  
  97   1          str[len++]='.';
  98   1          decT=(decT*10)/16;//二进制的小数部分转换为1位十进制位
  99   1          str[len++]=decT+'0';//十进制小数位再转换为ASCII字符
 100   1          while(len<6)//用空格补齐到6个字符长度
 101   1          {
 102   2              str[len++]=' ';
 103   2          }
 104   1          str[len++]='\0';
 105   1      }
 106          /*延时函数，用于PWM控制*/
 107          void delay(unsigned int z)
 108          {
 109   1          unsigned int x,y;
 110   1          for(x=z;x>0;x--)
 111   1              for(y=110;y>0;y--);
 112   1      } 
 113          /*比较函数，通过温度值的比较设置电机的转速*/
 114          void Compare()
 115          {
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 3   

 116   1          unsigned int i=0;
 117   1          unsigned char j;
 118   1      
 119   1          if((intT>= 24) && (intT<26))   //以两度为一个温差范围，并设温度范围索引
 120   1          {
 121   2              j=0;    
 122   2          }
 123   1          else if((intT>=26) &&(intT<28))
 124   1          {
 125   2              j=1;
 126   2          }
 127   1          else if((intT>=28) &&(intT<30))
 128   1          {
 129   2              j=2;
 130   2          }
 131   1          else if(intT>=30)
 132   1          {
 133   2              j=3;
 134   2          }
 135   1          switch(j)         //根据温度索引设置电机转速
 136   1          {
 137   2              case 0: 
 138   2                      for(i=0;i<200;i++)
 139   2                      {
 140   3                          ENA=1;
 141   3                          delay(10);
 142   3                          ENA=0;
 143   3                          delay(100);
 144   3                      }
 145   2                      break;
 146   2          
 147   2              case 1: 
 148   2                      for(i=0;i<200;i++)
 149   2                      {
 150   3                          ENA=1;
 151   3                          delay(30);
 152   3                          ENA=0;
 153   3                          delay(100);
 154   3                      }
 155   2                      break;   
 156   2          
 157   2              case 2: 
 158   2                      for(i=0;i<200;i++)
 159   2                      {
 160   3                          ENA=1;
 161   3                          delay(55);           
 162   3                          ENA=0;
 163   3                          delay(100);
 164   3                      }
 165   2                      break;   
 166   2                                  
 167   2              case 3: 
 168   2                      ENA=1;
 169   2                      break;
 170   2      
 171   2              default:break;       
 172   2          }
 173   1      }  
 174          
 175          /*整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度*/
 176          unsigned char IntToString(unsigned char *str,int dat)
 177          {
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 4   

 178   1          signed char i=0;
 179   1          unsigned char len=0;
 180   1          unsigned char buf[6];
 181   1      
 182   1          
 183   1          do{    //先转换为低位在前的十进制数组
 184   2              buf[i++]=dat%10;
 185   2              dat /=10;
 186   2          }while(dat>0);
 187   1          len += i;//i最后的值就是有效字符的个数
 188   1          while(i-->0)//将数组值转换为ASCII码反向拷贝到接收指针上
 189   1          {
 190   2              *str++=buf[i]+'0';
 191   2          }
 192   1          *str='\0';
 193   1          return len;
 194   1      }
 195          void ConfigTimer0(unsigned int ms)
 196          {
 197   1          unsigned long tmp;
 198   1      
 199   1          tmp=11059200/12;//定时器计数频率
 200   1          tmp=(tmp*ms)/1000;//计算所需的计数值
 201   1          tmp=65536-tmp;//计算定时器重载值
 202   1          tmp=tmp+12;//补偿中断延时造成的误差
 203   1          T0RH=(unsigned char)(tmp>>8); //定时器重载值拆分为高低字节
 204   1          T0RL=(unsigned char)tmp;
 205   1          TMOD &= 0xF0;//清零T0的控制位
 206   1          TMOD |= 0x01;//配置T0为模式1
 207   1          TH0=T0RH;//加载T0重载值
 208   1          TL0=T0RL;
 209   1          ET0=1;//使能T0中断
 210   1          TR0=1; //启动T0
 211   1      }
 212          /* T0中断服务函数，完成1s定时*/
 213          void InterruptTimer0() interrupt 1
 214          {
 215   1          static unsigned char tmr1s=0;
 216   1      
 217   1          TH0=T0RH;//重新加载重载值
 218   1          TL0=T0RL;
 219   1          tmr1s++;
 220   1          if(tmr1s>=100) //定时1s
 221   1          {
 222   2              tmr1s=0;
 223   2              flag1s=1;
 224   2          }        
 225   1      
 226   1      }
 227          void Int0() interrupt 0 //外部中断0的中断函数
 228          {
 229   1          delay(1000); //延时消抖
 230   1          if (key == 0)
 231   1          {
 232   2              ENA = ~ENA;
 233   2              while(!key);
 234   2          }
 235   1      }
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Int0Init (BEGIN)
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 33
0000 D288              SETB    IT0
                                           ; SOURCE LINE # 34
0002 D2A8              SETB    EX0
                                           ; SOURCE LINE # 36
0004 22                RET     
             ; FUNCTION Int0Init (END)

             ; FUNCTION init_time0 (BEGIN)
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0000 758901            MOV     TMOD,#01H
                                           ; SOURCE LINE # 40
0003 758C4C            MOV     TH0,#04CH
                                           ; SOURCE LINE # 41
0006 E4                CLR     A
0007 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 42
0009 D28C              SETB    TR0
                                           ; SOURCE LINE # 43
000B 22                RET     
             ; FUNCTION init_time0 (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003 F500        R     MOV     i+01H,A
                                           ; SOURCE LINE # 48
0005 120000      R     LCALL   Int0Init
                                           ; SOURCE LINE # 49
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 50
000A 7F0A              MOV     R7,#0AH
000C FE                MOV     R6,A
000D 120000      R     LCALL   _ConfigTimer0
                                           ; SOURCE LINE # 51
0010 120000      E     LCALL   Start18B20
                                           ; SOURCE LINE # 52
0013 120000      E     LCALL   InitLcd1602
                                           ; SOURCE LINE # 54
0016 120000      R     LCALL   init_time0
0019         ?C0003:
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0019 308D0A            JNB     TF0,?C0005
                                           ; SOURCE LINE # 59
001C C28D              CLR     TF0
                                           ; SOURCE LINE # 60
001E 758C4C            MOV     TH0,#04CH
                                           ; SOURCE LINE # 61
0021 E4                CLR     A
0022 F58A              MOV     TL0,A
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 6   

                                           ; SOURCE LINE # 62
0024 0500        R     INC     count
                                           ; SOURCE LINE # 63
0026         ?C0005:
                                           ; SOURCE LINE # 66
0026 3000F0            JNB     flag1s,?C0003
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0029 C200        R     CLR     flag1s
                                           ; SOURCE LINE # 69
002B 7B00              MOV     R3,#00H
002D 7A00        R     MOV     R2,#HIGH temp
002F 7900        R     MOV     R1,#LOW temp
0031 120000      E     LCALL   _Get18B20Temp
0034 9200        R     MOV     res,C
                                           ; SOURCE LINE # 70
0036 30002E            JNB     res,?C0007
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0039 120000      R     LCALL   GetTemp
                                           ; SOURCE LINE # 74
003C 7BFF              MOV     R3,#0FFH
003E 7A00        R     MOV     R2,#HIGH ?SC_0
0040 7900        R     MOV     R1,#LOW ?SC_0
0042 E4                CLR     A
0043 FD                MOV     R5,A
0044 FF                MOV     R7,A
0045 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 75
0048 7BFF              MOV     R3,#0FFH
004A 7A00        R     MOV     R2,#HIGH ?SC_15
004C 7900        R     MOV     R1,#LOW ?SC_15
004E 7D01              MOV     R5,#01H
0050 E4                CLR     A
0051 FF                MOV     R7,A
0052 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 76
0055 7B00              MOV     R3,#00H
0057 7A00        R     MOV     R2,#HIGH str
0059 7900        R     MOV     R1,#LOW str
005B 7D01              MOV     R5,#01H
005D 7F0A              MOV     R7,#0AH
005F 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 77
0062 120000      R     LCALL   Compare
                                           ; SOURCE LINE # 78
0065 800C              SJMP    ?C0008
0067         ?C0007:
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
0067 7BFF              MOV     R3,#0FFH
0069 7A00        R     MOV     R2,#HIGH ?SC_26
006B 7900        R     MOV     R1,#LOW ?SC_26
006D E4                CLR     A
006E FD                MOV     R5,A
006F FF                MOV     R7,A
0070 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 83
0073         ?C0008:
                                           ; SOURCE LINE # 84
0073 120000      E     LCALL   Start18B20
                                           ; SOURCE LINE # 85
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 7   

                                           ; SOURCE LINE # 86
0076 80A1              SJMP    ?C0003
             ; FUNCTION main (END)

             ; FUNCTION GetTemp (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 92
0000 E500        R     MOV     A,temp+01H
0002 AE00        R     MOV     R6,temp
0004 7804              MOV     R0,#04H
0006         ?C0056:
0006 CE                XCH     A,R6
0007 A2E7              MOV     C,ACC.7
0009 13                RRC     A
000A CE                XCH     A,R6
000B 13                RRC     A
000C D8F8              DJNZ    R0,?C0056
000E F500        R     MOV     intT+01H,A
0010 8E00        R     MOV     intT,R6
                                           ; SOURCE LINE # 93
0012 750000      R     MOV     decT,#00H
0015 E500        R     MOV     A,temp+01H
0017 540F              ANL     A,#0FH
0019 F500        R     MOV     decT+01H,A
                                           ; SOURCE LINE # 95
001B 7B00              MOV     R3,#00H
001D 7A00        R     MOV     R2,#HIGH str
001F 7900        R     MOV     R1,#LOW str
0021 AD00        R     MOV     R5,intT+01H
0023 AC00        R     MOV     R4,intT
0025 120000      R     LCALL   _IntToString
0028 8F00        R     MOV     len,R7
                                           ; SOURCE LINE # 97
002A 0500        R     INC     len
002C 7400        R     MOV     A,#LOW str
002E 2F                ADD     A,R7
002F F8                MOV     R0,A
0030 762E              MOV     @R0,#02EH
                                           ; SOURCE LINE # 98
0032 AE00        R     MOV     R6,decT
0034 AF00        R     MOV     R7,decT+01H
0036 7C00              MOV     R4,#00H
0038 7D0A              MOV     R5,#0AH
003A 120000      E     LCALL   ?C?IMUL
003D 7D10              MOV     R5,#010H
003F 120000      E     LCALL   ?C?SIDIV
0042 8E00        R     MOV     decT,R6
0044 8F00        R     MOV     decT+01H,R7
                                           ; SOURCE LINE # 99
0046 EF                MOV     A,R7
0047 2430              ADD     A,#030H
0049 FF                MOV     R7,A
004A AE00        R     MOV     R6,len
004C 0500        R     INC     len
004E 7400        R     MOV     A,#LOW str
0050 2E                ADD     A,R6
0051 F8                MOV     R0,A
0052 A607              MOV     @R0,AR7
0054         ?C0010:
                                           ; SOURCE LINE # 100
0054 E500        R     MOV     A,len
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 8   

0056 C3                CLR     C
0057 9406              SUBB    A,#06H
0059 500C              JNC     ?C0011
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
005B AF00        R     MOV     R7,len
005D 0500        R     INC     len
005F 7400        R     MOV     A,#LOW str
0061 2F                ADD     A,R7
0062 F8                MOV     R0,A
0063 7620              MOV     @R0,#020H
                                           ; SOURCE LINE # 103
0065 80ED              SJMP    ?C0010
0067         ?C0011:
                                           ; SOURCE LINE # 104
0067 AF00        R     MOV     R7,len
0069 0500        R     INC     len
006B 7400        R     MOV     A,#LOW str
006D 2F                ADD     A,R7
006E F8                MOV     R0,A
006F E4                CLR     A
0070 F6                MOV     @R0,A
                                           ; SOURCE LINE # 105
0071 22                RET     
             ; FUNCTION GetTemp (END)

             ; FUNCTION L?0065 (BEGIN)
0000         L?0066:
0000 7E00              MOV     R6,#00H
0002 120000      R     LCALL   _delay
0005 C290              CLR     ENA
0007 7F64              MOV     R7,#064H
0009 7E00              MOV     R6,#00H
             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 107
;---- Variable 'z' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 110
;---- Variable 'x' assigned to Register 'R6/R7' ----
000B         ?C0013:
000B D3                SETB    C
000C EF                MOV     A,R7
000D 9400              SUBB    A,#00H
000F EE                MOV     A,R6
0010 9400              SUBB    A,#00H
0012 4014              JC      ?C0019
                                           ; SOURCE LINE # 111
;---- Variable 'y' assigned to Register 'R4/R5' ----
0014 7D6E              MOV     R5,#06EH
0016 7C00              MOV     R4,#00H
0018         ?C0016:
0018 ED                MOV     A,R5
0019 1D                DEC     R5
001A 7001              JNZ     ?C0057
001C 1C                DEC     R4
001D         ?C0057:
001D ED                MOV     A,R5
001E 4C                ORL     A,R4
001F 70F7              JNZ     ?C0016
0021         ?C0015:
0021 EF                MOV     A,R7
0022 1F                DEC     R7
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 9   

0023 70E6              JNZ     ?C0013
0025 1E                DEC     R6
0026         ?C0058:
0026 80E3              SJMP    ?C0013
                                           ; SOURCE LINE # 112
0028         ?C0019:
0028 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION Compare (BEGIN)
                                           ; SOURCE LINE # 114
;---- Variable 'j' assigned to Register 'R1' ----
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
;---- Variable 'i' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 119
0000 C3                CLR     C
0001 E500        R     MOV     A,intT+01H
0003 9418              SUBB    A,#018H
0005 E500        R     MOV     A,intT
0007 6480              XRL     A,#080H
0009 9480              SUBB    A,#080H
000B 4010              JC      ?C0020
000D E500        R     MOV     A,intT+01H
000F 941A              SUBB    A,#01AH
0011 E500        R     MOV     A,intT
0013 6480              XRL     A,#080H
0015 9480              SUBB    A,#080H
0017 5004              JNC     ?C0020
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
0019 E4                CLR     A
001A F9                MOV     R1,A
                                           ; SOURCE LINE # 122
001B 8049              SJMP    ?C0021
001D         ?C0020:
                                           ; SOURCE LINE # 123
001D C3                CLR     C
001E E500        R     MOV     A,intT+01H
0020 941A              SUBB    A,#01AH
0022 E500        R     MOV     A,intT
0024 6480              XRL     A,#080H
0026 9480              SUBB    A,#080H
0028 4010              JC      ?C0022
002A E500        R     MOV     A,intT+01H
002C 941C              SUBB    A,#01CH
002E E500        R     MOV     A,intT
0030 6480              XRL     A,#080H
0032 9480              SUBB    A,#080H
0034 5004              JNC     ?C0022
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0036 7901              MOV     R1,#01H
                                           ; SOURCE LINE # 126
0038 802C              SJMP    ?C0021
003A         ?C0022:
                                           ; SOURCE LINE # 127
003A C3                CLR     C
003B E500        R     MOV     A,intT+01H
003D 941C              SUBB    A,#01CH
003F E500        R     MOV     A,intT
0041 6480              XRL     A,#080H
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 10  

0043 9480              SUBB    A,#080H
0045 4010              JC      ?C0024
0047 E500        R     MOV     A,intT+01H
0049 941E              SUBB    A,#01EH
004B E500        R     MOV     A,intT
004D 6480              XRL     A,#080H
004F 9480              SUBB    A,#080H
0051 5004              JNC     ?C0024
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0053 7902              MOV     R1,#02H
                                           ; SOURCE LINE # 130
0055 800F              SJMP    ?C0021
0057         ?C0024:
                                           ; SOURCE LINE # 131
0057 C3                CLR     C
0058 E500        R     MOV     A,intT+01H
005A 941E              SUBB    A,#01EH
005C E500        R     MOV     A,intT
005E 6480              XRL     A,#080H
0060 9480              SUBB    A,#080H
0062 4002              JC      ?C0021
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
0064 7903              MOV     R1,#03H
                                           ; SOURCE LINE # 134
0066         ?C0021:
                                           ; SOURCE LINE # 135
0066 E9                MOV     A,R1
0067 14                DEC     A
0068 6020              JZ      ?C0032
006A 14                DEC     A
006B 6033              JZ      ?C0036
006D 14                DEC     A
006E 6046              JZ      ?C0040
0070 2403              ADD     A,#03H
0072 7044              JNZ     ?C0042
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
0074         ?C0028:
                                           ; SOURCE LINE # 138
0074 E4                CLR     A
0075 FA                MOV     R2,A
0076 FB                MOV     R3,A
0077         ?C0029:
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
0077 D290              SETB    ENA
                                           ; SOURCE LINE # 141
0079 7F0A              MOV     R7,#0AH
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
007B 120000      R     LCALL   L?0065
                                           ; SOURCE LINE # 144
007E 0B                INC     R3
007F BB0001            CJNE    R3,#00H,?C0059
0082 0A                INC     R2
0083         ?C0059:
0083 EB                MOV     A,R3
0084 64C8              XRL     A,#0C8H
0086 4A                ORL     A,R2
0087 70EE              JNZ     ?C0029
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 11  

0089 22                RET     
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 147
008A         ?C0032:
                                           ; SOURCE LINE # 148
008A E4                CLR     A
008B FA                MOV     R2,A
008C FB                MOV     R3,A
008D         ?C0033:
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
008D D290              SETB    ENA
                                           ; SOURCE LINE # 151
008F 7F1E              MOV     R7,#01EH
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
0091 120000      R     LCALL   L?0065
                                           ; SOURCE LINE # 154
0094 0B                INC     R3
0095 BB0001            CJNE    R3,#00H,?C0060
0098 0A                INC     R2
0099         ?C0060:
0099 EB                MOV     A,R3
009A 64C8              XRL     A,#0C8H
009C 4A                ORL     A,R2
009D 70EE              JNZ     ?C0033
009F         ?C0063:
009F 22                RET     
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 157
00A0         ?C0036:
                                           ; SOURCE LINE # 158
00A0 E4                CLR     A
00A1 FA                MOV     R2,A
00A2 FB                MOV     R3,A
00A3         ?C0037:
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
00A3 D290              SETB    ENA
                                           ; SOURCE LINE # 161
00A5 7F37              MOV     R7,#037H
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
00A7 120000      R     LCALL   L?0066
                                           ; SOURCE LINE # 164
00AA 0B                INC     R3
00AB BB0001            CJNE    R3,#00H,?C0061
00AE 0A                INC     R2
00AF         ?C0061:
00AF EB                MOV     A,R3
00B0 64C8              XRL     A,#0C8H
00B2 4A                ORL     A,R2
00B3 70EE              JNZ     ?C0037
00B5         ?C0064:
00B5 22                RET     
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 167
00B6         ?C0040:
                                           ; SOURCE LINE # 168
00B6 D290              SETB    ENA
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 171
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 12  

                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 173
00B8         ?C0042:
00B8 22                RET     
             ; FUNCTION Compare (END)

             ; FUNCTION _IntToString (BEGIN)
                                           ; SOURCE LINE # 176
0000 8B00        R     MOV     str,R3
0002 8A00        R     MOV     str+01H,R2
0004 8900        R     MOV     str+02H,R1
;---- Variable 'dat' assigned to Register 'R2/R3' ----
0006 AB05              MOV     R3,AR5
0008 AA04              MOV     R2,AR4
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
000A E4                CLR     A
000B F500        R     MOV     i,A
                                           ; SOURCE LINE # 179
000D F500        R     MOV     len,A
000F         ?C0045:
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
000F 7C00              MOV     R4,#00H
0011 7D0A              MOV     R5,#0AH
0013 AF03              MOV     R7,AR3
0015 AE02              MOV     R6,AR2
0017 120000      E     LCALL   ?C?SIDIV
001A AF05              MOV     R7,AR5
001C AE00        R     MOV     R6,i
001E 0500        R     INC     i
0020 7400        R     MOV     A,#LOW buf
0022 2E                ADD     A,R6
0023 F8                MOV     R0,A
0024 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 185
0026 7C00              MOV     R4,#00H
0028 7D0A              MOV     R5,#0AH
002A AF03              MOV     R7,AR3
002C AE02              MOV     R6,AR2
002E 120000      E     LCALL   ?C?SIDIV
0031 AA06              MOV     R2,AR6
0033 AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 186
0035 D3                SETB    C
0036 EB                MOV     A,R3
0037 9400              SUBB    A,#00H
0039 EA                MOV     A,R2
003A 6480              XRL     A,#080H
003C 9480              SUBB    A,#080H
003E 50CF              JNC     ?C0045
                                           ; SOURCE LINE # 187
0040 E500        R     MOV     A,i
0042 2500        R     ADD     A,len
0044 F500        R     MOV     len,A
0046         ?C0046:
                                           ; SOURCE LINE # 188
0046 AF00        R     MOV     R7,i
0048 1500        R     DEC     i
004A D3                SETB    C
004B EF                MOV     A,R7
004C 6480              XRL     A,#080H
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 13  

004E 9480              SUBB    A,#080H
0050 401D              JC      ?C0047
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
0052 7400        R     MOV     A,#LOW buf
0054 2500        R     ADD     A,i
0056 F8                MOV     R0,A
0057 E6                MOV     A,@R0
0058 2430              ADD     A,#030H
005A FF                MOV     R7,A
005B AB00        R     MOV     R3,str
005D 0500        R     INC     str+02H
005F E500        R     MOV     A,str+02H
0061 AA00        R     MOV     R2,str+01H
0063 7002              JNZ     ?C0062
0065 0500        R     INC     str+01H
0067         ?C0062:
0067 14                DEC     A
0068 F9                MOV     R1,A
0069 EF                MOV     A,R7
006A 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 191
006D 80D7              SJMP    ?C0046
006F         ?C0047:
                                           ; SOURCE LINE # 192
006F AB00        R     MOV     R3,str
0071 AA00        R     MOV     R2,str+01H
0073 A900        R     MOV     R1,str+02H
0075 E4                CLR     A
0076 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 193
0079 AF00        R     MOV     R7,len
                                           ; SOURCE LINE # 194
007B 22                RET     
             ; FUNCTION _IntToString (END)

             ; FUNCTION _ConfigTimer0 (BEGIN)
                                           ; SOURCE LINE # 195
;---- Variable 'ms' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 199
0000 750000      R     MOV     tmp+03H,#00H
0003 750010      R     MOV     tmp+02H,#010H
0006 75000E      R     MOV     tmp+01H,#0EH
0009 750000      R     MOV     tmp,#00H
                                           ; SOURCE LINE # 200
000C E4                CLR     A
000D FC                MOV     R4,A
000E FD                MOV     R5,A
000F AB00        R     MOV     R3,tmp+03H
0011 AA00        R     MOV     R2,tmp+02H
0013 A900        R     MOV     R1,tmp+01H
0015 A800        R     MOV     R0,tmp
0017 120000      E     LCALL   ?C?LMUL
001A E4                CLR     A
001B 7BE8              MOV     R3,#0E8H
001D 7A03              MOV     R2,#03H
001F F9                MOV     R1,A
0020 F8                MOV     R0,A
0021 120000      E     LCALL   ?C?ULDIV
0024 8F00        R     MOV     tmp+03H,R7
0026 8E00        R     MOV     tmp+02H,R6
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 14  

0028 8D00        R     MOV     tmp+01H,R5
002A 8C00        R     MOV     tmp,R4
                                           ; SOURCE LINE # 201
002C C3                CLR     C
002D E4                CLR     A
002E 9500        R     SUBB    A,tmp+03H
0030 F500        R     MOV     tmp+03H,A
0032 E4                CLR     A
0033 9500        R     SUBB    A,tmp+02H
0035 F500        R     MOV     tmp+02H,A
0037 7401              MOV     A,#01H
0039 9500        R     SUBB    A,tmp+01H
003B F500        R     MOV     tmp+01H,A
003D E4                CLR     A
003E 9500        R     SUBB    A,tmp
0040 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 202
0042 E500        R     MOV     A,tmp+03H
0044 240C              ADD     A,#0CH
0046 F500        R     MOV     tmp+03H,A
0048 E4                CLR     A
0049 3500        R     ADDC    A,tmp+02H
004B F500        R     MOV     tmp+02H,A
004D E4                CLR     A
004E 3500        R     ADDC    A,tmp+01H
0050 F500        R     MOV     tmp+01H,A
0052 E4                CLR     A
0053 3500        R     ADDC    A,tmp
0055 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 203
0057 AF00        R     MOV     R7,tmp+03H
0059 AE00        R     MOV     R6,tmp+02H
005B AD00        R     MOV     R5,tmp+01H
005D FC                MOV     R4,A
005E 7808              MOV     R0,#08H
0060 120000      E     LCALL   ?C?ULSHR
0063 8F00        R     MOV     T0RH,R7
                                           ; SOURCE LINE # 204
0065 850000      R     MOV     T0RL,tmp+03H
                                           ; SOURCE LINE # 205
0068 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 206
006B 438901            ORL     TMOD,#01H
                                           ; SOURCE LINE # 207
006E 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 208
0071 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 209
0074 D2A9              SETB    ET0
                                           ; SOURCE LINE # 210
0076 D28C              SETB    TR0
                                           ; SOURCE LINE # 211
0078 22                RET     
             ; FUNCTION _ConfigTimer0 (END)

             ; FUNCTION InterruptTimer0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 217
0004 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 218
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 15  

0007 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 219
000A 0500        R     INC     tmr1s
                                           ; SOURCE LINE # 220
000C E500        R     MOV     A,tmr1s
000E C3                CLR     C
000F 9464              SUBB    A,#064H
0011 4005              JC      ?C0051
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0013 750000      R     MOV     tmr1s,#00H
                                           ; SOURCE LINE # 223
0016 D200        R     SETB    flag1s
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 226
0018         ?C0051:
0018 D0D0              POP     PSW
001A D0E0              POP     ACC
001C 32                RETI    
             ; FUNCTION InterruptTimer0 (END)

             ; FUNCTION Int0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C004              PUSH    AR4
0009 C005              PUSH    AR5
000B C006              PUSH    AR6
000D C007              PUSH    AR7
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 229
000F 7FE8              MOV     R7,#0E8H
0011 7E03              MOV     R6,#03H
0013 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 230
0016 20B205            JB      key,?C0055
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0019 B290              CPL     ENA
001B         ?C0053:
                                           ; SOURCE LINE # 233
001B 30B2FD            JNB     key,?C0053
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
001E         ?C0055:
001E D007              POP     AR7
0020 D006              POP     AR6
0022 D005              POP     AR5
0024 D004              POP     AR4
0026 D0D0              POP     PSW
0028 D0E0              POP     ACC
002A 32                RETI    
             ; FUNCTION Int0 (END)

C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
decT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0001H  2
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
InterruptTimer0. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmr1s. . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_ConfigTimer0. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000BH  -----
  z. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
T0RH . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0003H  1
Start18B20 . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
intT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0004H  2
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
T0RL . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  res. . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
uint16 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
count. . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0007H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
led. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
temp . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0008H  2
GetTemp. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
len. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000AH  1
flag1s . . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
_Get18B20Temp. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
key. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
Compare. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0001H  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
ld . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
ENA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
str. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000BH  12
Int0 . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
_IntToString . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   CHAR     0003H  1
  len. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:48:08 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   ARRAY    0005H  6
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
Int0Init . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_LcdShowStr. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
InitLcd1602. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
init_time0 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
uint8. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    800    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
