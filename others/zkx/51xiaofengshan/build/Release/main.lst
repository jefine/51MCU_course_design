C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\main.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Release\main.lst) OMF2 TABS(4) CODE NOCON
                    -D SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.
                    -\build\Release\main.o)

line level    source

   1          #include<reg52.h>
   2          
   3          sbit IN1=P2^7;
   4          sbit IN2=P2^6;
   5          sbit ENA=P2^5;
   6          
   7          bit flag1s=0;//1s定时标志
   8          unsigned char T0RH=0;
   9          unsigned char T0RL=0;
  10          
  11          int temp;//读取到的当前温度值
  12          unsigned char len;
  13          int intT,decT;//温度值的整数和小数部分
  14          unsigned char str[12];
  15          
  16          void Compare();
  17          void GetTemp();
  18          void ConfigTimer0(unsigned int ms);
  19          unsigned char IntToString(unsigned char *str,int dat);
  20          extern bit Start18B20();
  21          extern bit Get18B20Temp(int *temp);
  22          extern void InitLcd1602();
  23          extern void LcdShowStr(unsigned char x,unsigned char y,unsigned char *str);
  24          
  25          void main()
  26          {
  27   1          bit res;
  28   1      
  29   1          EA=1;
  30   1          ConfigTimer0(10);//T0定时10ms
  31   1          Start18B20();//启动DS18B20
  32   1          InitLcd1602();//初始化液晶
  33   1      
  34   1          while(1)
  35   1          {       
  36   2              if(flag1s)//每秒更新一次温度
  37   2              {
  38   3                  flag1s=0;
  39   3                  res=Get18B20Temp(&temp);//读取当前温度
  40   3                  if(res)//读取成功时，刷新当前温度显示
  41   3                  {
  42   4                      GetTemp();
  43   4                  
  44   4                      LcdShowStr(0,0,"Welcome to use");//显示字符及温度值
  45   4                      LcdShowStr(0,1,"Current T:");
  46   4                      LcdShowStr(10,1,str);
  47   4                          Compare();
  48   4                  }
  49   3                  else //读取失败时，提示错误信息
  50   3                  {
  51   4                      LcdShowStr(0,0,"error!");
  52   4      
  53   4                  }
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 2   

  54   3                  Start18B20();//重新启动下一次转换                    
  55   3              }
  56   2          }
  57   1      }
  58          /*温度获取函数，获取当前环境温度值并保存在str数组中*/
  59          void GetTemp()
  60          {
  61   1      
  62   1          intT=temp>>4;//分离出温度值整数部分
  63   1          decT=temp &0x0F;//分离出温度值小数部分
  64   1                  
  65   1          len=IntToString(str,intT);//整数部分转换成字符串
  66   1                  
  67   1          str[len++]='.';
  68   1          decT=(decT*10)/16;//二进制的小数部分转换为1位十进制位
  69   1          str[len++]=decT+'0';//十进制小数位再转换为ASCII字符
  70   1          while(len<6)//用空格补齐到6个字符长度
  71   1          {
  72   2              str[len++]=' ';
  73   2          }
  74   1          str[len++]='\0';
  75   1      }
  76          /*延时函数，用于PWM控制*/
  77          void delay(unsigned int z)
  78          {
  79   1          unsigned int x,y;
  80   1          for(x=z;x>0;x--)
  81   1              for(y=110;y>0;y--);
  82   1      } 
  83          /*比较函数，通过温度值的比较设置电机的转速*/
  84          void Compare()
  85          {
  86   1          unsigned int i=0;
  87   1          unsigned char j;
  88   1      
  89   1          if((intT>= 24) && (intT<26))   //以两度为一个温差范围，并设温度范围索引
  90   1          {
  91   2              j=0;    
  92   2          }
  93   1          else if((intT>=26) &&(intT<28))
  94   1          {
  95   2              j=1;
  96   2          }
  97   1          else if((intT>=28) &&(intT<30))
  98   1          {
  99   2              j=2;
 100   2          }
 101   1          else if(intT>=30)
 102   1          {
 103   2              j=3;
 104   2          }
 105   1          switch(j)         //根据温度索引设置电机转速
 106   1          {
 107   2              case 0: IN1=1;
 108   2                      IN2=0;
 109   2                      for(i=0;i<200;i++)
 110   2                      {
 111   3                          ENA=1;
 112   3                          delay(20);
 113   3                          ENA=0;
 114   3                          delay(30);
 115   3                      }
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 3   

 116   2                      break;
 117   2          
 118   2              case 1: IN1=1;
 119   2                      IN2=0;
 120   2                      for(i=0;i<200;i++)
 121   2                      {
 122   3                          ENA=1;
 123   3                          delay(30);
 124   3                          ENA=0;
 125   3                          delay(30);
 126   3                      }
 127   2                      break;   
 128   2          
 129   2              case 2: IN1=1;
 130   2                      IN2=0;
 131   2                      for(i=0;i<200;i++)
 132   2                      {
 133   3                          ENA=1;
 134   3                          delay(55);           
 135   3                          ENA=0;
 136   3                          delay(30);
 137   3                      }
 138   2                      break;   
 139   2                                  
 140   2              case 3: IN1=1;
 141   2                      IN2=0;
 142   2                      ENA=1;
 143   2                      break;
 144   2      
 145   2              default:break;       
 146   2          }
 147   1      }  
 148          
 149          /*整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度*/
 150          unsigned char IntToString(unsigned char *str,int dat)
 151          {
 152   1          signed char i=0;
 153   1          unsigned char len=0;
 154   1          unsigned char buf[6];
 155   1      
 156   1          if(dat<0)//如果为负数，首先取绝对值，并在指针上添加负号
 157   1          {
 158   2              dat=-dat;
 159   2              *str++='-';
 160   2              len++;
 161   2          }
 162   1          do{    //先转换为低位在前的十进制数组
 163   2              buf[i++]=dat%10;
 164   2              dat /=10;
 165   2          }while(dat>0);
 166   1          len += i;//i最后的值就是有效字符的个数
 167   1          while(i-->0)//将数组值转换为ASCII码反向拷贝到接收指针上
 168   1          {
 169   2              *str++=buf[i]+'0';
 170   2          }
 171   1          *str='\0';
 172   1          return len;
 173   1      }
 174          void ConfigTimer0(unsigned int ms)
 175          {
 176   1          unsigned long tmp;
 177   1      
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 4   

 178   1          tmp=11059200/12;
 179   1          tmp=(tmp*ms)/1000;
 180   1          tmp=65536-tmp;
 181   1          tmp=tmp+12;
 182   1          T0RH=(unsigned char)(tmp>>8);
 183   1          T0RL=(unsigned char)tmp;
 184   1          TMOD &= 0xF0;
 185   1          TMOD |= 0x01;
 186   1          TH0=T0RH;
 187   1          TL0=T0RL;
 188   1          ET0=1;
 189   1          TR0=1;
 190   1      }
 191          void InterruptTimer0() interrupt 1
 192          {
 193   1          static unsigned char tmr1s=0;
 194   1      
 195   1          TH0=T0RH;
 196   1          TL0=T0RL;
 197   1          tmr1s++;
 198   1          if(tmr1s>=100)
 199   1          {
 200   2              tmr1s=0;
 201   2              flag1s=1;
 202   2          }        
 203   1      
 204   1      }
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 29
0000 D2AF              SETB    EA
                                           ; SOURCE LINE # 30
0002 7F0A              MOV     R7,#0AH
0004 7E00              MOV     R6,#00H
0006 120000      R     LCALL   _ConfigTimer0
                                           ; SOURCE LINE # 31
0009 120000      E     LCALL   Start18B20
                                           ; SOURCE LINE # 32
000C 120000      E     LCALL   InitLcd1602
000F         ?C0001:
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
000F 3000FD            JNB     flag1s,?C0001
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0012 C200        R     CLR     flag1s
                                           ; SOURCE LINE # 39
0014 7B00              MOV     R3,#00H
0016 7A00        R     MOV     R2,#HIGH temp
0018 7900        R     MOV     R1,#LOW temp
001A 120000      E     LCALL   _Get18B20Temp
001D 9200        R     MOV     res,C
                                           ; SOURCE LINE # 40
001F 30002E            JNB     res,?C0004
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
0022 120000      R     LCALL   GetTemp
                                           ; SOURCE LINE # 44
0025 7BFF              MOV     R3,#0FFH
0027 7A00        R     MOV     R2,#HIGH ?SC_0
0029 7900        R     MOV     R1,#LOW ?SC_0
002B E4                CLR     A
002C FD                MOV     R5,A
002D FF                MOV     R7,A
002E 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 45
0031 7BFF              MOV     R3,#0FFH
0033 7A00        R     MOV     R2,#HIGH ?SC_15
0035 7900        R     MOV     R1,#LOW ?SC_15
0037 7D01              MOV     R5,#01H
0039 E4                CLR     A
003A FF                MOV     R7,A
003B 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 46
003E 7B00              MOV     R3,#00H
0040 7A00        R     MOV     R2,#HIGH str
0042 7900        R     MOV     R1,#LOW str
0044 7D01              MOV     R5,#01H
0046 7F0A              MOV     R7,#0AH
0048 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 47
004B 120000      R     LCALL   Compare
                                           ; SOURCE LINE # 48
004E 800C              SJMP    ?C0005
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 6   

0050         ?C0004:
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0050 7BFF              MOV     R3,#0FFH
0052 7A00        R     MOV     R2,#HIGH ?SC_26
0054 7900        R     MOV     R1,#LOW ?SC_26
0056 E4                CLR     A
0057 FD                MOV     R5,A
0058 FF                MOV     R7,A
0059 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 53
005C         ?C0005:
                                           ; SOURCE LINE # 54
005C 120000      E     LCALL   Start18B20
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
005F 80AE              SJMP    ?C0001
             ; FUNCTION main (END)

             ; FUNCTION GetTemp (BEGIN)
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 62
0000 E500        R     MOV     A,temp+01H
0002 AE00        R     MOV     R6,temp
0004 7804              MOV     R0,#04H
0006         ?C0050:
0006 CE                XCH     A,R6
0007 A2E7              MOV     C,ACC.7
0009 13                RRC     A
000A CE                XCH     A,R6
000B 13                RRC     A
000C D8F8              DJNZ    R0,?C0050
000E F500        R     MOV     intT+01H,A
0010 8E00        R     MOV     intT,R6
                                           ; SOURCE LINE # 63
0012 750000      R     MOV     decT,#00H
0015 E500        R     MOV     A,temp+01H
0017 540F              ANL     A,#0FH
0019 F500        R     MOV     decT+01H,A
                                           ; SOURCE LINE # 65
001B 7B00              MOV     R3,#00H
001D 7A00        R     MOV     R2,#HIGH str
001F 7900        R     MOV     R1,#LOW str
0021 AD00        R     MOV     R5,intT+01H
0023 AC00        R     MOV     R4,intT
0025 120000      R     LCALL   _IntToString
0028 8F00        R     MOV     len,R7
                                           ; SOURCE LINE # 67
002A 0500        R     INC     len
002C 7400        R     MOV     A,#LOW str
002E 2F                ADD     A,R7
002F F8                MOV     R0,A
0030 762E              MOV     @R0,#02EH
                                           ; SOURCE LINE # 68
0032 AE00        R     MOV     R6,decT
0034 AF00        R     MOV     R7,decT+01H
0036 7C00              MOV     R4,#00H
0038 7D0A              MOV     R5,#0AH
003A 120000      E     LCALL   ?C?IMUL
003D 7D10              MOV     R5,#010H
003F 120000      E     LCALL   ?C?SIDIV
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 7   

0042 8E00        R     MOV     decT,R6
0044 8F00        R     MOV     decT+01H,R7
                                           ; SOURCE LINE # 69
0046 EF                MOV     A,R7
0047 2430              ADD     A,#030H
0049 FF                MOV     R7,A
004A AE00        R     MOV     R6,len
004C 0500        R     INC     len
004E 7400        R     MOV     A,#LOW str
0050 2E                ADD     A,R6
0051 F8                MOV     R0,A
0052 A607              MOV     @R0,AR7
0054         ?C0007:
                                           ; SOURCE LINE # 70
0054 E500        R     MOV     A,len
0056 C3                CLR     C
0057 9406              SUBB    A,#06H
0059 500C              JNC     ?C0008
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
005B AF00        R     MOV     R7,len
005D 0500        R     INC     len
005F 7400        R     MOV     A,#LOW str
0061 2F                ADD     A,R7
0062 F8                MOV     R0,A
0063 7620              MOV     @R0,#020H
                                           ; SOURCE LINE # 73
0065 80ED              SJMP    ?C0007
0067         ?C0008:
                                           ; SOURCE LINE # 74
0067 AF00        R     MOV     R7,len
0069 0500        R     INC     len
006B 7400        R     MOV     A,#LOW str
006D 2F                ADD     A,R7
006E F8                MOV     R0,A
006F E4                CLR     A
0070 F6                MOV     @R0,A
                                           ; SOURCE LINE # 75
0071 22                RET     
             ; FUNCTION GetTemp (END)

             ; FUNCTION L?0060 (BEGIN)
0000         L?0061:
0000 7E00              MOV     R6,#00H
0002 120000      R     LCALL   _delay
0005 C2A5              CLR     ENA
0007 7F1E              MOV     R7,#01EH
0009 7E00              MOV     R6,#00H
             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 77
;---- Variable 'z' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 80
;---- Variable 'x' assigned to Register 'R6/R7' ----
000B         ?C0010:
000B D3                SETB    C
000C EF                MOV     A,R7
000D 9400              SUBB    A,#00H
000F EE                MOV     A,R6
0010 9400              SUBB    A,#00H
0012 4014              JC      ?C0016
                                           ; SOURCE LINE # 81
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 8   

;---- Variable 'y' assigned to Register 'R4/R5' ----
0014 7D6E              MOV     R5,#06EH
0016 7C00              MOV     R4,#00H
0018         ?C0013:
0018 ED                MOV     A,R5
0019 1D                DEC     R5
001A 7001              JNZ     ?C0051
001C 1C                DEC     R4
001D         ?C0051:
001D ED                MOV     A,R5
001E 4C                ORL     A,R4
001F 70F7              JNZ     ?C0013
0021         ?C0012:
0021 EF                MOV     A,R7
0022 1F                DEC     R7
0023 70E6              JNZ     ?C0010
0025 1E                DEC     R6
0026         ?C0052:
0026 80E3              SJMP    ?C0010
                                           ; SOURCE LINE # 82
0028         ?C0016:
0028 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION Compare (BEGIN)
                                           ; SOURCE LINE # 84
;---- Variable 'j' assigned to Register 'R1' ----
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
;---- Variable 'i' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 89
0000 C3                CLR     C
0001 E500        R     MOV     A,intT+01H
0003 9418              SUBB    A,#018H
0005 E500        R     MOV     A,intT
0007 6480              XRL     A,#080H
0009 9480              SUBB    A,#080H
000B 4010              JC      ?C0017
000D E500        R     MOV     A,intT+01H
000F 941A              SUBB    A,#01AH
0011 E500        R     MOV     A,intT
0013 6480              XRL     A,#080H
0015 9480              SUBB    A,#080H
0017 5004              JNC     ?C0017
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0019 E4                CLR     A
001A F9                MOV     R1,A
                                           ; SOURCE LINE # 92
001B 8049              SJMP    ?C0018
001D         ?C0017:
                                           ; SOURCE LINE # 93
001D C3                CLR     C
001E E500        R     MOV     A,intT+01H
0020 941A              SUBB    A,#01AH
0022 E500        R     MOV     A,intT
0024 6480              XRL     A,#080H
0026 9480              SUBB    A,#080H
0028 4010              JC      ?C0019
002A E500        R     MOV     A,intT+01H
002C 941C              SUBB    A,#01CH
002E E500        R     MOV     A,intT
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 9   

0030 6480              XRL     A,#080H
0032 9480              SUBB    A,#080H
0034 5004              JNC     ?C0019
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
0036 7901              MOV     R1,#01H
                                           ; SOURCE LINE # 96
0038 802C              SJMP    ?C0018
003A         ?C0019:
                                           ; SOURCE LINE # 97
003A C3                CLR     C
003B E500        R     MOV     A,intT+01H
003D 941C              SUBB    A,#01CH
003F E500        R     MOV     A,intT
0041 6480              XRL     A,#080H
0043 9480              SUBB    A,#080H
0045 4010              JC      ?C0021
0047 E500        R     MOV     A,intT+01H
0049 941E              SUBB    A,#01EH
004B E500        R     MOV     A,intT
004D 6480              XRL     A,#080H
004F 9480              SUBB    A,#080H
0051 5004              JNC     ?C0021
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
0053 7902              MOV     R1,#02H
                                           ; SOURCE LINE # 100
0055 800F              SJMP    ?C0018
0057         ?C0021:
                                           ; SOURCE LINE # 101
0057 C3                CLR     C
0058 E500        R     MOV     A,intT+01H
005A 941E              SUBB    A,#01EH
005C E500        R     MOV     A,intT
005E 6480              XRL     A,#080H
0060 9480              SUBB    A,#080H
0062 4002              JC      ?C0018
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0064 7903              MOV     R1,#03H
                                           ; SOURCE LINE # 104
0066         ?C0018:
                                           ; SOURCE LINE # 105
0066 E9                MOV     A,R1
0067 14                DEC     A
0068 6024              JZ      ?C0029
006A 14                DEC     A
006B 603B              JZ      ?C0033
006D 14                DEC     A
006E 6052              JZ      ?C0037
0070 2403              ADD     A,#03H
0072 7054              JNZ     ?C0039
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
0074         ?C0025:
0074 D2A7              SETB    IN1
                                           ; SOURCE LINE # 108
0076 C2A6              CLR     IN2
                                           ; SOURCE LINE # 109
0078 E4                CLR     A
0079 FA                MOV     R2,A
007A FB                MOV     R3,A
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 10  

007B         ?C0026:
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
007B D2A5              SETB    ENA
                                           ; SOURCE LINE # 112
007D 7F14              MOV     R7,#014H
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
007F 120000      R     LCALL   L?0060
                                           ; SOURCE LINE # 115
0082 0B                INC     R3
0083 BB0001            CJNE    R3,#00H,?C0053
0086 0A                INC     R2
0087         ?C0053:
0087 EB                MOV     A,R3
0088 64C8              XRL     A,#0C8H
008A 4A                ORL     A,R2
008B 70EE              JNZ     ?C0026
008D 22                RET     
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 118
008E         ?C0029:
008E D2A7              SETB    IN1
                                           ; SOURCE LINE # 119
0090 C2A6              CLR     IN2
                                           ; SOURCE LINE # 120
0092 E4                CLR     A
0093 FA                MOV     R2,A
0094 FB                MOV     R3,A
0095         ?C0030:
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
0095 D2A5              SETB    ENA
                                           ; SOURCE LINE # 123
0097 7F1E              MOV     R7,#01EH
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0099 120000      R     LCALL   L?0060
                                           ; SOURCE LINE # 126
009C 0B                INC     R3
009D BB0001            CJNE    R3,#00H,?C0054
00A0 0A                INC     R2
00A1         ?C0054:
00A1 EB                MOV     A,R3
00A2 64C8              XRL     A,#0C8H
00A4 4A                ORL     A,R2
00A5 70EE              JNZ     ?C0030
00A7         ?C0058:
00A7 22                RET     
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 129
00A8         ?C0033:
00A8 D2A7              SETB    IN1
                                           ; SOURCE LINE # 130
00AA C2A6              CLR     IN2
                                           ; SOURCE LINE # 131
00AC E4                CLR     A
00AD FA                MOV     R2,A
00AE FB                MOV     R3,A
00AF         ?C0034:
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 11  

00AF D2A5              SETB    ENA
                                           ; SOURCE LINE # 134
00B1 7F37              MOV     R7,#037H
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
00B3 120000      R     LCALL   L?0061
                                           ; SOURCE LINE # 137
00B6 0B                INC     R3
00B7 BB0001            CJNE    R3,#00H,?C0055
00BA 0A                INC     R2
00BB         ?C0055:
00BB EB                MOV     A,R3
00BC 64C8              XRL     A,#0C8H
00BE 4A                ORL     A,R2
00BF 70EE              JNZ     ?C0034
00C1         ?C0059:
00C1 22                RET     
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 140
00C2         ?C0037:
00C2 D2A7              SETB    IN1
                                           ; SOURCE LINE # 141
00C4 C2A6              CLR     IN2
                                           ; SOURCE LINE # 142
00C6 D2A5              SETB    ENA
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
00C8         ?C0039:
00C8 22                RET     
             ; FUNCTION Compare (END)

             ; FUNCTION _IntToString (BEGIN)
                                           ; SOURCE LINE # 150
0000 8B00        R     MOV     str,R3
0002 8A00        R     MOV     str+01H,R2
0004 8900        R     MOV     str+02H,R1
0006 8C00        R     MOV     dat,R4
0008 8D00        R     MOV     dat+01H,R5
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
000A E4                CLR     A
000B F500        R     MOV     i,A
                                           ; SOURCE LINE # 153
000D F500        R     MOV     len,A
                                           ; SOURCE LINE # 156
000F C3                CLR     C
0010 E500        R     MOV     A,dat
0012 6480              XRL     A,#080H
0014 9480              SUBB    A,#080H
0016 501C              JNC     ?C0043
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0018 C3                CLR     C
0019 E4                CLR     A
001A 9500        R     SUBB    A,dat+01H
001C F500        R     MOV     dat+01H,A
001E E4                CLR     A
001F 9500        R     SUBB    A,dat
0021 F500        R     MOV     dat,A
                                           ; SOURCE LINE # 159
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 12  

0023 0500        R     INC     str+02H
0025 E500        R     MOV     A,str+02H
0027 7002              JNZ     ?C0056
0029 0500        R     INC     str+01H
002B         ?C0056:
002B 14                DEC     A
002C F9                MOV     R1,A
002D 742D              MOV     A,#02DH
002F 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 160
0032 0500        R     INC     len
                                           ; SOURCE LINE # 161
0034         ?C0043:
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
0034 AE00        R     MOV     R6,dat
0036 AF00        R     MOV     R7,dat+01H
0038 7C00              MOV     R4,#00H
003A 7D0A              MOV     R5,#0AH
003C 120000      E     LCALL   ?C?SIDIV
003F AF05              MOV     R7,AR5
0041 AE00        R     MOV     R6,i
0043 0500        R     INC     i
0045 7400        R     MOV     A,#LOW buf
0047 2E                ADD     A,R6
0048 F8                MOV     R0,A
0049 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 164
004B AE00        R     MOV     R6,dat
004D AF00        R     MOV     R7,dat+01H
004F 7C00              MOV     R4,#00H
0051 7D0A              MOV     R5,#0AH
0053 120000      E     LCALL   ?C?SIDIV
0056 8E00        R     MOV     dat,R6
0058 8F00        R     MOV     dat+01H,R7
                                           ; SOURCE LINE # 165
005A D3                SETB    C
005B E500        R     MOV     A,dat+01H
005D 9400              SUBB    A,#00H
005F E500        R     MOV     A,dat
0061 6480              XRL     A,#080H
0063 9480              SUBB    A,#080H
0065 50CD              JNC     ?C0043
                                           ; SOURCE LINE # 166
0067 E500        R     MOV     A,i
0069 2500        R     ADD     A,len
006B F500        R     MOV     len,A
006D         ?C0044:
                                           ; SOURCE LINE # 167
006D AF00        R     MOV     R7,i
006F 1500        R     DEC     i
0071 D3                SETB    C
0072 EF                MOV     A,R7
0073 6480              XRL     A,#080H
0075 9480              SUBB    A,#080H
0077 401D              JC      ?C0045
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
0079 7400        R     MOV     A,#LOW buf
007B 2500        R     ADD     A,i
007D F8                MOV     R0,A
007E E6                MOV     A,@R0
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 13  

007F 2430              ADD     A,#030H
0081 FF                MOV     R7,A
0082 AB00        R     MOV     R3,str
0084 0500        R     INC     str+02H
0086 E500        R     MOV     A,str+02H
0088 AA00        R     MOV     R2,str+01H
008A 7002              JNZ     ?C0057
008C 0500        R     INC     str+01H
008E         ?C0057:
008E 14                DEC     A
008F F9                MOV     R1,A
0090 EF                MOV     A,R7
0091 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 170
0094 80D7              SJMP    ?C0044
0096         ?C0045:
                                           ; SOURCE LINE # 171
0096 AB00        R     MOV     R3,str
0098 AA00        R     MOV     R2,str+01H
009A A900        R     MOV     R1,str+02H
009C E4                CLR     A
009D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 172
00A0 AF00        R     MOV     R7,len
                                           ; SOURCE LINE # 173
00A2 22                RET     
             ; FUNCTION _IntToString (END)

             ; FUNCTION _ConfigTimer0 (BEGIN)
                                           ; SOURCE LINE # 174
;---- Variable 'ms' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 178
0000 750000      R     MOV     tmp+03H,#00H
0003 750010      R     MOV     tmp+02H,#010H
0006 75000E      R     MOV     tmp+01H,#0EH
0009 750000      R     MOV     tmp,#00H
                                           ; SOURCE LINE # 179
000C E4                CLR     A
000D FC                MOV     R4,A
000E FD                MOV     R5,A
000F AB00        R     MOV     R3,tmp+03H
0011 AA00        R     MOV     R2,tmp+02H
0013 A900        R     MOV     R1,tmp+01H
0015 A800        R     MOV     R0,tmp
0017 120000      E     LCALL   ?C?LMUL
001A E4                CLR     A
001B 7BE8              MOV     R3,#0E8H
001D 7A03              MOV     R2,#03H
001F F9                MOV     R1,A
0020 F8                MOV     R0,A
0021 120000      E     LCALL   ?C?ULDIV
0024 8F00        R     MOV     tmp+03H,R7
0026 8E00        R     MOV     tmp+02H,R6
0028 8D00        R     MOV     tmp+01H,R5
002A 8C00        R     MOV     tmp,R4
                                           ; SOURCE LINE # 180
002C C3                CLR     C
002D E4                CLR     A
002E 9500        R     SUBB    A,tmp+03H
0030 F500        R     MOV     tmp+03H,A
0032 E4                CLR     A
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 14  

0033 9500        R     SUBB    A,tmp+02H
0035 F500        R     MOV     tmp+02H,A
0037 7401              MOV     A,#01H
0039 9500        R     SUBB    A,tmp+01H
003B F500        R     MOV     tmp+01H,A
003D E4                CLR     A
003E 9500        R     SUBB    A,tmp
0040 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 181
0042 E500        R     MOV     A,tmp+03H
0044 240C              ADD     A,#0CH
0046 F500        R     MOV     tmp+03H,A
0048 E4                CLR     A
0049 3500        R     ADDC    A,tmp+02H
004B F500        R     MOV     tmp+02H,A
004D E4                CLR     A
004E 3500        R     ADDC    A,tmp+01H
0050 F500        R     MOV     tmp+01H,A
0052 E4                CLR     A
0053 3500        R     ADDC    A,tmp
0055 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 182
0057 AF00        R     MOV     R7,tmp+03H
0059 AE00        R     MOV     R6,tmp+02H
005B AD00        R     MOV     R5,tmp+01H
005D FC                MOV     R4,A
005E 7808              MOV     R0,#08H
0060 120000      E     LCALL   ?C?ULSHR
0063 8F00        R     MOV     T0RH,R7
                                           ; SOURCE LINE # 183
0065 850000      R     MOV     T0RL,tmp+03H
                                           ; SOURCE LINE # 184
0068 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 185
006B 438901            ORL     TMOD,#01H
                                           ; SOURCE LINE # 186
006E 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 187
0071 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 188
0074 D2A9              SETB    ET0
                                           ; SOURCE LINE # 189
0076 D28C              SETB    TR0
                                           ; SOURCE LINE # 190
0078 22                RET     
             ; FUNCTION _ConfigTimer0 (END)

             ; FUNCTION InterruptTimer0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 195
0004 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 196
0007 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 197
000A 0500        R     INC     tmr1s
                                           ; SOURCE LINE # 198
000C E500        R     MOV     A,tmr1s
000E C3                CLR     C
000F 9464              SUBB    A,#064H
0011 4005              JC      ?C0049
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 15  

                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0013 750000      R     MOV     tmr1s,#00H
                                           ; SOURCE LINE # 201
0016 D200        R     SETB    flag1s
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 204
0018         ?C0049:
0018 D0D0              POP     PSW
001A D0E0              POP     ACC
001C 32                RETI    
             ; FUNCTION InterruptTimer0 (END)

C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
decT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0001H  2
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
InterruptTimer0. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmr1s. . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_ConfigTimer0. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000BH  -----
  z. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
T0RH . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0003H  1
Start18B20 . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
intT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0004H  2
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
T0RL . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  res. . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
temp . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0007H  2
GetTemp. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
len. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0009H  1
flag1s . . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
IN1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
_Get18B20Temp. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IN2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
Compare. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0001H  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
ENA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
str. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000AH  12
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
_IntToString . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  dat. . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0003H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   CHAR     0005H  1
  len. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   ARRAY    0007H  6
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_LcdShowStr. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
InitLcd1602. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
C51 COMPILER V9.57.0.0   MAIN                                                              05/25/2021 16:44:09 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    769    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
