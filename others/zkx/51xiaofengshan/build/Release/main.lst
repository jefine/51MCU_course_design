C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\main.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Release\main.lst) OMF2 TABS(4) CODE NOCON
                    -D SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.
                    -\build\Release\main.o)

line level    source

   1          #include<reg52.h>
   2          
   3          // sbit IN1=P0^0;
   4          // sbit IN2=P0^0;
   5          sbit ENA=P1^0;
   6          sbit key = P3^2;
   7          sbit keyadd = P3^1;
   8          sbit keysub = P3^0;
   9          sbit keyauto = P3^3;
  10          sbit led0 = P2^0;
  11          sbit led1 = P2^1;
  12          sbit led2 = P2^2;
  13          sbit led3 = P2^3;
  14          
  15          bit flag1s=0;//1s定时标志
  16          unsigned char T0RH=0;
  17          unsigned char T0RL=0;
  18          int unset = 1;
  19          int temp;//读取到的当前温度值
  20          unsigned char len;
  21          int intT,decT;//温度值的整数和小数部分
  22          unsigned char str[12];
  23          unsigned char j;
  24          void Int0();
  25          void Int0Init();
  26          void Compare();
  27          void GetTemp();
  28          void ConfigTimer0(unsigned int ms);
  29          unsigned char IntToString(unsigned char *str,int dat);
  30          extern bit Start18B20();
  31          extern bit Get18B20Temp(int *temp);
  32          extern void InitLcd1602();
  33          extern void LcdShowStr(unsigned char x,unsigned char y,unsigned char *str);
  34          void delay(unsigned int z);
  35          void main()
  36          {
  37   1          bit res;
  38   1          
  39   1          Start18B20();//启动DS18B20
  40   1          
  41   1          InitLcd1602();//初始化液晶
  42   1          EA=1;
  43   1          Int0Init();
  44   1          ConfigTimer0(10);//T0定时10ms
  45   1          
  46   1      
  47   1          while(1)
  48   1          {       
  49   2              Compare();
  50   2              if(flag1s)//每秒更新一次温度
  51   2              {
  52   3                  flag1s=0;
  53   3                  res=Get18B20Temp(&temp);//读取当前温度
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 2   

  54   3                  if(1)//读取成功时，刷新当前温度显示
  55   3                  {
  56   4                      GetTemp();
  57   4                      LcdShowStr(0,0,"Welcome to use");//显示字符及温度值
  58   4                      LcdShowStr(0,1,"Current T:");
  59   4                      LcdShowStr(10,1,str);
  60   4                      delay(20);
  61   4                          
  62   4                  }
  63   3                  else //读取失败时，提示错误信息
  64   3                  {
  65   4                      LcdShowStr(0,0,"error!");
  66   4                  }
  67   3                  Start18B20();//重新启动下一次转换                    
  68   3              }
  69   2          }
  70   1      }
  71          /*温度获取函数，获取当前环境温度值并保存在str数组中*/
  72          void GetTemp()
  73          {
  74   1      
  75   1          intT=temp>>4;//分离出温度值整数部分
  76   1          decT=temp &0x0F;//分离出温度值小数部分
  77   1                  
  78   1          len=IntToString(str,intT);//整数部分转换成字符串
  79   1                  
  80   1          str[len++]='.';
  81   1          decT=(decT*10)/16;//二进制的小数部分转换为1位十进制位
  82   1          str[len++]=decT+'0';//十进制小数位再转换为ASCII字符
  83   1          while(len<6)//用空格补齐到6个字符长度
  84   1          {
  85   2              str[len++]=' ';
  86   2          }
  87   1          str[len++]='\0';
  88   1      }
  89          /*延时函数，用于PWM控制*/
  90          void delay(unsigned int z)
  91          {
  92   1          unsigned int x,y;
  93   1          for(x=z;x>0;x--)
  94   1              for(y=110;y>0;y--);
  95   1      } 
  96          /*比较函数，通过温度值的比较设置电机的转速*/
  97          void Compare()
  98          {
  99   1          unsigned int i=0;
 100   1          
 101   1          if(unset)
 102   1          {
 103   2              if(intT<24){
 104   3                  j=0;
 105   3              }
 106   2              else if((intT>= 24) && (intT<26))   //以两度为一个温差范围，并设温度范围索引
 107   2              {
 108   3                  j=1;    
 109   3              }
 110   2              else if((intT>=26) &&(intT<28))
 111   2              {
 112   3                  j=2;
 113   3              }
 114   2              else if((intT>=28) &&(intT<30))
 115   2              {
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 3   

 116   3                  j=3;
 117   3              }
 118   2              else if(intT>=30)
 119   2              {
 120   3                  j=4;
 121   3              }
 122   2          }
 123   1      
 124   1          
 125   1      
 126   1          switch(j)         //根据索引设置电机转速
 127   1          {
 128   2              case 0:{//stop
 129   3                  ENA = 0;
 130   3                  break;
 131   3              }
 132   2              case 1: {//25%
 133   3                      // IN1=1;
 134   3                      // IN2=0;
 135   3                      for(i=0;i<200;i++)
 136   3                      {
 137   4                          ENA=1;
 138   4                          delay(10);
 139   4                          ENA=0;
 140   4                          delay(30);
 141   4                      }
 142   3                      break;
 143   3                      }   
 144   2          
 145   2              case 2: //50%
 146   2                      // IN1=1;
 147   2                      // IN2=0;
 148   2                      for(i=0;i<200;i++)
 149   2                      {
 150   3                          ENA=1;
 151   3                          delay(30);
 152   3                          ENA=0;
 153   3                          delay(30);
 154   3                      }
 155   2                      break;   
 156   2          
 157   2              case 3: //75%
 158   2                      // IN1=1;
 159   2                      // IN2=0;
 160   2                      for(i=0;i<200;i++)
 161   2                      {
 162   3                          ENA=1;
 163   3                          delay(75);           
 164   3                          ENA=0;
 165   3                          delay(25);
 166   3                      }
 167   2                      break;   
 168   2                                  
 169   2              case 4: 
 170   2                      // IN1=1;
 171   2                      // IN2=0;
 172   2                      ENA=1;
 173   2                      break;
 174   2      
 175   2              default:break;       
 176   2          }
 177   1      }  
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 4   

 178          
 179          /*整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度*/
 180          unsigned char IntToString(unsigned char *str,int dat)
 181          {
 182   1          signed char i=0;
 183   1          unsigned char len=0;
 184   1          unsigned char buf[6];
 185   1      
 186   1          if(dat<0)//如果为负数，首先取绝对值，并在指针上添加负号
 187   1          {
 188   2              dat=-dat;
 189   2              *str++='-';
 190   2              len++;
 191   2          }
 192   1          do{    //先转换为低位在前的十进制数组
 193   2              buf[i++]=dat%10;
 194   2              dat /=10;
 195   2          }while(dat>0);
 196   1          len += i;//i最后的值就是有效字符的个数
 197   1          while(i-->0)//将数组值转换为ASCII码反向拷贝到接收指针上
 198   1          {
 199   2              *str++=buf[i]+'0';
 200   2          }
 201   1          *str='\0';
 202   1          return len;
 203   1      }
 204          void ConfigTimer0(unsigned int ms)
 205          {
 206   1          unsigned long tmp;
 207   1      
 208   1          tmp=11059200/12;
 209   1          tmp=(tmp*ms)/1000;
 210   1          tmp=65536-tmp;
 211   1          tmp=tmp+12;
 212   1          T0RH=(unsigned char)(tmp>>8);
 213   1          T0RL=(unsigned char)tmp;
 214   1          TMOD &= 0xF0;
 215   1          TMOD |= 0x01;
 216   1          TH0=T0RH;
 217   1          TL0=T0RL;
 218   1          ET0=1;
 219   1          TR0=1;
 220   1      }
 221          void InterruptTimer0() interrupt 1
 222          {
 223   1          static unsigned char tmr1s=0;
 224   1          led0 = 1;
 225   1          led1 = 1;
 226   1          led2 = 1;
 227   1          
 228   1          if(j==1)led0 = 0;
 229   1          if(j==2)led1 = 0;
 230   1          if(j==3)led2 = 0;
 231   1          TH0=T0RH;
 232   1          TL0=T0RL;
 233   1          tmr1s++;
 234   1          if(tmr1s>=100)
 235   1          {
 236   2              tmr1s=0;
 237   2              flag1s=1;
 238   2          }        
 239   1      
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 5   

 240   1      }
 241          
 242          void Int0Init()
 243          {
 244   1          //设置INT0
 245   1          IT0 = 0; //跳变沿出发方式（下降沿）
 246   1          EX0 = 1; //打开INT0的中断允许。
 247   1      }
 248          
 249          void Int0() interrupt 0 //外部中断0的中断函数
 250          {
 251   1          unset = 0;
 252   1      
 253   1          if(keysub==0){
 254   2              
 255   2              delay(100);
 256   2              j=1;
 257   2              while(keysub==0);
 258   2          }
 259   1          if(keyadd==0){
 260   2              
 261   2              delay(100);
 262   2              j=3;
 263   2              while(keyadd==0);
 264   2          }
 265   1          if (keyauto == 0)
 266   1          {
 267   2              delay(100);
 268   2              
 269   2              if(j!=0){
 270   3                  j=0;
 271   3                  ENA = 0;
 272   3                  led1 = 0;
 273   3              }
 274   2              else {
 275   3                  j=4;
 276   3                  ENA = 1;
 277   3                  led1 = 1;
 278   3              }
 279   2              while(keyauto==0);
 280   2          }
 281   1      }
*** WARNING C294 IN LINE 65 OF .\SRC\MAIN.C: unreachable code
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 39
0000 120000      E     LCALL   Start18B20
                                           ; SOURCE LINE # 41
0003 120000      E     LCALL   InitLcd1602
                                           ; SOURCE LINE # 42
0006 D2AF              SETB    EA
                                           ; SOURCE LINE # 43
0008 120000      R     LCALL   Int0Init
                                           ; SOURCE LINE # 44
000B 7F0A              MOV     R7,#0AH
000D 7E00              MOV     R6,#00H
000F 120000      R     LCALL   _ConfigTimer0
0012         ?C0001:
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
0012 120000      R     LCALL   Compare
                                           ; SOURCE LINE # 50
0015 3000FA            JNB     flag1s,?C0001
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0018 C200        R     CLR     flag1s
                                           ; SOURCE LINE # 53
001A 7B00              MOV     R3,#00H
001C 7A00        R     MOV     R2,#HIGH temp
001E 7900        R     MOV     R1,#LOW temp
0020 120000      E     LCALL   _Get18B20Temp
0023 9200        R     MOV     res,C
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0025 120000      R     LCALL   GetTemp
                                           ; SOURCE LINE # 57
0028 7BFF              MOV     R3,#0FFH
002A 7A00        R     MOV     R2,#HIGH ?SC_0
002C 7900        R     MOV     R1,#LOW ?SC_0
002E E4                CLR     A
002F FD                MOV     R5,A
0030 FF                MOV     R7,A
0031 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 58
0034 7BFF              MOV     R3,#0FFH
0036 7A00        R     MOV     R2,#HIGH ?SC_15
0038 7900        R     MOV     R1,#LOW ?SC_15
003A 7D01              MOV     R5,#01H
003C E4                CLR     A
003D FF                MOV     R7,A
003E 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 59
0041 7B00              MOV     R3,#00H
0043 7A00        R     MOV     R2,#HIGH str
0045 7900        R     MOV     R1,#LOW str
0047 7D01              MOV     R5,#01H
0049 7F0A              MOV     R7,#0AH
004B 120000      E     LCALL   _LcdShowStr
                                           ; SOURCE LINE # 60
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 7   

004E 7F14              MOV     R7,#014H
0050 7E00              MOV     R6,#00H
0052 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0055 120000      E     LCALL   Start18B20
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0058 80B8              SJMP    ?C0001
             ; FUNCTION main (END)

             ; FUNCTION GetTemp (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
0000 E500        R     MOV     A,temp+01H
0002 AE00        R     MOV     R6,temp
0004 7804              MOV     R0,#04H
0006         ?C0070:
0006 CE                XCH     A,R6
0007 A2E7              MOV     C,ACC.7
0009 13                RRC     A
000A CE                XCH     A,R6
000B 13                RRC     A
000C D8F8              DJNZ    R0,?C0070
000E F500        R     MOV     intT+01H,A
0010 8E00        R     MOV     intT,R6
                                           ; SOURCE LINE # 76
0012 750000      R     MOV     decT,#00H
0015 E500        R     MOV     A,temp+01H
0017 540F              ANL     A,#0FH
0019 F500        R     MOV     decT+01H,A
                                           ; SOURCE LINE # 78
001B 7B00              MOV     R3,#00H
001D 7A00        R     MOV     R2,#HIGH str
001F 7900        R     MOV     R1,#LOW str
0021 AD00        R     MOV     R5,intT+01H
0023 AC00        R     MOV     R4,intT
0025 120000      R     LCALL   _IntToString
0028 8F00        R     MOV     len,R7
                                           ; SOURCE LINE # 80
002A 0500        R     INC     len
002C 7400        R     MOV     A,#LOW str
002E 2F                ADD     A,R7
002F F8                MOV     R0,A
0030 762E              MOV     @R0,#02EH
                                           ; SOURCE LINE # 81
0032 AE00        R     MOV     R6,decT
0034 AF00        R     MOV     R7,decT+01H
0036 7C00              MOV     R4,#00H
0038 7D0A              MOV     R5,#0AH
003A 120000      E     LCALL   ?C?IMUL
003D 7D10              MOV     R5,#010H
003F 120000      E     LCALL   ?C?SIDIV
0042 8E00        R     MOV     decT,R6
0044 8F00        R     MOV     decT+01H,R7
                                           ; SOURCE LINE # 82
0046 EF                MOV     A,R7
0047 2430              ADD     A,#030H
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 8   

0049 FF                MOV     R7,A
004A AE00        R     MOV     R6,len
004C 0500        R     INC     len
004E 7400        R     MOV     A,#LOW str
0050 2E                ADD     A,R6
0051 F8                MOV     R0,A
0052 A607              MOV     @R0,AR7
0054         ?C0007:
                                           ; SOURCE LINE # 83
0054 E500        R     MOV     A,len
0056 C3                CLR     C
0057 9406              SUBB    A,#06H
0059 500C              JNC     ?C0008
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
005B AF00        R     MOV     R7,len
005D 0500        R     INC     len
005F 7400        R     MOV     A,#LOW str
0061 2F                ADD     A,R7
0062 F8                MOV     R0,A
0063 7620              MOV     @R0,#020H
                                           ; SOURCE LINE # 86
0065 80ED              SJMP    ?C0007
0067         ?C0008:
                                           ; SOURCE LINE # 87
0067 AF00        R     MOV     R7,len
0069 0500        R     INC     len
006B 7400        R     MOV     A,#LOW str
006D 2F                ADD     A,R7
006E F8                MOV     R0,A
006F E4                CLR     A
0070 F6                MOV     @R0,A
                                           ; SOURCE LINE # 88
0071 22                RET     
             ; FUNCTION GetTemp (END)

             ; FUNCTION L?0080 (BEGIN)
0000 7E00              MOV     R6,#00H
0002 120000      R     LCALL   _delay
0005 C290              CLR     ENA
0007 7F1E              MOV     R7,#01EH
0009 7E00              MOV     R6,#00H
             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 90
;---- Variable 'z' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 93
;---- Variable 'x' assigned to Register 'R6/R7' ----
000B         ?C0010:
000B D3                SETB    C
000C EF                MOV     A,R7
000D 9400              SUBB    A,#00H
000F EE                MOV     A,R6
0010 9400              SUBB    A,#00H
0012 4014              JC      ?C0016
                                           ; SOURCE LINE # 94
;---- Variable 'y' assigned to Register 'R4/R5' ----
0014 7D6E              MOV     R5,#06EH
0016 7C00              MOV     R4,#00H
0018         ?C0013:
0018 ED                MOV     A,R5
0019 1D                DEC     R5
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 9   

001A 7001              JNZ     ?C0071
001C 1C                DEC     R4
001D         ?C0071:
001D ED                MOV     A,R5
001E 4C                ORL     A,R4
001F 70F7              JNZ     ?C0013
0021         ?C0012:
0021 EF                MOV     A,R7
0022 1F                DEC     R7
0023 70E6              JNZ     ?C0010
0025 1E                DEC     R6
0026         ?C0072:
0026 80E3              SJMP    ?C0010
                                           ; SOURCE LINE # 95
0028         ?C0016:
0028 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION Compare (BEGIN)
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
;---- Variable 'i' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 101
0000 E500        R     MOV     A,unset+01H
0002 4500        R     ORL     A,unset
0004 607C              JZ      ?C0017
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0006 C3                CLR     C
0007 E500        R     MOV     A,intT+01H
0009 9418              SUBB    A,#018H
000B E500        R     MOV     A,intT
000D 6480              XRL     A,#080H
000F 9480              SUBB    A,#080H
0011 5005              JNC     ?C0018
                                           ; SOURCE LINE # 104
0013 E4                CLR     A
0014 F500        R     MOV     j,A
                                           ; SOURCE LINE # 105
0016 806A              SJMP    ?C0017
0018         ?C0018:
                                           ; SOURCE LINE # 106
0018 C3                CLR     C
0019 E500        R     MOV     A,intT+01H
001B 9418              SUBB    A,#018H
001D E500        R     MOV     A,intT
001F 6480              XRL     A,#080H
0021 9480              SUBB    A,#080H
0023 4011              JC      ?C0020
0025 E500        R     MOV     A,intT+01H
0027 941A              SUBB    A,#01AH
0029 E500        R     MOV     A,intT
002B 6480              XRL     A,#080H
002D 9480              SUBB    A,#080H
002F 5005              JNC     ?C0020
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
0031 750001      R     MOV     j,#01H
                                           ; SOURCE LINE # 109
0034 804C              SJMP    ?C0017
0036         ?C0020:
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 10  

                                           ; SOURCE LINE # 110
0036 C3                CLR     C
0037 E500        R     MOV     A,intT+01H
0039 941A              SUBB    A,#01AH
003B E500        R     MOV     A,intT
003D 6480              XRL     A,#080H
003F 9480              SUBB    A,#080H
0041 4011              JC      ?C0022
0043 E500        R     MOV     A,intT+01H
0045 941C              SUBB    A,#01CH
0047 E500        R     MOV     A,intT
0049 6480              XRL     A,#080H
004B 9480              SUBB    A,#080H
004D 5005              JNC     ?C0022
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
004F 750002      R     MOV     j,#02H
                                           ; SOURCE LINE # 113
0052 802E              SJMP    ?C0017
0054         ?C0022:
                                           ; SOURCE LINE # 114
0054 C3                CLR     C
0055 E500        R     MOV     A,intT+01H
0057 941C              SUBB    A,#01CH
0059 E500        R     MOV     A,intT
005B 6480              XRL     A,#080H
005D 9480              SUBB    A,#080H
005F 4011              JC      ?C0024
0061 E500        R     MOV     A,intT+01H
0063 941E              SUBB    A,#01EH
0065 E500        R     MOV     A,intT
0067 6480              XRL     A,#080H
0069 9480              SUBB    A,#080H
006B 5005              JNC     ?C0024
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
006D 750003      R     MOV     j,#03H
                                           ; SOURCE LINE # 117
0070 8010              SJMP    ?C0017
0072         ?C0024:
                                           ; SOURCE LINE # 118
0072 C3                CLR     C
0073 E500        R     MOV     A,intT+01H
0075 941E              SUBB    A,#01EH
0077 E500        R     MOV     A,intT
0079 6480              XRL     A,#080H
007B 9480              SUBB    A,#080H
007D 4003              JC      ?C0017
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
007F 750004      R     MOV     j,#04H
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
0082         ?C0017:
                                           ; SOURCE LINE # 126
0082 E500        R     MOV     A,j
0084 14                DEC     A
0085 6010              JZ      ?C0029
0087 14                DEC     A
0088 6023              JZ      ?C0033
008A 14                DEC     A
008B 6036              JZ      ?C0037
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 11  

008D 14                DEC     A
008E 6054              JZ      ?C0041
0090 2404              ADD     A,#04H
0092 7052              JNZ     ?C0043
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0094         ?C0028:
                                           ; SOURCE LINE # 129
0094 C290              CLR     ENA
                                           ; SOURCE LINE # 130
0096 22                RET     
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
0097         ?C0029:
                                           ; SOURCE LINE # 135
0097 E4                CLR     A
0098 FA                MOV     R2,A
0099 FB                MOV     R3,A
009A         ?C0030:
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
009A D290              SETB    ENA
                                           ; SOURCE LINE # 138
009C 7F0A              MOV     R7,#0AH
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
009E 120000      R     LCALL   L?0080
                                           ; SOURCE LINE # 141
00A1 0B                INC     R3
00A2 BB0001            CJNE    R3,#00H,?C0073
00A5 0A                INC     R2
00A6         ?C0073:
00A6 EB                MOV     A,R3
00A7 64C8              XRL     A,#0C8H
00A9 4A                ORL     A,R2
00AA 70EE              JNZ     ?C0030
00AC 22                RET     
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 145
00AD         ?C0033:
                                           ; SOURCE LINE # 148
00AD E4                CLR     A
00AE FA                MOV     R2,A
00AF FB                MOV     R3,A
00B0         ?C0034:
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
00B0 D290              SETB    ENA
                                           ; SOURCE LINE # 151
00B2 7F1E              MOV     R7,#01EH
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
00B4 120000      R     LCALL   L?0080
                                           ; SOURCE LINE # 154
00B7 0B                INC     R3
00B8 BB0001            CJNE    R3,#00H,?C0074
00BB 0A                INC     R2
00BC         ?C0074:
00BC EB                MOV     A,R3
00BD 64C8              XRL     A,#0C8H
00BF 4A                ORL     A,R2
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 12  

00C0 70EE              JNZ     ?C0034
00C2         ?C0078:
00C2 22                RET     
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 157
00C3         ?C0037:
                                           ; SOURCE LINE # 160
00C3 E4                CLR     A
00C4 FA                MOV     R2,A
00C5 FB                MOV     R3,A
00C6         ?C0038:
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
00C6 D290              SETB    ENA
                                           ; SOURCE LINE # 163
00C8 7F4B              MOV     R7,#04BH
00CA 7E00              MOV     R6,#00H
00CC 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 164
00CF C290              CLR     ENA
                                           ; SOURCE LINE # 165
00D1 7F19              MOV     R7,#019H
00D3 7E00              MOV     R6,#00H
00D5 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 166
00D8 0B                INC     R3
00D9 BB0001            CJNE    R3,#00H,?C0075
00DC 0A                INC     R2
00DD         ?C0075:
00DD EB                MOV     A,R3
00DE 64C8              XRL     A,#0C8H
00E0 4A                ORL     A,R2
00E1 70E3              JNZ     ?C0038
00E3         ?C0079:
00E3 22                RET     
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 169
00E4         ?C0041:
                                           ; SOURCE LINE # 172
00E4 D290              SETB    ENA
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
00E6         ?C0043:
00E6 22                RET     
             ; FUNCTION Compare (END)

             ; FUNCTION _IntToString (BEGIN)
                                           ; SOURCE LINE # 180
0000 8B00        R     MOV     str,R3
0002 8A00        R     MOV     str+01H,R2
0004 8900        R     MOV     str+02H,R1
0006 8C00        R     MOV     dat,R4
0008 8D00        R     MOV     dat+01H,R5
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
000A E4                CLR     A
000B F500        R     MOV     i,A
                                           ; SOURCE LINE # 183
000D F500        R     MOV     len,A
                                           ; SOURCE LINE # 186
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 13  

000F C3                CLR     C
0010 E500        R     MOV     A,dat
0012 6480              XRL     A,#080H
0014 9480              SUBB    A,#080H
0016 501C              JNC     ?C0047
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
0018 C3                CLR     C
0019 E4                CLR     A
001A 9500        R     SUBB    A,dat+01H
001C F500        R     MOV     dat+01H,A
001E E4                CLR     A
001F 9500        R     SUBB    A,dat
0021 F500        R     MOV     dat,A
                                           ; SOURCE LINE # 189
0023 0500        R     INC     str+02H
0025 E500        R     MOV     A,str+02H
0027 7002              JNZ     ?C0076
0029 0500        R     INC     str+01H
002B         ?C0076:
002B 14                DEC     A
002C F9                MOV     R1,A
002D 742D              MOV     A,#02DH
002F 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 190
0032 0500        R     INC     len
                                           ; SOURCE LINE # 191
0034         ?C0047:
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
0034 AE00        R     MOV     R6,dat
0036 AF00        R     MOV     R7,dat+01H
0038 7C00              MOV     R4,#00H
003A 7D0A              MOV     R5,#0AH
003C 120000      E     LCALL   ?C?SIDIV
003F AF05              MOV     R7,AR5
0041 AE00        R     MOV     R6,i
0043 0500        R     INC     i
0045 7400        R     MOV     A,#LOW buf
0047 2E                ADD     A,R6
0048 F8                MOV     R0,A
0049 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 194
004B AE00        R     MOV     R6,dat
004D AF00        R     MOV     R7,dat+01H
004F 7C00              MOV     R4,#00H
0051 7D0A              MOV     R5,#0AH
0053 120000      E     LCALL   ?C?SIDIV
0056 8E00        R     MOV     dat,R6
0058 8F00        R     MOV     dat+01H,R7
                                           ; SOURCE LINE # 195
005A D3                SETB    C
005B E500        R     MOV     A,dat+01H
005D 9400              SUBB    A,#00H
005F E500        R     MOV     A,dat
0061 6480              XRL     A,#080H
0063 9480              SUBB    A,#080H
0065 50CD              JNC     ?C0047
                                           ; SOURCE LINE # 196
0067 E500        R     MOV     A,i
0069 2500        R     ADD     A,len
006B F500        R     MOV     len,A
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 14  

006D         ?C0048:
                                           ; SOURCE LINE # 197
006D AF00        R     MOV     R7,i
006F 1500        R     DEC     i
0071 D3                SETB    C
0072 EF                MOV     A,R7
0073 6480              XRL     A,#080H
0075 9480              SUBB    A,#080H
0077 401D              JC      ?C0049
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
0079 7400        R     MOV     A,#LOW buf
007B 2500        R     ADD     A,i
007D F8                MOV     R0,A
007E E6                MOV     A,@R0
007F 2430              ADD     A,#030H
0081 FF                MOV     R7,A
0082 AB00        R     MOV     R3,str
0084 0500        R     INC     str+02H
0086 E500        R     MOV     A,str+02H
0088 AA00        R     MOV     R2,str+01H
008A 7002              JNZ     ?C0077
008C 0500        R     INC     str+01H
008E         ?C0077:
008E 14                DEC     A
008F F9                MOV     R1,A
0090 EF                MOV     A,R7
0091 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 200
0094 80D7              SJMP    ?C0048
0096         ?C0049:
                                           ; SOURCE LINE # 201
0096 AB00        R     MOV     R3,str
0098 AA00        R     MOV     R2,str+01H
009A A900        R     MOV     R1,str+02H
009C E4                CLR     A
009D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 202
00A0 AF00        R     MOV     R7,len
                                           ; SOURCE LINE # 203
00A2 22                RET     
             ; FUNCTION _IntToString (END)

             ; FUNCTION _ConfigTimer0 (BEGIN)
                                           ; SOURCE LINE # 204
;---- Variable 'ms' assigned to Register 'R2/R3' ----
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 208
0000 750000      R     MOV     tmp+03H,#00H
0003 750010      R     MOV     tmp+02H,#010H
0006 75000E      R     MOV     tmp+01H,#0EH
0009 750000      R     MOV     tmp,#00H
                                           ; SOURCE LINE # 209
000C E4                CLR     A
000D FC                MOV     R4,A
000E FD                MOV     R5,A
000F AB00        R     MOV     R3,tmp+03H
0011 AA00        R     MOV     R2,tmp+02H
0013 A900        R     MOV     R1,tmp+01H
0015 A800        R     MOV     R0,tmp
0017 120000      E     LCALL   ?C?LMUL
001A E4                CLR     A
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 15  

001B 7BE8              MOV     R3,#0E8H
001D 7A03              MOV     R2,#03H
001F F9                MOV     R1,A
0020 F8                MOV     R0,A
0021 120000      E     LCALL   ?C?ULDIV
0024 8F00        R     MOV     tmp+03H,R7
0026 8E00        R     MOV     tmp+02H,R6
0028 8D00        R     MOV     tmp+01H,R5
002A 8C00        R     MOV     tmp,R4
                                           ; SOURCE LINE # 210
002C C3                CLR     C
002D E4                CLR     A
002E 9500        R     SUBB    A,tmp+03H
0030 F500        R     MOV     tmp+03H,A
0032 E4                CLR     A
0033 9500        R     SUBB    A,tmp+02H
0035 F500        R     MOV     tmp+02H,A
0037 7401              MOV     A,#01H
0039 9500        R     SUBB    A,tmp+01H
003B F500        R     MOV     tmp+01H,A
003D E4                CLR     A
003E 9500        R     SUBB    A,tmp
0040 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 211
0042 E500        R     MOV     A,tmp+03H
0044 240C              ADD     A,#0CH
0046 F500        R     MOV     tmp+03H,A
0048 E4                CLR     A
0049 3500        R     ADDC    A,tmp+02H
004B F500        R     MOV     tmp+02H,A
004D E4                CLR     A
004E 3500        R     ADDC    A,tmp+01H
0050 F500        R     MOV     tmp+01H,A
0052 E4                CLR     A
0053 3500        R     ADDC    A,tmp
0055 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 212
0057 AF00        R     MOV     R7,tmp+03H
0059 AE00        R     MOV     R6,tmp+02H
005B AD00        R     MOV     R5,tmp+01H
005D FC                MOV     R4,A
005E 7808              MOV     R0,#08H
0060 120000      E     LCALL   ?C?ULSHR
0063 8F00        R     MOV     T0RH,R7
                                           ; SOURCE LINE # 213
0065 850000      R     MOV     T0RL,tmp+03H
                                           ; SOURCE LINE # 214
0068 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 215
006B 438901            ORL     TMOD,#01H
                                           ; SOURCE LINE # 216
006E 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 217
0071 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 218
0074 D2A9              SETB    ET0
                                           ; SOURCE LINE # 219
0076 D28C              SETB    TR0
                                           ; SOURCE LINE # 220
0078 22                RET     
             ; FUNCTION _ConfigTimer0 (END)

C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 16  

             ; FUNCTION InterruptTimer0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 224
0004 D2A0              SETB    led0
                                           ; SOURCE LINE # 225
0006 D2A1              SETB    led1
                                           ; SOURCE LINE # 226
0008 D2A2              SETB    led2
                                           ; SOURCE LINE # 228
000A E500        R     MOV     A,j
000C B40102            CJNE    A,#01H,?C0052
000F C2A0              CLR     led0
0011         ?C0052:
                                           ; SOURCE LINE # 229
0011 E500        R     MOV     A,j
0013 B40202            CJNE    A,#02H,?C0053
0016 C2A1              CLR     led1
0018         ?C0053:
                                           ; SOURCE LINE # 230
0018 E500        R     MOV     A,j
001A B40302            CJNE    A,#03H,?C0054
001D C2A2              CLR     led2
001F         ?C0054:
                                           ; SOURCE LINE # 231
001F 85008C      R     MOV     TH0,T0RH
                                           ; SOURCE LINE # 232
0022 85008A      R     MOV     TL0,T0RL
                                           ; SOURCE LINE # 233
0025 0500        R     INC     tmr1s
                                           ; SOURCE LINE # 234
0027 E500        R     MOV     A,tmr1s
0029 C3                CLR     C
002A 9464              SUBB    A,#064H
002C 4005              JC      ?C0056
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
002E 750000      R     MOV     tmr1s,#00H
                                           ; SOURCE LINE # 237
0031 D200        R     SETB    flag1s
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 240
0033         ?C0056:
0033 D0D0              POP     PSW
0035 D0E0              POP     ACC
0037 32                RETI    
             ; FUNCTION InterruptTimer0 (END)

             ; FUNCTION Int0Init (BEGIN)
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 245
0000 C288              CLR     IT0
                                           ; SOURCE LINE # 246
0002 D2A8              SETB    EX0
                                           ; SOURCE LINE # 247
0004 22                RET     
             ; FUNCTION Int0Init (END)

             ; FUNCTION Int0 (BEGIN)
0000 C0E0              PUSH    ACC
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 17  

0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C004              PUSH    AR4
0009 C005              PUSH    AR5
000B C006              PUSH    AR6
000D C007              PUSH    AR7
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 251
000F 750000      R     MOV     unset,#00H
0012 750000      R     MOV     unset+01H,#00H
                                           ; SOURCE LINE # 253
0015 20B00D            JB      keysub,?C0058
                                           ; SOURCE LINE # 255
0018 7F64              MOV     R7,#064H
001A 7E00              MOV     R6,#00H
001C 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 256
001F 750001      R     MOV     j,#01H
0022         ?C0059:
                                           ; SOURCE LINE # 257
0022 30B0FD            JNB     keysub,?C0059
                                           ; SOURCE LINE # 258
0025         ?C0058:
                                           ; SOURCE LINE # 259
0025 20B10D            JB      keyadd,?C0061
                                           ; SOURCE LINE # 261
0028 7F64              MOV     R7,#064H
002A 7E00              MOV     R6,#00H
002C 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 262
002F 750003      R     MOV     j,#03H
0032         ?C0062:
                                           ; SOURCE LINE # 263
0032 30B1FD            JNB     keyadd,?C0062
                                           ; SOURCE LINE # 264
0035         ?C0061:
                                           ; SOURCE LINE # 265
0035 20B31E            JB      keyauto,?C0069
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
0038 7F64              MOV     R7,#064H
003A 7E00              MOV     R6,#00H
003C 120000      R     LCALL   _delay
                                           ; SOURCE LINE # 269
003F E500        R     MOV     A,j
0041 6009              JZ      ?C0065
                                           ; SOURCE LINE # 270
0043 750000      R     MOV     j,#00H
                                           ; SOURCE LINE # 271
0046 C290              CLR     ENA
                                           ; SOURCE LINE # 272
0048 C2A1              CLR     led1
                                           ; SOURCE LINE # 273
004A 8007              SJMP    ?C0067
004C         ?C0065:
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
004C 750004      R     MOV     j,#04H
                                           ; SOURCE LINE # 276
004F D290              SETB    ENA
                                           ; SOURCE LINE # 277
0051 D2A1              SETB    led1
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 18  

                                           ; SOURCE LINE # 278
0053         ?C0067:
                                           ; SOURCE LINE # 279
0053 30B3FD            JNB     keyauto,?C0067
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0056         ?C0069:
0056 D007              POP     AR7
0058 D006              POP     AR6
005A D005              POP     AR5
005C D004              POP     AR4
005E D0D0              POP     PSW
0060 D0E0              POP     ACC
0062 32                RETI    
             ; FUNCTION Int0 (END)

C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 19  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
decT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0001H  2
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
keyauto. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
InterruptTimer0. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmr1s. . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_ConfigTimer0. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000BH  -----
  z. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
keysub . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
T0RH . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0003H  1
Start18B20 . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
intT . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0004H  2
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
T0RL . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  res. . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
unset. . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0007H  2
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
temp . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0009H  2
GetTemp. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 20  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


len. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000BH  1
flag1s . . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
_Get18B20Temp. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
key. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
Compare. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
ENA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
str. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000CH  12
Int0 . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
led0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
led1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
led2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
j. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0018H  1
led3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
_IntToString . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  dat. . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0003H  2
C51 COMPILER V9.57.0.0   MAIN                                                              06/16/2021 17:32:50 PAGE 21  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   CHAR     0005H  1
  len. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   ARRAY    0007H  6
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_LcdShowStr. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
Int0Init . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
InitLcd1602. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
keyadd . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    926    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
