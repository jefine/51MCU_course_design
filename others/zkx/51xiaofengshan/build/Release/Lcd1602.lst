C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\build\Release\Lcd1602.o
COMPILER INVOKED BY: E:\mdkArmkeil5\C51\BIN\C51.exe .\SRC\LCD1602.C PRINT(.\build\Release\Lcd1602.lst) OMF2 TABS(4) CODE
                    - NOCOND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(E:\mdkArmkeil5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OB
                    -JECT(.\build\Release\Lcd1602.o)

line level    source

   1          #include <reg52.h>
   2          #include "lcd.h"
   3          #define LCD1602_DB  P0
   4          
   5          /* 等待液晶准备好 */
   6          void LcdWaitReady()
   7          {
   8   1          unsigned char sta;
   9   1          
  10   1          LCD1602_DB = 0xFF;
  11   1          LCD1602_RS = 0;
  12   1          LCD1602_RW = 1;
  13   1          do {
  14   2              LCD1602_E = 1;
  15   2              sta = LCD1602_DB; //读取状态字
  16   2              LCD1602_E = 0;
  17   2          } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到其等于0为止
  18   1      }
  19          /* 向LCD1602液晶写入一字节命令，cmd-待写入命令值 */
  20          void LcdWriteCmd(unsigned char cmd)
  21          {
  22   1          LcdWaitReady();
  23   1          LCD1602_RS = 0;
  24   1          LCD1602_RW = 0;
  25   1          LCD1602_DB = cmd;
  26   1          LCD1602_E  = 1;
  27   1          LCD1602_E  = 0;
  28   1      }
  29          /* 向LCD1602液晶写入一字节数据，dat-待写入数据值 */
  30          void LcdWriteDat(unsigned char dat)
  31          {
  32   1          LcdWaitReady();
  33   1          LCD1602_RS = 1;
  34   1          LCD1602_RW = 0;
  35   1          LCD1602_DB = dat;
  36   1          LCD1602_E  = 1;
  37   1          LCD1602_E  = 0;
  38   1      }
  39          /* 设置显示RAM起始地址，亦即光标位置，(x,y)-对应屏幕上的字符坐标 */
  40          void LcdSetCursor(unsigned char x, unsigned char y)
  41          {
  42   1          unsigned char addr;
  43   1          
  44   1          if (y == 0)  //由输入的屏幕坐标计算显示RAM的地址
  45   1              addr = 0x00 + x;  //第一行字符地址从0x00起始
  46   1          else
  47   1              addr = 0x40 + x;  //第二行字符地址从0x40起始
  48   1          LcdWriteCmd(addr | 0x80);  //设置RAM地址
  49   1      }
  50          /* 在液晶上显示字符串，(x,y)-对应屏幕上的起始坐标，str-字符串指针 */
  51          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str)
  52          {
  53   1          LcdSetCursor(x, y);   //设置起始地址
C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 2   

  54   1          while (*str != '\0')  //连续写入字符串数据，直到检测到结束符
  55   1          {
  56   2              LcdWriteDat(*str++);
  57   2          }
  58   1      }
  59          /* 初始化1602液晶 */
  60          void InitLcd1602()
  61          {
  62   1          LcdWriteCmd(0x38);  //16*2显示，5*7点阵，8位数据接口
  63   1          LcdWriteCmd(0x0C);  //显示器开，光标关闭
  64   1          LcdWriteCmd(0x06);  //文字不动，地址自动+1
  65   1          LcdWriteCmd(0x01);  //清屏
  66   1      }
C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION LcdWaitReady (BEGIN)
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 10
0000 7580FF            MOV     P0,#0FFH
                                           ; SOURCE LINE # 11
0003 C2A6              CLR     LCD1602_RS
                                           ; SOURCE LINE # 12
0005 D2A5              SETB    LCD1602_RW
0007         ?C0003:
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
0007 D2A7              SETB    LCD1602_E
                                           ; SOURCE LINE # 15
;---- Variable 'sta' assigned to Register 'R7' ----
0009 AF80              MOV     R7,P0
                                           ; SOURCE LINE # 16
000B C2A7              CLR     LCD1602_E
                                           ; SOURCE LINE # 17
000D EF                MOV     A,R7
000E 20E7F6            JB      ACC.7,?C0003
                                           ; SOURCE LINE # 18
0011 22                RET     
             ; FUNCTION LcdWaitReady (END)

             ; FUNCTION _LcdWriteCmd (BEGIN)
                                           ; SOURCE LINE # 20
;---- Variable 'cmd' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0002 120000      R     LCALL   LcdWaitReady
                                           ; SOURCE LINE # 23
0005 C2A6              CLR     LCD1602_RS
                                           ; SOURCE LINE # 24
0007 C2A5              CLR     LCD1602_RW
                                           ; SOURCE LINE # 25
0009 8E80              MOV     P0,R6
                                           ; SOURCE LINE # 26
000B D2A7              SETB    LCD1602_E
                                           ; SOURCE LINE # 27
000D C2A7              CLR     LCD1602_E
                                           ; SOURCE LINE # 28
000F 22                RET     
             ; FUNCTION _LcdWriteCmd (END)

             ; FUNCTION _LcdWriteDat (BEGIN)
                                           ; SOURCE LINE # 30
;---- Variable 'dat' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0002 120000      R     LCALL   LcdWaitReady
                                           ; SOURCE LINE # 33
0005 D2A6              SETB    LCD1602_RS
                                           ; SOURCE LINE # 34
0007 C2A5              CLR     LCD1602_RW
                                           ; SOURCE LINE # 35
0009 8E80              MOV     P0,R6
C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 4   

                                           ; SOURCE LINE # 36
000B D2A7              SETB    LCD1602_E
                                           ; SOURCE LINE # 37
000D C2A7              CLR     LCD1602_E
                                           ; SOURCE LINE # 38
000F 22                RET     
             ; FUNCTION _LcdWriteDat (END)

             ; FUNCTION _LcdSetCursor (BEGIN)
                                           ; SOURCE LINE # 40
;---- Variable 'addr' assigned to Register 'R4' ----
;---- Variable 'x' assigned to Register 'R7' ----
;---- Variable 'y' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 44
0000 ED                MOV     A,R5
0001 7004              JNZ     ?C0007
                                           ; SOURCE LINE # 45
0003 AC07              MOV     R4,AR7
0005 8004              SJMP    ?C0008
0007         ?C0007:
                                           ; SOURCE LINE # 47
0007 EF                MOV     A,R7
0008 2440              ADD     A,#040H
000A FC                MOV     R4,A
000B         ?C0008:
                                           ; SOURCE LINE # 48
000B EC                MOV     A,R4
000C 4480              ORL     A,#080H
000E FF                MOV     R7,A
000F 020000      R     LJMP    _LcdWriteCmd
             ; FUNCTION _LcdSetCursor (END)

             ; FUNCTION _LcdShowStr (BEGIN)
                                           ; SOURCE LINE # 51
0000 8B00        R     MOV     str,R3
0002 8A00        R     MOV     str+01H,R2
0004 8900        R     MOV     str+02H,R1
;---- Variable 'y' assigned to Register 'R5' ----
;---- Variable 'x' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0006 120000      R     LCALL   _LcdSetCursor
0009         ?C0010:
                                           ; SOURCE LINE # 54
0009 AB00        R     MOV     R3,str
000B AA00        R     MOV     R2,str+01H
000D A900        R     MOV     R1,str+02H
000F 120000      E     LCALL   ?C?CLDPTR
0012 6013              JZ      ?C0012
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0014 0500        R     INC     str+02H
0016 E500        R     MOV     A,str+02H
0018 7002              JNZ     ?C0014
001A 0500        R     INC     str+01H
001C         ?C0014:
001C 14                DEC     A
001D F9                MOV     R1,A
001E 120000      E     LCALL   ?C?CLDPTR
0021 FF                MOV     R7,A
0022 120000      R     LCALL   _LcdWriteDat
C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 5   

                                           ; SOURCE LINE # 57
0025 80E2              SJMP    ?C0010
                                           ; SOURCE LINE # 58
0027         ?C0012:
0027 22                RET     
             ; FUNCTION _LcdShowStr (END)

             ; FUNCTION InitLcd1602 (BEGIN)
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
0000 7F38              MOV     R7,#038H
0002 120000      R     LCALL   _LcdWriteCmd
                                           ; SOURCE LINE # 63
0005 7F0C              MOV     R7,#0CH
0007 120000      R     LCALL   _LcdWriteCmd
                                           ; SOURCE LINE # 64
000A 7F06              MOV     R7,#06H
000C 120000      R     LCALL   _LcdWriteCmd
                                           ; SOURCE LINE # 65
000F 7F01              MOV     R7,#01H
0011 020000      R     LJMP    _LcdWriteCmd
             ; FUNCTION InitLcd1602 (END)

C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
LCD1602_RS . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
LcdWaitReady . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  sta. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
LCD1602_RW . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_LcdWriteCmd . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  cmd. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
_LcdWriteDat . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
LCD1602_E. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
_LcdSetCursor. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  addr . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
C51 COMPILER V9.57.0.0   LCD1602                                                           05/25/2021 16:44:09 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_LcdShowStr. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  x. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  y. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  str. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
InitLcd1602. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
